
(is-type show-type
         (c/fn-c []
                 {1 (c/fn-arity 'fn-arity0
                                (c/params-list [(c/param 'fn-arity0 0)])
                                (c/param 'fn-arity0 0))}))

(is-type maybe
         (c/fn-c []
                 {1 (c/fn-arity 'fn-arity3
                                (c/params-list [(c/param 'fn-arity3 0)])
                                (c/MaybeConstraint (c/param 'fn-arity3 0)))}))

(is-type (maybe 9)
         (c/MaybeConstraint (c/IntegerConstraint 9 2147483647 -2147483648)))

(is-type (maybe 'a)
         (c/MaybeConstraint (c/SymbolConstraint 'a)))

(is-type int-max
         (c/IntegerConstraint 2147483647 2147483647 -2147483648))

(is-type mutate-vect-conj
         (c/FnConstraint
          []
          {2 (c/fn-arity 'fn-arity9
                         (c/params-list [(c/compute-c [(c/param 'fn-arity9 0)
                                                       c/vect-constraint])
                                        (c/param 'fn-arity9 1)])
                         (c/vect-c []
                                   (c/CollectionOf
                                    (c/SumConstraint
                                     [(c/param 'fn-arity9 1)
                                      (c/ComputedConstraint
                                       [(c/param 'fn-arity9 0)
                                        c/vect-constraint
                                        c/inner-type-of]
                                       empty-list 'v "")]
                                     empty-list c/no-symbol "")
                                    empty-list c/no-symbol "")))}
          empty-list 'mutate-vect-conj ""))

(is-type (mutate-vect-conj ['x] 8)
         (c/vect-c [] (c/CollectionOf
                       (c/SumConstraint
                        [(c/IntegerConstraint 8 2147483647 -2147483648)
                         (c/SymbolConstraint 'x)]
                        empty-list c/no-symbol "")
                       empty-list c/no-symbol "")))

(is-type list-count
         (c/FnConstraint
          []
          {1 (c/fn-arity 'fn-arity10
                         (c/params-list [(c/ComputedConstraint
                                         [(c/param 'fn-arity10 0)
                                          c/list-constraint]
                                         empty-list 'l "")])
                         (c/IntegerConstraint c/no-int 2147483647 -2147483648))}
          empty-list 'list-count ""))

(is-type list-map
         (c/fn-c []
                 {2 (c/fn-arity 'fn-arity11
                                (c/params-list [(c/ComputedConstraint
                                                 [(c/param 'fn-arity11 0)
                                                  (c/list-c [] (c/CollectionOf
                                                                (c/ComputedConstraint
                                                                 [(c/param 'fn-arity11 1)
                                                                  (c/TypeOp c/arg-of-op 0 empty-list)]
                                                                 empty-list 'lf "")
                                                                empty-list c/no-symbol ""))]
                                                 empty-list 'l "")
                                                (c/param 'fn-arity11 1)])
                                (c/list-c [] (c/CollectionOf
                                              (c/ComputedConstraint
                                               [(c/param 'fn-arity11 1)
                                                (c/TypeOp c/call-value-op
                                                          [(c/ComputedConstraint
                                                            [(c/param 'fn-arity11 0)
                                                             (c/list-c [] (c/CollectionOf
                                                                           (c/ComputedConstraint
                                                                            [(c/param 'fn-arity11 1)
                                                                             (c/TypeOp c/arg-of-op 0 empty-list)]
                                                                            empty-list c/no-symbol "")
                                                                           empty-list c/no-symbol ""))
                                                             (c/TypeOp c/inner-type-of-op [] empty-list)]
                                                            empty-list c/no-symbol "")] empty-list)]
                                               empty-list 'lf "")
                                              empty-list c/no-symbol "")
                                          empty-list c/no-symbol ""))}
                 empty-list 'list-map ""))

(is-type (list-map '(1 a 3) (fn [x] x))
         (c/list-c [] (c/CollectionOf
                               (c/SumConstraint
                                [(c/IntegerConstraint 1 2147483647 -2147483648)
                                 (c/SymbolConstraint 'a)
                                 (c/IntegerConstraint 3 2147483647 -2147483648)]
                                empty-list c/no-symbol "")
                               empty-list c/no-symbol "") empty-list c/no-symbol ""))

(is-type add-numbers
         (c/FnConstraint
          []
          {2 (c/fn-arity 'fn-arity13
                         (c/params-list [(c/ComputedConstraint
                                         [(c/param 'fn-arity13 0)
                                          (c/IntegerConstraint c/no-int 2147483647 -2147483648)]
                                         empty-list 'x "")
                                        (c/ComputedConstraint
                                         [(c/param 'fn-arity13 1)
                                          (c/IntegerConstraint c/no-int 2147483647 -2147483648)]
                                         empty-list 'y "")])
                         (c/IntegerConstraint c/no-int 2147483647 -2147483648))}
          empty-list 'add-numbers ""))

(is-type cons
         (c/FnConstraint
          []
          {2 (c/fn-arity 'fn-arity28
                         (c/params-list [(c/param 'fn-arity28 0)
                                        (c/ComputedConstraint
                                         [(c/param 'fn-arity28 1)
                                          c/list-constraint]
                                         empty-list 'l "")])
                         (c/list-c [(c/param 'fn-arity28 0)]
                                           (c/ComputedConstraint
                                            [(c/param 'fn-arity28 1)
                                             c/list-constraint]
                                            empty-list 'l "")
                                           empty-list 'result ""))}
          empty-list 'cons ""))

(is-type empty-list
         c/empty-list-constraint)

(is-type (cons 'a empty-list)
         (c/list-c [(c/SymbolConstraint 'a)]
                           c/no-tail empty-list c/no-symbol ""))

(is-type (cons 1 (cons 'a empty-list))
         (c/list-c [(c/IntegerConstraint 1 2147483647 -2147483648)
                            (c/SymbolConstraint 'a)]
                           c/no-tail empty-list c/no-symbol ""))

(is-type maybe-map
         (c/FnConstraint
          []
          {2 (c/fn-arity 'fn-arity36
                         (c/params-list [(c/ComputedConstraint
                                         [(c/param 'fn-arity36 0)
                                          (c/MaybeConstraint
                                           (c/ComputedConstraint
                                            [(c/param 'fn-arity36 1)
                                             (c/TypeOp c/arg-of-op 0 empty-list)]
                                            empty-list c/no-symbol "")
                                           empty-list 'mv "")]
                                         empty-list 'mv "")
                                        (c/param 'fn-arity36 1)])
                         (c/MaybeConstraint
                          (c/ComputedConstraint
                           [(c/param 'fn-arity36 1)
                            (c/TypeOp c/call-value-op
                                      [(c/ComputedConstraint
                                        [(c/param 'fn-arity36 0)
                                         (c/MaybeConstraint
                                          (c/ComputedConstraint
                                           [(c/param 'fn-arity36 1)
                                            (c/TypeOp c/arg-of-op 0 empty-list)]
                                           empty-list c/no-symbol ""))
                                         (c/TypeOp c/inner-type-of-op [] empty-list)]
                                        empty-list c/no-symbol "")] empty-list)]
                           empty-list c/no-symbol "")
                          empty-list 'mv ""))}
          empty-list 'maybe-map ""))

(is-type vector
         (c/fn-c []
                 {c/variadic (c/fn-arity 'fn-arity95
                                         (c/list-c [] (c/ComputedConstraint
                                                       [(c/param 'fn-arity95 0)
                                                        c/list-constraint]
                                                       empty-list 'l ""))
                                         (c/ComputedConstraint
                                          [(c/param 'fn-arity95 0)
                                           c/list-constraint
                                           (c/TypeOp c/vect-from-op [] empty-list)]
                                          empty-list 'l ""))}
                 empty-list 'vector ""))

(is-type (maybe-map (maybe 3) vector)
         (c/MaybeConstraint
          (c/vect-c [(c/IntegerConstraint 3 2147483647 -2147483648)]
           c/no-tail empty-list c/no-symbol "")))

(is-type ['x 'y 4]
         (c/vect-c [(c/SymbolConstraint 'x)
                              (c/SymbolConstraint 'y)
                              (c/IntegerConstraint 4 2147483647 -2147483648)]
                             c/no-tail empty-list c/no-symbol ""))

(is-type (maybe-map (maybe 's) (fn [x]
                                 (add-numbers 1 x)))
         c/bottom-type)

(is-type (maybe-map (maybe 8) (fn [x]
                                (add-numbers 1 x)))
         (c/MaybeConstraint (c/IntegerConstraint c/no-int 2147483647 -2147483648)))

(is-type subs
         (c/FnConstraint
          []
          {2 (c/fn-arity 'fn-arity44
                         (c/params-list [(c/ComputedConstraint
                                         [(c/param 'fn-arity44 0)
                                          c/string-constraint]
                                         empty-list 'src "")
                                        (c/ComputedConstraint
                                         [(c/param 'fn-arity44 1)
                                          (c/IntegerConstraint c/no-int 2147483647 0)]
                                         empty-list 'index "")])
                         (c/SubStrConstraint c/no-string empty-list c/no-symbol ""))
           3 (c/fn-arity 'fn-arity43
                         (c/params-list [(c/ComputedConstraint
                                         [(c/param 'fn-arity43 0)
                                          c/string-constraint]
                                         empty-list 'src "")
                                        (c/ComputedConstraint
                                         [(c/param 'fn-arity43 1)
                                          (c/IntegerConstraint c/no-int 2147483647 0)]
                                         empty-list 'index "")
                                        (c/ComputedConstraint
                                         [(c/param 'fn-arity43 2)
                                          (c/IntegerConstraint c/no-int 2147483647 0)]
                                         empty-list 'length "")])
                         (c/SubStrConstraint c/no-string))}
          empty-list 'subs ""))

(is-type symbol
         (c/FnConstraint []
                         {1 (c/fn-arity 'fn-arity45
                                        (c/params-list [(c/ComputedConstraint
                                                        [(c/param 'fn-arity45 0)
                                                         c/string-constraint]
                                                        empty-list 'sym-str "")])
                                        (c/SymbolConstraint c/no-symbol))}
                         empty-list 'symbol ""))

(is-type future
         (c/FnConstraint []
                         {1 (c/fn-arity 'fn-arity49
                                        (c/params-list [(c/ComputedConstraint
                                                        [(c/param 'fn-arity49 0)
                                                         (.required-arities c/fn-constraint [0])]
                                                        empty-list 'f "")])
                                        c/future-constraint)
                          0 (c/fn-arity 'fn-arity50
                                        c/empty-list-constraint
                                        c/future-constraint)}
                         empty-list 'future ""))

;; TODO put in after hash-maps are folded into ReifiedConstraint
;; (is-type (#impl hash-vec)
;;          (c/FnConstraint
;;           []
;;           {2 (c/fn-arity 'hash-vec
;;                          (c/list-c
;;                           [(c/ComputedConstraint
;;                             [(c/param 'hash-vec 0 empty-list 'm "")
;;                              (c/SumConstraint
;;                               [(c/HashMapConstraint 11 {} c/top-type c/top-type empty-list c/no-symbol "")
;;                                (c/HashMapConstraint 12 {} c/top-type c/top-type empty-list c/no-symbol "")
;;                                (c/HashMapConstraint 13 {} c/top-type c/top-type empty-list c/no-symbol "")]
;;                               empty-list 'm "")]
;;                             empty-list 'm "")
;;                            (c/ComputedConstraint
;;                             [(c/param 'hash-vec 1 empty-list 'v "")
;;                              (c/vect-c [] (c/CollectionOf c/top-type empty-list c/no-symbol "")
;;                                                  empty-list 'v "")]
;;                             empty-list 'v "")]
;;                           c/no-tail empty-list c/no-symbol "")
;;                          (c/vect-c [] (c/CollectionOf c/top-type empty-list c/no-symbol "")
;;                                              empty-list c/no-symbol ""))}
;;           empty-list c/no-symbol ""))

(is-type comp
         (c/FnConstraint
          []
          {c/variadic (c/fn-arity 'fn-arity74
                                  (c/list-c [(c/param 'fn-arity74 0)]
                                                    (c/ComputedConstraint
                                                     [(c/param 'fn-arity74 1)
                                                      c/list-constraint
                                                      c/seq-constraint]
                                                     empty-list 'xs "") empty-list c/no-symbol "")
                                  c/top-type)
           1 (c/fn-arity 'fn-arity75
                         (c/params-list [(c/param 'fn-arity75 0)])
                         (c/param 'fn-arity75 0))}
          empty-list 'comp ""))

(is-type (#impl flat-map)
         (c/FnConstraint
          []
          {2 (c/fn-arity 'flat-map
                         (c/params-list [(c/ComputedConstraint
                                         [(c/param 'flat-map 0)
                                          (c/CollectionOf
                                           (c/ComputedConstraint
                                            [(c/param 'flat-map 1)
                                             (.required-arities c/fn-constraint [1])
                                             (c/TypeOp c/arg-of-op 0 empty-list)]
                                            empty-list c/no-symbol "")
                                           empty-list 'x "")]
                                         empty-list 'x "")
                                        (c/ComputedConstraint
                                         [(c/param 'flat-map 1)
                                          (.required-arities c/fn-constraint [1])]
                                         empty-list 'f "")])
                         (c/ComputedConstraint
                          [(c/param 'flat-map 1)
                           (.required-arities c/fn-constraint [1])
                           (c/TypeOp c/call-value-op c/no-args empty-list)]
                          empty-list (symbol "#result") ""))}
          empty-list c/no-symbol ""))

(is-type (#impl map)
         (c/FnConstraint
          []
          {2 (c/fn-arity 'map
                         (c/params-list [(c/ComputedConstraint
                                         [(c/param 'map 0)
                                          (c/CollectionOf
                                           (c/ComputedConstraint
                                            [(c/param 'map 1)
                                             (c/TypeOp c/arg-of-op 0 empty-list)]
                                            empty-list c/no-symbol "")
                                           empty-list 'x "")]
                                         empty-list 'x "")
                                        (c/ComputedConstraint
                                         [(c/param 'map 1)
                                          (.required-arities c/fn-constraint [1])]
                                         empty-list 'f "")])
                         c/top-type)
           3 (c/fn-arity 'map
                         (c/params-list [(c/ComputedConstraint
                                         [(c/param 'map 0)
                                          (c/CollectionOf
                                           (c/ComputedConstraint
                                            [(c/param 'map 1)
                                             (c/TypeOp c/arg-of-op 0 empty-list)]
                                            empty-list c/no-symbol "")
                                           empty-list 'x "")]
                                         empty-list 'x "")
                                        (c/ComputedConstraint
                                         [(c/param 'map 1)
                                          (.required-arities c/fn-constraint [1])]
                                         empty-list 'f "")
                                        (c/param 'map 2)])
                         (c/SumConstraint
                          [(c/ComputedConstraint
                            [(c/param 'map 2)
                             (c/TypeOp c/call-value-op c/no-args empty-list)]
                            empty-list c/no-symbol "")

                           (c/ComputedConstraint
                            [(c/param 'map 1)
                             (.required-arities c/fn-constraint [1])
                             (c/TypeOp c/call-value-op c/no-args empty-list)]
                            empty-list c/no-symbol "")] empty-list (symbol "#result") ""))}
          empty-list c/no-symbol ""))

(is-type (#impl extend)
         (c/FnConstraint []
                         {2 (c/fn-arity 'extend
                                        (c/params-list [(c/param 'extend 0)
                                                       (c/ComputedConstraint
                                                        [(c/param 'extend 1)
                                                         (.required-arities c/fn-constraint [1])]
                                                        empty-list 'f "")])
                                        c/top-type)}
                         empty-list c/no-symbol ""))

(is-type (#impl extract)
         (c/FnConstraint []
                         {1 (c/fn-arity 'extract
                                        (c/params-list [(c/param 'extract 0)])
                                        (c/ComputedConstraint
                                         [(c/param 'extract 0)
                                          c/inner-type-of]
                                         empty-list 'result ""))}
                         empty-list c/no-symbol ""))

(is-type (#impl duplicate)
         (c/FnConstraint
          []
          {1 (c/fn-arity 'duplicate
                         (c/params-list [(c/param 'duplicate 0)])
                         c/top-type)}
          empty-list c/no-symbol ""))

(is-type Predicate
         (c/ComputedConstraint
          [(.required-arities c/fn-constraint [1])
           (c/intersect c/fn-constraint
                        (c/CollectionOf c/maybe-constraint empty-list c/no-symbol ""))]
          empty-list 'Predicate ""))

(defn tg [f y]
  ;; TODO: this shows the problem of intersecting two ComputedConstraints that have TypeOps
  ;; !returns (inner-type-of (type-of-result f))
  (extract (f y)))

;; TODO: put back in later
;; (is-type tg
;;          (c/FnConstraint
;;           []
;;           {2 (c/fn-arity 'fn-arity77
;;                          (c/list-c [(c/param 'fn-arity77 0 empty-list 'f "")
;;                                             (c/param 'fn-arity77 1 empty-list 'y "")]
;;                                            c/no-tail empty-list c/no-symbol "")
;;                          (c/ComputedConstraint
;;                           [(c/param 'fn-arity77 0 empty-list 'f "")
;;                            (c/TypeOp c/call-value-op [(c/param 'fn-arity77 1 empty-list c/no-symbol "")]
;;                                      empty-list)
;;                            c/inner-type-of]
;;                           empty-list 'f ""))}
;;           empty-list 'tg ""))

(is-type (tg maybe 8)
         (c/ReifiedConstraint 1 'Integer
                              {}
                              {'min -2147483648 'max 2147483647 'static-value 8}
                              (c/FnConstraint [] {} empty-list c/no-symbol "")
                              empty-list  c/no-symbol ""))

(is-type (#impl filter)
         (c/FnConstraint
          []
          {2 (c/fn-arity 'filter
                         (c/params-list [(c/ComputedConstraint
                                         [(c/param 'filter 0)
                                          (c/CollectionOf
                                           (c/ComputedConstraint
                                            [(c/param 'filter 1)
                                             (.required-arities c/fn-constraint [1])
                                             (c/intersect c/fn-constraint
                                                          (c/CollectionOf c/maybe-constraint
                                                                          empty-list c/no-symbol ""))
                                             (c/TypeOp c/arg-of-op 0 empty-list)]
                                            empty-list c/no-symbol "")
                                           empty-list 'coll "")]
                                         empty-list 'coll "")
                                        (c/ComputedConstraint
                                         [(c/param 'filter 1)
                                          (.required-arities c/fn-constraint [1])
                                          (c/intersect c/fn-constraint
                                                       (c/CollectionOf c/maybe-constraint
                                                                       empty-list c/no-symbol ""))]
                                         empty-list 'Predicate "")])
                         (c/CollectionOf
                          (c/ComputedConstraint
                           [(c/param 'filter 1)
                            (.required-arities c/fn-constraint [1])
                            (c/intersect c/fn-constraint
                                         (c/CollectionOf c/maybe-constraint
                                                         empty-list c/no-symbol ""))
                            (c/TypeOp c/arg-of-op 0 empty-list)]
                           empty-list c/no-symbol "")
                          empty-list (symbol "#result") ""))}
          empty-list c/no-symbol ""))

(defn tf [x]
  (instance? Symbol x))

(is-type (#impl reduce)
         (c/FnConstraint
          []
          {3 (c/fn-arity 'reduce
                         (c/params-list [(c/ComputedConstraint 
                                         [(c/param 'reduce 0)
                                          (c/CollectionOf
                                           (c/ComputedConstraint 
                                            [(c/param 'reduce 2)
                                             (.required-arities c/fn-constraint [2])
                                             (c/TypeOp c/arg-of-op 1 empty-list)]
                                            empty-list c/no-symbol "")
                                           empty-list 'coll "")]
                                         empty-list 'coll "")
                                        (c/param 'reduce 1)
                                        (c/ComputedConstraint 
                                         [(c/param 'reduce 2)
                                          (.required-arities c/fn-constraint [2])]
                                         empty-list 'f "")])
                         (c/SumConstraint
                          [(c/param 'reduce 1)
                           (c/ComputedConstraint 
                            [(c/param 'reduce 2)
                             (.required-arities c/fn-constraint [2])
                             (c/TypeOp c/call-value-op [(c/SumConstraint
                                                         [(c/param 'reduce 1)
                                                          (c/ComputedConstraint 
                                                           [(c/param 'reduce 2)
                                                            (.required-arities c/fn-constraint [2])
                                                            (c/TypeOp c/call-value-op c/no-args empty-list)]
                                                           empty-list c/no-symbol "")] empty-list c/no-symbol "")
                                                        (c/ComputedConstraint 
                                                         [(c/param 'reduce 0)
                                                          (c/CollectionOf
                                                           (c/ComputedConstraint 
                                                            [(c/param 'reduce 2)
                                                             (.required-arities c/fn-constraint [2])
                                                             (c/TypeOp c/arg-of-op 1 empty-list)]
                                                            empty-list c/no-symbol "")
                                                           empty-list 'coll "")
                                                          (c/TypeOp c/inner-type-of-op [] empty-list)]
                                                         empty-list c/no-symbol "")]
                                       empty-list)]
                            empty-list c/no-symbol "")]
                          empty-list (symbol "#result") ""))}
          empty-list c/no-symbol ""))

(is-type (#impl seq)
         (c/FnConstraint []
                         {1 (c/fn-arity 'seq
                                        (c/params-list [(c/param 'seq 0)])
                                        (c/ComputedConstraint
                                         [(c/param 'seq 0)
                                          (c/TypeOp c/list-from-op [] empty-list )]
                                         empty-list 'result ""))}
                         empty-list c/no-symbol ""))

(is-type (#impl vec)
         (c/FnConstraint []
                         {1 (c/fn-arity 'vec
                                        (c/params-list [(c/param 'vec 0)])
                                        (c/ComputedConstraint
                                         [(c/param 'vec 0)
                                          (c/TypeOp c/vect-from-op [] empty-list)]
                                         empty-list 'result ""))}
                         empty-list c/no-symbol ""))

(is-type (#impl first)
         (c/FnConstraint []
                         {1 (c/fn-arity 'first
                                        (c/params-list [(c/param 'first 0)])
                                        (c/ComputedConstraint
                                         [(c/param 'first 0)
                                          (c/TypeOp c/first-of-op [] empty-list)]
                                         empty-list 'result ""))}
                         empty-list c/no-symbol ""))

(is-type (#impl last)
         (c/FnConstraint []
                         {1 (c/fn-arity 'last
                                        (c/params-list [(c/param 'last 0)])
                                        (c/ComputedConstraint
                                         [(c/param 'last 0)
                                          (c/TypeOp c/last-of-op [] empty-list)]
                                         empty-list 'result ""))}
                         empty-list c/no-symbol ""))

(is-type (#impl rest)
         (c/FnConstraint []
                         {1 (c/fn-arity 'rest
                                        (c/params-list [(c/param 'rest 0)])
                                        (c/ComputedConstraint
                                         [(c/param 'rest 0)
                                          (c/TypeOp c/rest-of-op [] empty-list)]
                                         empty-list 'result ""))}
                         empty-list c/no-symbol ""))

(is-type (#impl butlast)
         (c/FnConstraint []
                         {1 (c/fn-arity 'butlast
                                        (c/params-list [(c/param 'butlast 0)])
                                        (c/ComputedConstraint
                                         [(c/param 'butlast 0)
                                          (c/TypeOp c/butlast-of-op [] empty-list)]
                                         empty-list 'result ""))}
                         empty-list c/no-symbol ""))

(is-type (#impl split)
         (c/FnConstraint
          []
          {2 (c/fn-arity 'split
                         (c/params-list [(c/param 'split 0)
                                        (c/ComputedConstraint
                                         [(c/param 'split 1)
                                          (c/IntegerConstraint c/no-int 2147483647 -2147483648
                                                               empty-list c/no-symbol "")]
                                         empty-list 'n "")])
                         (c/vect-c [(c/CollectionOf
                                               (c/ComputedConstraint
                                                [(c/param 'split 0)
                                                 c/inner-type-of]
                                                empty-list c/no-symbol "")
                                               empty-list c/no-symbol "")
                                              (c/CollectionOf
                                               (c/ComputedConstraint
                                                [(c/param 'split 0)
                                                 c/inner-type-of]
                                                empty-list c/no-symbol "")
                                               empty-list c/no-symbol "")]
                                             c/no-tail empty-list 'result ""))}
          empty-list c/no-symbol ""))

(is-type (#impl split-with)
         (c/FnConstraint
          []
          {2 (c/fn-arity 'split-with
                         (c/params-list [(c/param 'split-with 0)
                                        (c/ComputedConstraint
                                         [(c/param 'split-with 1)
                                          (.required-arities c/fn-constraint [1])
                                          (c/intersect c/fn-constraint
                                                       (c/CollectionOf c/maybe-constraint empty-list
                                                                       c/no-symbol ""))]
                                         empty-list 'Predicate "")])
                         (c/vect-c [(c/CollectionOf
                                               (c/ComputedConstraint
                                                [(c/param 'split-with 0)
                                                 (c/TypeOp c/inner-type-of-op [] empty-list)]
                                                empty-list c/no-symbol "")
                                               empty-list c/no-symbol "")
                                              (c/CollectionOf
                                               (c/ComputedConstraint
                                                [(c/param 'split-with 0)
                                                 (c/TypeOp c/inner-type-of-op [] empty-list)]
                                                empty-list c/no-symbol "")
                                               empty-list c/no-symbol "")]
                                             c/no-tail empty-list (symbol "#result") ""))
           3 (c/fn-arity 'split-with
                         (c/params-list [(c/param 'split-with 0)
                                        (c/ComputedConstraint
                                         [(c/param 'split-with 1)
                                          (.required-arities c/fn-constraint [1])
                                          (c/intersect c/fn-constraint
                                                       (c/CollectionOf c/maybe-constraint empty-list
                                                                       c/no-symbol ""))]
                                         empty-list 'Predicate "")
                                        (c/ComputedConstraint
                                         [(c/param 'split-with 2)
                                          c/seq-constraint]
                                         empty-list 'prefix "")])
                         (c/vect-c [(c/CollectionOf
                                               (c/ComputedConstraint
                                                [(c/param 'split-with 0)
                                                 (c/TypeOp c/inner-type-of-op [] empty-list)]
                                                empty-list c/no-symbol "")
                                               empty-list c/no-symbol "")
                                              (c/CollectionOf
                                               (c/ComputedConstraint
                                                [(c/param 'split-with 0)
                                                 (c/TypeOp c/inner-type-of-op [] empty-list)]
                                                empty-list c/no-symbol "")
                                               empty-list c/no-symbol "")]
                                             c/no-tail empty-list (symbol "#result") ""))}
          empty-list c/no-symbol ""))

(is-type (#impl drop-while)
         (c/FnConstraint
          []
          {2 (c/fn-arity 'drop-while
                         (c/params-list [(c/param 'drop-while 0)
                                        (c/ComputedConstraint
                                         [(c/param 'drop-while 1)
                                          (.required-arities c/fn-constraint [1])
                                          (c/intersect c/fn-constraint
                                                       (c/CollectionOf c/maybe-constraint empty-list
                                                                       c/no-symbol ""))]
                                         empty-list 'Predicate "")])
                         (c/CollectionOf
                          (c/ComputedConstraint
                           [(c/param 'drop-while 0)
                            c/inner-type-of]
                           empty-list c/no-symbol "")
                          empty-list 'result ""))}
          empty-list c/no-symbol ""))

(is-type (#impl reverse)
         (c/FnConstraint
          []
          {1 (c/fn-arity 'reverse
                         (c/params-list [(c/param 'reverse 0)])
                         (c/CollectionOf
                          (c/ComputedConstraint
                           [(c/param 'reverse 0)
                            c/inner-type-of]
                           empty-list c/no-symbol "")
                          empty-list 'result ""))}
          empty-list c/no-symbol ""))

(is-type second
         (c/FnConstraint
          []
          {1 (c/fn-arity 'fn-arity77
                         (c/params-list [(c/param 'fn-arity77 0)])
                         (c/ComputedConstraint
                          [(c/param 'fn-arity77 0)
                           (c/TypeOp c/rest-of-op [] empty-list)
                           (c/TypeOp c/first-of-op [] empty-list)]
                          empty-list 'coll ""))}
          empty-list 'second ""))

(is-type (#impl store)
         (c/FnConstraint
          []
          {3 (c/fn-arity 'store
                         (c/params-list [(c/param 'store 0)
                                        (c/ComputedConstraint
                                         [(c/param 'store 1)
                                          (c/IntegerConstraint c/no-int 2147483647 -2147483648
                                                               empty-list c/no-symbol "")]
                                         empty-list 'n "")
                                        (c/param 'store 2)])
                         (c/MaybeConstraint (c/SumConstraint
                                             [(c/ComputedConstraint
                                               [(c/param 'store 0)
                                                c/inner-type-of]
                                               empty-list c/no-symbol "")
                                              (c/param 'store 2)]
                                             empty-list c/no-symbol "")
                                            empty-list 'result ""))}
          empty-list c/no-symbol ""))

(is-type list-reduce
         (c/FnConstraint
          []
          {3 (c/fn-arity 'fn-arity78
                         (c/params-list [(c/ComputedConstraint 
                                         [(c/param 'fn-arity78 0)
                                          (c/list-c [] (c/CollectionOf
                                               (c/ComputedConstraint 
                                                [(c/param 'fn-arity78 2)
                                                 (c/TypeOp c/arg-of-op 1 empty-list)]
                                                empty-list c/no-symbol "")
                                               empty-list c/no-symbol "") empty-list 'l "")]
                                         empty-list 'l "")
                                        (c/param 'fn-arity78 1)
                                        (c/ComputedConstraint 
                                         [(c/param 'fn-arity78 2)
                                          (.required-arities c/fn-constraint [2])]
                                         empty-list 'f "")])
                         (c/SumConstraint
                          [(c/param 'fn-arity78 1)
                           (c/ComputedConstraint 
                            [(c/param 'fn-arity78 2)
                             (.required-arities c/fn-constraint [2])
                             (c/TypeOp c/call-value-op [(c/SumConstraint
                                                         [(c/param 'fn-arity78 1)

                                                          (c/ComputedConstraint 
                                                           [(c/param 'fn-arity78 2)
                                                            (.required-arities c/fn-constraint [2])
                                                            (c/TypeOp c/call-value-op c/no-args empty-list)]
                                                           empty-list c/no-symbol "")] empty-list c/no-symbol "")
                                                        (c/ComputedConstraint 
                                                         [(c/param 'fn-arity78 0)
                                                          (c/list-c [] (c/CollectionOf
                                                               (c/ComputedConstraint 
                                                                [(c/param 'fn-arity78 2)
                                                                 (c/TypeOp c/arg-of-op 1 empty-list)]
                                                                empty-list c/no-symbol "")
                                                               empty-list c/no-symbol "") empty-list 'l "")
                                                          (c/TypeOp c/inner-type-of-op [] empty-list)]
                                                         empty-list c/no-symbol "")] empty-list)]
                            empty-list c/no-symbol "")] empty-list (symbol "#result") ""))}
          empty-list 'list-reduce ""))

(is-type (list-reduce '(x 1 "q") 0 (fn wut-fn [_ x] x))
         (c/SumConstraint
          [(c/IntegerConstraint 0 2147483647 -2147483648 empty-list c/no-symbol "")
           (c/SymbolConstraint 'x empty-list c/no-symbol "")
           (c/IntegerConstraint 1 2147483647 -2147483648 empty-list c/no-symbol "")
           (c/StrBuffConstraint "q" empty-list c/no-symbol "")]
          empty-list (symbol "#result") ""))

(is-type (#impl =* List)
         (c/FnConstraint
          []
          {2 (c/fn-arity 'fn-arity77
                         (c/params-list [(c/ComputedConstraint
                                         [(c/param 'fn-arity77 0)
                                          c/list-constraint]
                                         empty-list 'x "")
                                        (c/param 'fn-arity77 1)])
                         (c/MaybeConstraint (c/param 'fn-arity77 0)
                                            empty-list c/no-symbol ""))}
          empty-list c/no-symbol ""))

(is-type (#impl filter List)
         (c/FnConstraint
          []
          {2 (c/fn-arity
              'fn-arity84
              (c/params-list [(c/ComputedConstraint
                              [(c/param 'fn-arity84 0)
                               (c/list-c [] (c/CollectionOf
                                    (c/ComputedConstraint
                                     [(c/param 'fn-arity84 1)
                                      (.required-arities c/fn-constraint [1])
                                      (c/intersect c/fn-constraint
                                                   (c/CollectionOf c/maybe-constraint
                                                                   empty-list c/no-symbol ""))
                                      (c/TypeOp c/arg-of-op 0 empty-list)]
                                     empty-list c/no-symbol "")
                                    empty-list 'coll "") empty-list c/no-symbol "")]
                              empty-list c/no-symbol "")
                             (c/ComputedConstraint
                              [(c/param 'fn-arity84 1)
                               (.required-arities c/fn-constraint [1])
                               (c/intersect c/fn-constraint
                                            (c/CollectionOf c/maybe-constraint
                                                            empty-list c/no-symbol ""))]
                              empty-list c/no-symbol "")])
              (c/list-c [] (c/CollectionOf
                   (c/ComputedConstraint
                    [(c/param 'fn-arity84 1)
                     (.required-arities c/fn-constraint [1])
                     (c/intersect c/fn-constraint
                                  (c/CollectionOf c/maybe-constraint
                                                  empty-list c/no-symbol ""))
                     (c/TypeOp c/arg-of-op 0 empty-list)]
                    empty-list c/no-symbol "")
                   empty-list (symbol "#result") "") empty-list c/no-symbol ""))}
          empty-list c/no-symbol ""))

(is-type (#impl reverse List)
         (c/FnConstraint
          []
          {1 (c/fn-arity 'fn-arity78
                         (c/params-list [(c/ComputedConstraint
                                         [(c/param 'fn-arity78 0)
                                          c/list-constraint]
                                         empty-list 'l "")])
                         (c/list-c [] (c/CollectionOf
                              (c/ComputedConstraint
                               [(c/param 'fn-arity78 0)
                                c/inner-type-of]
                               empty-list c/no-symbol "")
                              empty-list (symbol "#result") "")
                                           empty-list (symbol "#result") ""))}
          empty-list c/no-symbol ""))

(is-type (#impl rest List)
         (c/FnConstraint
          []
          {1 (c/fn-arity 'fn-arity81
                         (c/params-list [(c/ComputedConstraint
                                         [(c/param 'fn-arity81 0)
                                          c/list-constraint]
                                         empty-list 'l "")])
                         (c/ComputedConstraint
                          [(c/param 'fn-arity81 0)
                           (c/TypeOp c/rest-of-op [] empty-list)]
                          empty-list c/no-symbol ""))}
          empty-list c/no-symbol ""))

(is-type (rest '(a b c))
         (c/list-c [(c/SymbolConstraint 'b empty-list c/no-symbol "")
                            (c/SymbolConstraint 'c empty-list c/no-symbol "")]
                           c/no-tail empty-list c/no-symbol ""))

(is-type (#impl vec List)
         (c/FnConstraint
          []
          {1 (c/fn-arity 'fn-arity80
                         (c/params-list [(c/ComputedConstraint
                                         [(c/param 'fn-arity80 0)
                                          c/list-constraint]
                                         empty-list 'l "")])
                         (c/ComputedConstraint
                          [(c/param 'fn-arity80 0)
                           c/list-constraint
                           (c/TypeOp c/vect-from-op [] empty-list)]
                          empty-list (symbol "#result") ""))}
          empty-list c/no-symbol ""))

(is-type (vec (list 'a 'b 'c))
         (c/vect-c [(c/SymbolConstraint 'a empty-list c/no-symbol "")
                              (c/SymbolConstraint 'b empty-list c/no-symbol "")
                              (c/SymbolConstraint 'c empty-list c/no-symbol "")]
                             c/no-tail empty-list c/no-symbol ""))

(is-type ['x 'y 4]
         (c/vect-c [(c/SymbolConstraint 'x empty-list c/no-symbol "")
                              (c/SymbolConstraint 'y empty-list c/no-symbol "")
                              (c/IntegerConstraint 4 2147483647 -2147483648
                                                   empty-list c/no-symbol "")]
                             c/no-tail empty-list c/no-symbol ""))

(is-type (seq ['a 'b 'c])
         (c/list-c [(c/SymbolConstraint 'a empty-list c/no-symbol "")
                            (c/SymbolConstraint 'b empty-list c/no-symbol "")
                            (c/SymbolConstraint 'c empty-list c/no-symbol "")]
                           c/no-tail empty-list c/no-symbol ""))

(is-type (#impl reverse Vector)
         (c/FnConstraint
          []
          {1 (c/fn-arity 'fn-arity83
                         (c/params-list [(c/ComputedConstraint
                                         [(c/param 'fn-arity83 0)
                                          c/vect-constraint]
                                         empty-list 'v "")])
                         (c/vect-c []
                                             (c/CollectionOf
                                              (c/ComputedConstraint
                                               [(c/param 'fn-arity83 0)
                                                c/inner-type-of]
                                               empty-list c/no-symbol "")
                                              empty-list (symbol "#result") "") empty-list c/no-symbol ""))}
          empty-list c/no-symbol ""))

(is-type (#impl store Vector)
         (c/FnConstraint
          []
          {3 (c/fn-arity 'fn-arity86
                         (c/params-list [(c/ComputedConstraint
                                         [(c/param 'fn-arity86 0)
                                          c/vect-constraint]
                                         empty-list 'v "")
                                        (c/ComputedConstraint
                                         [(c/param 'fn-arity86 1)
                                          (c/IntegerConstraint c/no-int 2147483647 -2147483648
                                                               empty-list c/no-symbol "")]
                                         empty-list c/no-symbol "")
                                        (c/param 'fn-arity86 2)])
                         (c/MaybeConstraint (c/SumConstraint
                                             [(c/ComputedConstraint
                                               [(c/param 'fn-arity86 0)
                                                c/inner-type-of]
                                               empty-list c/no-symbol "")
                                              (c/param 'fn-arity86 2)]
                                             empty-list c/no-symbol "")
                                            empty-list c/no-symbol ""))}
          empty-list c/no-symbol ""))

(is-type (#impl get Vector)
         (c/FnConstraint []
                         {2 (c/fn-arity 'fn-arity85
                                        (c/params-list [(c/ComputedConstraint
                                                        [(c/param 'fn-arity85 0)
                                                         c/vect-constraint]
                                                        empty-list 'v "")
                                                       (c/ComputedConstraint
                                                        [(c/param 'fn-arity85 1)
                                                         (c/IntegerConstraint c/no-int 2147483647 -2147483648
                                                                              empty-list c/no-symbol "")]
                                                        empty-list 'n "")])
                                        (c/MaybeConstraint (c/ComputedConstraint
                                                            [(c/param 'fn-arity85 0)
                                                             c/vect-constraint
                                                             c/inner-type-of]
                                                            empty-list c/no-symbol "")
                                                           empty-list c/no-symbol ""))}
                         empty-list c/no-symbol ""))

(is-type (get ['a 1 "b"] 8)
         (c/MaybeConstraint (c/SumConstraint
                             [(c/SymbolConstraint 'a empty-list c/no-symbol "")
                              (c/IntegerConstraint 1 2147483647 -2147483648
                                                   empty-list c/no-symbol "")
                              (c/StrBuffConstraint "b" empty-list c/no-symbol "")]
                             empty-list c/no-symbol "")
                            empty-list c/no-symbol ""))

(is-type (#impl =* Integer)
         (c/FnConstraint
          []
          {2 (c/fn-arity 'fn-arity95
                         (c/params-list [(c/ComputedConstraint
                                         [(c/param 'fn-arity95 0)
                                          (c/IntegerConstraint c/no-int 2147483647 -2147483648
                                                               empty-list c/no-symbol "")]
                                         empty-list 'x "")
                                        (c/param 'fn-arity95 1)])
                         (c/MaybeConstraint (c/param 'fn-arity95 0)
                                            empty-list c/no-symbol ""))}
          empty-list c/no-symbol ""))

(is-type inc
         (c/FnConstraint
          []
          {1 (c/fn-arity 'fn-arity101
                         (c/params-list [(c/ComputedConstraint
                                         [(c/param 'fn-arity101 0)
                                          (c/IntegerConstraint c/no-int 2147483647 -2147483648
                                                               empty-list c/no-symbol "")]
                                         empty-list 'x "")])
                         (c/IntegerConstraint c/no-int 2147483647 -2147483648
                                              empty-list c/no-symbol ""))}
          empty-list 'inc ""))

;; TODO: this kind of sucks
(is-type (comp "a" "bc ")
         c/top-type)

(is-type (#impl reduce StringBuffer)
         (c/FnConstraint
          []
          {3 (c/fn-arity 'fn-arity161
                         (c/params-list [(c/ComputedConstraint 
                                         [(c/param 'fn-arity161 0)
                                          (c/ComputedConstraint 
                                           [c/string-constraint
                                            (c/param 'fn-arity161 2)
                                            (.required-arities c/fn-constraint [2])
                                            (c/TypeOp c/arg-of-op 1 empty-list)]
                                           empty-list c/no-symbol "")]
                                         empty-list c/no-symbol "")
                                        (c/param 'fn-arity161 1)
                                        (c/ComputedConstraint 
                                         [(c/param 'fn-arity161 2)
                                          (.required-arities c/fn-constraint [2])]
                                         empty-list c/no-symbol "")])
                         (c/SumConstraint
                          [(c/param 'fn-arity161 1)
                           (c/ComputedConstraint 
                            [(c/param 'fn-arity161 2)
                             (.required-arities c/fn-constraint [2])
                             (c/TypeOp c/call-value-op
                                       [(c/SumConstraint
                                         [(c/param 'fn-arity161 1)
                                          (c/ComputedConstraint 
                                           [(c/param 'fn-arity161 2)
                                            (.required-arities c/fn-constraint [2])
                                            (c/TypeOp c/call-value-op c/no-args empty-list)]
                                           empty-list c/no-symbol "")] empty-list c/no-symbol "")
                                        (c/ComputedConstraint 
                                         [(c/param 'fn-arity161 0)
                                          (c/CollectionOf
                                           (c/ComputedConstraint 
                                            [(c/param 'fn-arity161 2)
                                             (.required-arities c/fn-constraint [2])
                                             (c/TypeOp c/arg-of-op 1 empty-list)]
                                            empty-list c/no-symbol "")
                                           empty-list 'coll "")
                                          (c/TypeOp c/inner-type-of-op [] empty-list)]
                                         empty-list c/no-symbol "")]
                                       empty-list)]
                            empty-list c/no-symbol "")]
                          empty-list (symbol "#result") ""))}
          empty-list c/no-symbol ""))

(is-type (#impl seq StringBuffer)
         (c/FnConstraint
          []
          {1 (c/fn-arity 'fn-arity111
                         (c/params-list [(c/ComputedConstraint
                                         [(c/param 'fn-arity111 0)
                                          c/strbuff-constraint]
                                         empty-list 'coll "")])
                         (c/ComputedConstraint
                          [(c/param 'fn-arity111 0)
                           c/strbuff-constraint
                           (c/TypeOp c/list-from-op [] empty-list)]
                          empty-list (symbol "#result") ""))}
          empty-list c/no-symbol ""))

(is-type (seq "abc")
         (c/list-c [(c/SubStrConstraint "a" empty-list c/no-symbol "")
                            (c/SubStrConstraint "b" empty-list c/no-symbol "")
                            (c/SubStrConstraint "c" empty-list c/no-symbol "")]
                           c/no-tail empty-list c/no-symbol ""))

(is-type (first "abc")
         (c/MaybeConstraint c/string-constraint
                            empty-list c/no-symbol ""))

(is-type (rest "abc")
         c/substr-constraint)

(is-type (last "abc")
         (c/MaybeConstraint c/string-constraint
                            empty-list c/no-symbol ""))

(is-type (butlast "abc")
         c/substr-constraint)

(is-type (#impl reverse StringBuffer)
         (c/FnConstraint
          []
          {1 (c/fn-arity 'fn-arity113
                         (c/params-list [(c/ComputedConstraint
                                         [(c/param 'fn-arity113 0)
                                          c/strbuff-constraint]
                                         empty-list 's "")])
                         (c/ComputedConstraint
                          [c/string-constraint
                           (c/param 'fn-arity113 0)
                           (c/TypeOp c/inner-type-of-op [] empty-list)]
                          empty-list c/no-symbol ""))}
          empty-list c/no-symbol ""))

(is-type (reverse "123")
         (c/SumConstraint
          [(c/StrBuffConstraint "1" empty-list c/no-symbol "")
           (c/StrBuffConstraint "2" empty-list c/no-symbol "")
           (c/StrBuffConstraint "3" empty-list c/no-symbol "")]
          empty-list c/no-symbol ""))

(is-type (#impl split-with StringBuffer)
         (c/FnConstraint
          []
          {2 (c/fn-arity 'fn-arity135
                         (c/params-list [(c/ComputedConstraint
                                         [(c/param 'fn-arity135 0)
                                          c/strbuff-constraint
                                          c/string-constraint]
                                         empty-list 's "")
                                        (c/ComputedConstraint
                                         [(c/param 'fn-arity135 1)
                                          (.required-arities c/fn-constraint [1])
                                          (c/intersect c/fn-constraint
                                                       (c/CollectionOf c/maybe-constraint empty-list
                                                                       c/no-symbol ""))]
                                         empty-list c/no-symbol "")])
                         (c/vect-c [(c/ComputedConstraint
                                               [c/string-constraint
                                                (c/param 'fn-arity135 0)
                                                c/strbuff-constraint
                                                (c/TypeOp c/inner-type-of-op [] empty-list)
                                                (c/CollectionOf
                                                 (c/ComputedConstraint
                                                  [(c/param 'fn-arity135 0)
                                                   (c/TypeOp c/inner-type-of-op [] empty-list)]
                                                  empty-list c/no-symbol "")
                                                 empty-list c/no-symbol "")]
                                               empty-list 's "")
                                              (c/ComputedConstraint
                                               [c/string-constraint
                                                (c/param 'fn-arity135 0)
                                                c/strbuff-constraint
                                                (c/TypeOp c/inner-type-of-op [] empty-list)
                                                (c/CollectionOf
                                                 (c/ComputedConstraint
                                                  [(c/param 'fn-arity135 0)
                                                   (c/TypeOp c/inner-type-of-op [] empty-list)]
                                                  empty-list c/no-symbol "")
                                                 empty-list c/no-symbol "")]
                                               empty-list 's "")]
                                             c/no-tail empty-list (symbol "#result") ""))
           3 (c/fn-arity 'fn-arity129
                         (c/params-list [(c/ComputedConstraint
                                         [(c/param 'fn-arity129 0)
                                          c/strbuff-constraint
                                          c/string-constraint]
                                         empty-list 's "")
                                        (c/ComputedConstraint
                                         [(c/param 'fn-arity129 1)
                                          (.required-arities c/fn-constraint [1])
                                          (c/intersect c/fn-constraint
                                                       (c/CollectionOf c/maybe-constraint empty-list
                                                                       c/no-symbol ""))]
                                         empty-list c/no-symbol "")
                                        (c/ComputedConstraint
                                         [(c/param 'fn-arity129 2)
                                          c/vect-constraint]
                                         empty-list c/no-symbol "")])
                         (c/vect-c [(c/ComputedConstraint
                                               [c/string-constraint
                                                (c/param 'fn-arity129 0)
                                                (c/TypeOp c/inner-type-of-op [] empty-list)]
                                               empty-list c/no-symbol "")
                                              (c/ComputedConstraint
                                               [c/string-constraint
                                                (c/param 'fn-arity129 0)
                                                (c/TypeOp c/inner-type-of-op [] empty-list)]
                                               empty-list c/no-symbol "")]
                                             c/no-tail empty-list (symbol "#result") ""))}
          empty-list c/no-symbol ""))

(is-type (split-with "8815" (partial =* 8))
         (c/vect-c [(c/SumConstraint
                               [(c/StrBuffConstraint "8" empty-list c/no-symbol "")
                                (c/StrBuffConstraint "1" empty-list c/no-symbol "")
                                (c/StrBuffConstraint "5" empty-list c/no-symbol "")]
                               empty-list c/no-symbol "")
                              (c/SumConstraint
                               [(c/StrBuffConstraint "8" empty-list c/no-symbol "")
                                (c/StrBuffConstraint "1" empty-list c/no-symbol "")
                                (c/StrBuffConstraint "5" empty-list c/no-symbol "")]
                               empty-list c/no-symbol "")]
                             c/no-tail
                             empty-list (symbol "#result") ""))

(is-type (#impl split SubString)
         (c/FnConstraint
          []
          {2 (c/fn-arity 'fn-arity112
                         (c/params-list [(c/ComputedConstraint
                                         [(c/param 'fn-arity112 0)
                                          c/substr-constraint
                                          c/string-constraint]
                                         empty-list 's "")
                                        (c/ComputedConstraint
                                         [(c/param 'fn-arity112 1)
                                          (c/IntegerConstraint c/no-int 2147483647 0
                                                               empty-list c/no-symbol "")]
                                         empty-list c/no-symbol "")])
                         (c/vect-c [(c/ComputedConstraint
                                               [c/string-constraint
                                                (c/param 'fn-arity112 0)
                                                (c/TypeOp c/inner-type-of-op [] empty-list)]
                                               empty-list c/no-symbol "")
                                              (c/ComputedConstraint
                                               [c/string-constraint
                                                (c/param 'fn-arity112 0)
                                                (c/TypeOp c/inner-type-of-op [] empty-list)]
                                               empty-list c/no-symbol "")]
                                             c/no-tail empty-list (symbol "#result") ""))}
          empty-list c/no-symbol ""))

(is-type (#impl nth SubString)
         (c/FnConstraint
          []
          {2 (c/fn-arity 'fn-arity159
                         (c/params-list [(c/ComputedConstraint
                                         [(c/param 'fn-arity159 0)
                                          c/substr-constraint
                                          c/string-constraint]
                                         empty-list 's "")
                                        (c/ComputedConstraint
                                         [(c/param 'fn-arity159 1)
                                          (c/IntegerConstraint c/no-int 2147483647 0
                                                               empty-list c/no-symbol "")]
                                         empty-list 'n "")])
                         (c/MaybeConstraint (c/ComputedConstraint
                                             [(c/param 'fn-arity159 0)
                                              (c/TypeOp c/inner-type-of-op [] empty-list)]
                                             empty-list c/no-symbol "")
                                            empty-list c/no-symbol ""))}
          empty-list c/no-symbol ""))

(is-type (#impl drop-while StringBuffer)
         (c/FnConstraint
          []
          {2 (c/fn-arity 'fn-arity169
                         (c/params-list [(c/ComputedConstraint
                                         [(c/param 'fn-arity169 0)
                                          c/strbuff-constraint
                                          c/string-constraint]
                                         empty-list 'coll "")
                                        (c/ComputedConstraint
                                         [(c/param 'fn-arity169 1)
                                          (.required-arities c/fn-constraint [1])
                                          (c/intersect c/fn-constraint
                                                       (c/CollectionOf c/maybe-constraint empty-list
                                                                       c/no-symbol ""))]
                                         empty-list c/no-symbol "")])
                         (c/ComputedConstraint
                          [c/string-constraint
                           (c/param 'fn-arity169 0)
                           c/strbuff-constraint
                           (c/TypeOp c/inner-type-of-op [] empty-list)
                           (c/CollectionOf
                            (c/ComputedConstraint
                             [(c/param 'fn-arity169 0)
                              c/strbuff-constraint
                              (c/TypeOp c/inner-type-of-op [] empty-list)]
                             empty-list 'coll "")
                            empty-list c/no-symbol "")
                           (c/CollectionOf
                            (c/ComputedConstraint
                             [(c/param 'fn-arity169 0)
                              (c/TypeOp c/inner-type-of-op [] empty-list)]
                             empty-list c/no-symbol "")
                            empty-list (symbol "#result") "")]
                          empty-list 'coll ""))}
          empty-list c/no-symbol ""))

(is-type (drop-while "884412" (partial =* "8"))
         (c/SumConstraint
          [(c/StrBuffConstraint "8" empty-list c/no-symbol "")
           (c/StrBuffConstraint "4" empty-list c/no-symbol "")
           (c/StrBuffConstraint "1" empty-list c/no-symbol "")
           (c/StrBuffConstraint "2" empty-list c/no-symbol "")]
          empty-list c/no-symbol ""))

(is-type (drop-while (subs "884412" 1) (partial =* "8"))
         c/string-constraint)

(is-type (#impl take-while StringBuffer)
         (c/FnConstraint
          []
          {2 (c/fn-arity 'fn-arity171
                         (c/params-list [(c/ComputedConstraint
                                         [(c/param 'fn-arity171 0)
                                          c/strbuff-constraint
                                          c/string-constraint]
                                         empty-list 'coll "")
                                        (c/ComputedConstraint
                                         [(c/param 'fn-arity171 1)
                                          (.required-arities c/fn-constraint [1])
                                          (c/intersect c/fn-constraint
                                                       (c/CollectionOf c/maybe-constraint empty-list
                                                                       c/no-symbol ""))]
                                         empty-list c/no-symbol "")])
                         (c/ComputedConstraint
                          [c/string-constraint
                           (c/param 'fn-arity171 0)
                           c/strbuff-constraint
                           (c/TypeOp c/inner-type-of-op [] empty-list)
                           (c/CollectionOf
                            (c/ComputedConstraint
                             [(c/param 'fn-arity171 0)
                              c/strbuff-constraint
                              (c/TypeOp c/inner-type-of-op [] empty-list)]
                             empty-list 'coll "")
                            empty-list c/no-symbol "")
                           (c/CollectionOf
                            (c/ComputedConstraint
                             [(c/param 'fn-arity171 0)
                              (c/TypeOp c/inner-type-of-op [] empty-list)]
                             empty-list c/no-symbol "")
                            empty-list (symbol "#result") "")]
                          empty-list 'coll ""))}
          empty-list c/no-symbol ""))

(is-type (take-while "884412" (partial =* "8"))
         (c/SumConstraint
          [(c/StrBuffConstraint "8" empty-list c/no-symbol "")
           (c/StrBuffConstraint "4" empty-list c/no-symbol "")
           (c/StrBuffConstraint "1" empty-list c/no-symbol "")
           (c/StrBuffConstraint "2" empty-list c/no-symbol "")]
          empty-list c/no-symbol ""))

(is-type (take-while (subs "884412" 1) (partial =* "8"))
         c/string-constraint)

(is-type (#impl to-str StringBuffer)
         (c/FnConstraint
          []
          {1 (c/fn-arity 'fn-arity173
                         (c/params-list [(c/ComputedConstraint
                                         [(c/param 'fn-arity173 0)
                                          c/strbuff-constraint]
                                         empty-list 's "")])
                         (c/ComputedConstraint
                          [(c/param 'fn-arity173 0)
                           c/strbuff-constraint]
                          empty-list 's ""))}
          empty-list c/no-symbol ""))

(is-type maybe-apply
         (c/FnConstraint
          []
          {3 (c/fn-arity 'fn-arity175
                         (c/params-list [(c/ComputedConstraint
                                         [(c/param 'fn-arity175 0)
                                          c/maybe-constraint]
                                         empty-list 'mv "")
                                        (c/ComputedConstraint
                                         [(c/param 'fn-arity175 1)
                                          (c/intersect c/seq-constraint
                                                       (c/CollectionOf c/maybe-constraint
                                                                       empty-list c/no-symbol ""))]
                                         empty-list 'm-args "")
                                        (c/ComputedConstraint
                                         [(c/param 'fn-arity175 2)
                                          c/vect-constraint]
                                         empty-list 'args "")])
                         (c/MaybeConstraint (c/ComputedConstraint
                                             [(c/param 'fn-arity175 0)
                                              c/maybe-constraint
                                              (c/TypeOp c/inner-type-of-op [] empty-list)
                                              (c/TypeOp c/call-value-op c/no-args empty-list)]
                                             empty-list c/no-symbol "")
                                            empty-list c/no-symbol ""))}
          empty-list 'maybe-apply ""))

(is-type (maybe-apply (maybe inc) (list (maybe 8)) [])
         (c/MaybeConstraint c/int-constraint empty-list c/no-symbol ""))

(is-type (#impl type-args Maybe)
         (c/FnConstraint
          []
          {1 (c/fn-arity 'fn-arity185
                         (c/params-list [(c/ComputedConstraint
                                         [(c/param 'fn-arity185 0)
                                          c/maybe-constraint]
                                         empty-list 'v "")])
                         (c/SumConstraint
                          [(c/vect-c [(c/ComputedConstraint
                                                 [(c/param 'fn-arity185 0)
                                                  c/maybe-constraint
                                                  (c/TypeOp c/inner-type-of-op [] empty-list)]
                                                 empty-list 'v "")]
                                               c/no-tail empty-list (symbol "#result") "")

                           c/empty-vect-constraint]
                          empty-list c/no-symbol ""))}
          empty-list c/no-symbol ""))

(is-type (type-args (maybe 9))
         (c/SumConstraint
          [(c/vect-c [(c/IntegerConstraint 9 2147483647 -2147483648 empty-list c/no-symbol "")]
                               c/no-tail empty-list (symbol "#result") "")
           c/empty-vect-constraint]
          empty-list c/no-symbol ""))

(is-type (#impl map Maybe)
         (c/FnConstraint
          []
          {2 (c/fn-arity 'fn-arity193
                         (c/params-list [(c/ComputedConstraint
                                         [(c/param 'fn-arity193 0)
                                          (c/MaybeConstraint (c/ComputedConstraint
                                                              [(c/param 'fn-arity193 1)
                                                               (c/TypeOp c/arg-of-op 0 empty-list)]
                                                              empty-list c/no-symbol "")
                                                             empty-list c/no-symbol "")
                                          (c/MaybeConstraint (c/ComputedConstraint
                                                              [(c/param 'fn-arity193 1)
                                                               (c/TypeOp c/arg-of-op 0 empty-list)]
                                                              empty-list c/no-symbol "")
                                                             empty-list c/no-symbol "")]
                                         empty-list c/no-symbol "")
                                        (c/ComputedConstraint
                                         [(c/param 'fn-arity193 1)
                                          (.required-arities c/fn-constraint [1])]
                                         empty-list c/no-symbol "")])
                         (c/MaybeConstraint
                          (c/ComputedConstraint
                           [(c/param 'fn-arity193 1)
                            (c/TypeOp c/call-value-op
                                      [(c/ComputedConstraint
                                        [(c/param 'fn-arity193 0)
                                         c/maybe-constraint
                                         (c/MaybeConstraint
                                          (c/ComputedConstraint
                                           [(c/param 'fn-arity193 1)
                                            (c/TypeOp c/arg-of-op 0 empty-list)]
                                           empty-list c/no-symbol "")
                                          empty-list c/no-symbol "")
                                         (c/TypeOp c/inner-type-of-op [] empty-list)]
                                        empty-list 'mv "")] empty-list)]
                           empty-list 'f "")
                          empty-list c/no-symbol ""))
           3 (c/fn-arity
              'fn-arity194
              (c/params-list [(c/ComputedConstraint
                              [(c/param 'fn-arity194 0)
                               (c/MaybeConstraint
                                (c/ComputedConstraint
                                 [(c/param 'fn-arity194 1)
                                  (c/TypeOp c/arg-of-op 0 empty-list)]
                                 empty-list c/no-symbol "")
                                empty-list c/no-symbol "")
                               (c/MaybeConstraint (c/param 'fn-arity195 0)
                                                  empty-list c/no-symbol "")]
                              empty-list c/no-symbol "")
                             (c/ComputedConstraint
                              [(c/param 'fn-arity194 1)
                               (.required-arities c/fn-constraint [1])]
                              empty-list c/no-symbol "")
                             (c/param 'fn-arity194 2)])
              (c/SumConstraint
               [(c/ComputedConstraint
                 [(c/param 'fn-arity194 2)
                  (c/TypeOp c/call-value-op c/no-args empty-list)]
                 empty-list c/no-symbol "")
                (c/ComputedConstraint
                 [(c/param 'fn-arity194 1)
                  (.required-arities c/fn-constraint [1])
                  (c/TypeOp c/call-value-op c/no-args empty-list)]
                 empty-list c/no-symbol "")]
               empty-list (symbol "#result") ""))}
          empty-list c/no-symbol ""))

(is-type interpose
         (c/FnConstraint
          []
          {2 (c/fn-arity 'fn-arity204
                         (c/params-list [(c/ComputedConstraint 
                                         [(c/param 'fn-arity204 0)
                                          c/seq-constraint
                                          (c/CollectionOf c/top-type empty-list 'x "")]
                                         empty-list 'coll "")
                                        (c/param 'fn-arity204 1)])
                         (c/SumConstraint
                          [(c/vect-c []
                                               (c/CollectionOf
                                                (c/SumConstraint
                                                 [(c/ComputedConstraint 
                                                   [(c/param 'fn-arity204 0)
                                                    c/seq-constraint
                                                    (c/TypeOp c/inner-type-of-op [] empty-list)]
                                                   empty-list c/no-symbol "")
                                                  (c/param 'fn-arity204 1)]
                                                 empty-list c/no-symbol "")
                                                empty-list c/no-symbol "") empty-list c/no-symbol "")

                           (c/list-c []
                                             (c/CollectionOf
                                              (c/SumConstraint
                                               [(c/ComputedConstraint 
                                                 [(c/param 'fn-arity204 0)
                                                  c/seq-constraint
                                                  (c/TypeOp c/inner-type-of-op [] empty-list)]
                                                 empty-list c/no-symbol "")
                                                (c/param 'fn-arity204 1)]
                                               empty-list c/no-symbol "")
                                              empty-list c/no-symbol "")
                                             empty-list c/no-symbol "")]
                          empty-list (symbol "#result") ""))}
          empty-list 'interpose ""))

(is-type (#impl reduce List)
         (c/FnConstraint
          []
          {3 (c/fn-arity
              'fn-arity220
              (c/params-list [(c/ComputedConstraint 
                              [(c/param 'fn-arity220 0)
                               (c/list-c [] (c/CollectionOf
                                    (c/ComputedConstraint 
                                     [(c/param 'fn-arity220 2)
                                      (.required-arities c/fn-constraint [2])
                                      (c/TypeOp c/arg-of-op 1 empty-list)]
                                     empty-list c/no-symbol "")
                                    empty-list 'coll "")
                                empty-list c/no-symbol "")
                               (c/list-c [] (c/CollectionOf
                                    (c/ComputedConstraint 
                                     [(c/param 'fn-arity220 2)
                                      (c/TypeOp c/arg-of-op 1 empty-list)]
                                     empty-list 'f "")
                                    empty-list c/no-symbol "") empty-list 'l "")]
                              empty-list c/no-symbol "")
                             (c/param 'fn-arity220 1)
                             (c/ComputedConstraint 
                              [(c/param 'fn-arity220 2)
                               (.required-arities c/fn-constraint [2])]
                              empty-list c/no-symbol "")])
              (c/SumConstraint
               [(c/param 'fn-arity220 1)
                (c/ComputedConstraint 
                 [(c/param 'fn-arity220 1)
                  (c/param 'fn-arity220 2)
                  (.required-arities c/fn-constraint [2])
                  (c/TypeOp c/call-value-op [(c/SumConstraint
                                              [(c/param 'fn-arity220 1)
                                               (c/ComputedConstraint 
                                                [(c/param 'fn-arity220 2)
                                                 (.required-arities c/fn-constraint [2])
                                                 (c/TypeOp c/call-value-op c/no-args empty-list)]
                                                empty-list c/no-symbol "")]
                                              empty-list c/no-symbol "")
                                             (c/ComputedConstraint 
                                              [(c/param 'fn-arity220 0)
                                               (c/CollectionOf
                                                (c/ComputedConstraint 
                                                 [(c/param 'fn-arity220 2)
                                                  (.required-arities c/fn-constraint [2])
                                                  (c/TypeOp c/arg-of-op 1 empty-list)]
                                                 empty-list c/no-symbol "")
                                                empty-list 'coll "")
                                               (c/TypeOp c/inner-type-of-op [] empty-list)]
                                              empty-list c/no-symbol "")] empty-list)]
                 empty-list c/no-symbol "")
                (c/ComputedConstraint 
                 [(c/param 'fn-arity220 2)
                  (.required-arities c/fn-constraint [2])
                  (c/TypeOp c/call-value-op [(c/SumConstraint
                                              [(c/param 'fn-arity220 1)
                                               (c/ComputedConstraint 
                                                [(c/param 'fn-arity220 2)
                                                 (.required-arities c/fn-constraint [2])
                                                 (c/TypeOp c/call-value-op c/no-args empty-list)]
                                                empty-list 'f "")] empty-list c/no-symbol "")
                                             (c/ComputedConstraint 
                                              [(c/param 'fn-arity220 0)
                                               c/list-constraint
                                               (c/list-c [] (c/CollectionOf
                                                    (c/ComputedConstraint 
                                                     [(c/param 'fn-arity220 2)
                                                      (c/TypeOp c/arg-of-op 1 empty-list)]
                                                     empty-list 'f "")
                                                    empty-list c/no-symbol "") empty-list 'l "")
                                               (c/TypeOp c/inner-type-of-op [] empty-list)]
                                              empty-list 'l "")] empty-list)
                  (c/param 'fn-arity220 1)]
                 empty-list 'f "")
                (c/ComputedConstraint 
                 [(c/TypeOp c/call-value-op [(c/SumConstraint
                                              [(c/param 'fn-arity220 1)
                                               (c/ComputedConstraint 
                                                [(c/param 'fn-arity220 2)
                                                 (.required-arities c/fn-constraint [2])
                                                 (c/TypeOp c/call-value-op c/no-args empty-list)]
                                                empty-list 'f "")] empty-list c/no-symbol "")
                                             (c/ComputedConstraint 
                                              [(c/param 'fn-arity220 0)
                                               c/list-constraint
                                               (c/list-c [] (c/CollectionOf
                                                    (c/ComputedConstraint 
                                                     [(c/param 'fn-arity220 2)
                                                      (c/TypeOp c/arg-of-op 1 empty-list)]
                                                     empty-list 'f "")
                                                    empty-list c/no-symbol "") empty-list 'l "")
                                               (c/TypeOp c/inner-type-of-op [] empty-list)]
                                              empty-list 'l "")] empty-list)
                  (c/TypeOp c/call-value-op [(c/SumConstraint
                                              [(c/param 'fn-arity220 1)
                                               (c/ComputedConstraint 
                                                [(c/param 'fn-arity220 2)
                                                 (.required-arities c/fn-constraint [2])
                                                 (c/TypeOp c/call-value-op c/no-args empty-list)]
                                                empty-list c/no-symbol "")] empty-list c/no-symbol "")
                                             (c/ComputedConstraint 
                                              [(c/param 'fn-arity220 0)
                                               (c/CollectionOf
                                                (c/ComputedConstraint 
                                                 [(c/param 'fn-arity220 2)
                                                  (.required-arities c/fn-constraint [2])
                                                  (c/TypeOp c/arg-of-op 1 empty-list)]
                                                 empty-list c/no-symbol "")
                                                empty-list 'coll "")
                                               (c/TypeOp c/inner-type-of-op [] empty-list)]
                                              empty-list c/no-symbol "")]
                            empty-list)]
                 empty-list c/no-symbol "")]
               empty-list (symbol "#result") ""))}
          empty-list c/no-symbol ""))

;; TODO: put in later after map for List is defined
;; (is-type (map '(1 2 3) inc)
;;          c/top-type)
