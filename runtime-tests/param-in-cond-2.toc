
(defprotocol VarOps
  (update-var [vh newer]
    (assert (instance? String newer))))

(deftype VarHolder [var]
  (assert (instance? String var))

  Stringable
  (string-list [_]
    (list "<VarHolder " var ">"))

 VarOps
 (update-var [vh newer]
   (.var vh newer)))


(deftype c-code [c-var]
  (assert (instance? String c-var)))

(defn get-constraint [var]
  (fn [s]
    (-> (either nothing (VarHolder ""))
        (update-var var)
        (vector s)
        maybe)))

(defn append-constraint [var constraint]
  (cond (= constraint 'top-type)
        (fn [x] (maybe ['_ x]))
        (get-constraint var)))

(defn add-contents-constraint [v]
  (append-constraint v 'bogus))

(main [_]
  (print-err ((add-contents-constraint (c-code "var")) {}))
  (print-err 'done))
