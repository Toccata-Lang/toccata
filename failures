
*** creating-parser

*** parser-created 3287

*** Loading core

*** Loaded Core

*** time-for-core 9781

*** Loading assertion-tests/and-constraints-2.toc

*** Loading assertion-tests/and-constraints-1.toc

*** Loading assertion-tests/bad-add.toc

*** Loading assertion-tests/add-items-list-2.toc

*** Loading assertion-tests/add-items-list-1.toc

*** Loading assertion-tests/apply-constructor.toc

*** Loading assertion-tests/bad-and-1.toc

*** Loading assertion-tests/bad-and-clause.toc

*** Loading assertion-tests/bad-and-2.toc

*** Loading assertion-tests/bad-apply-constructor.toc

*** Loading assertion-tests/bad-arity-1.toc

*** Loading assertion-tests/bad-constructor-call.toc

*** Loading assertion-tests/bad-constructor-param-1.toc

*** Loading assertion-tests/bad-constructor-param-3.toc

*** Loading assertion-tests/bad-dipatch-type.toc

*** Loading assertion-tests/bad-enum-1.toc

*** Loading assertion-tests/bad-enum-2.toc

*** Loading assertion-tests/bad-enum-3.toc

*** Loading assertion-tests/bad-enum-4.toc

*** Loading assertion-tests/bad-field-1.toc

*** Loading assertion-tests/bad-field-2.toc

*** Loading assertion-tests/bad-field-3.toc

*** Loading assertion-tests/bad-field-4.toc

*** Loading assertion-tests/bad-field-5.toc

*** Loading assertion-tests/bad-flat-map-inner.toc

*** Loading assertion-tests/bad-function-returns-1.toc

*** Loading assertion-tests/bad-function-returns-2.toc

*** Loading assertion-tests/bad-function-returns-3.toc

*** Loading assertion-tests/bad-impl-arity.toc

*** Loading assertion-tests/bad-impl-return-value.toc

*** Loading assertion-tests/bad-inline-result-type.toc

*** Loading assertion-tests/bad-inner-10.toc

*** Loading assertion-tests/bad-inner-11.toc

*** Loading assertion-tests/bad-inner-12.toc

*** Loading assertion-tests/bad-inner-13.toc

*** Loading assertion-tests/bad-inner-15.toc

*** Loading assertion-tests/bad-inner-16.toc

*** Loading assertion-tests/bad-inner-17.toc

*** Loading assertion-tests/bad-inner-18.toc

*** Loading assertion-tests/bad-inner-1.toc

*** Loading assertion-tests/bad-inner-2.toc

*** Loading assertion-tests/bad-inner-3.toc

*** Loading assertion-tests/bad-inner-4.toc

*** Loading assertion-tests/bad-inner-5.toc

*** Loading assertion-tests/bad-inner-6.toc

*** Loading assertion-tests/bad-inner-8.toc

*** Loading assertion-tests/bad-inner-9.toc

*** Loading assertion-tests/bad-inner-or.toc

*** Loading assertion-tests/bad-let.toc

*** Loading assertion-tests/bad-list-of-1.toc

*** Loading assertion-tests/bad-nested-let.toc

*** Loading assertion-tests/bad-or-1.toc

*** Loading assertion-tests/bad-or-2.toc

*** Loading assertion-tests/bad-proto-impl.toc

*** Loading assertion-tests/bad-return-value.toc

*** Loading assertion-tests/bad-result-sum-type.toc

*** Loading assertion-tests/bad-setter-call-1.toc

*** Loading assertion-tests/bad-type-comp.toc

*** Loading assertion-tests/bad-vector-of-1.toc

*** Loading assertion-tests/bad-vect-wrap.toc

*** Loading assertion-tests/butlast-inner-list.toc

*** Loading assertion-tests/butlast-inner.toc

*** Loading assertion-tests/check-trans-proto-call.toc

*** Loading assertion-tests/closure-1.toc

*** Loading assertion-tests/closure-2.toc

*** Loading assertion-tests/closure-constraint.toc

*** Loading assertion-tests/closure-param.toc

*** Loading assertion-tests/comp-bad-type-1.toc

*** Loading assertion-tests/comp-bad-type-2.toc

*** Loading assertion-tests/constructor-param-1.toc

*** Loading assertion-tests/constructor-param-2.toc

*** Loading assertion-tests/constructor-param-3.toc

*** Loading assertion-tests/contents-2.toc

*** Loading assertion-tests/deeply-nested-vector-1.toc

*** Loading assertion-tests/destruct-variadic-tail-2.toc

*** Loading assertion-tests/dup-protocol-name.toc

*** Loading assertion-tests/dynamic-call-3.toc

*** Loading assertion-tests/dynamic-call-2.toc

*** Loading assertion-tests/dynamic-call-5.toc

*** Loading assertion-tests/dynamic-call-6.toc

*** Loading assertion-tests/dynamic-call-7.toc

*** Loading assertion-tests/dynamic-call-9.toc

*** Loading assertion-tests/dynamic-field-type-12.toc

*** Loading assertion-tests/dynamic-field-type-15.toc

*** Loading assertion-tests/dynamic-field-type-16.toc

*** Loading assertion-tests/dynamic-field-type-17.toc

*** Loading assertion-tests/dynamic-field-type-18.toc

*** Loading assertion-tests/dynamic-field-type-19.toc

*** Loading assertion-tests/dynamic-field-type-1.toc

*** Loading assertion-tests/dynamic-field-type-2.toc

*** Loading assertion-tests/dynamic-field-type-3.toc

*** Loading assertion-tests/dynamic-field-type-4.toc

*** Loading assertion-tests/dynamic-field-type-5.toc

*** Loading assertion-tests/dynamic-field-type-6.toc

*** Loading assertion-tests/dynamic-field-type-7.toc

*** Loading assertion-tests/dynamic-field-type-8.toc

*** Loading assertion-tests/dynamic-field-type-9.toc

*** Loading assertion-tests/dynamic-proto-param-1.toc

*** Loading assertion-tests/extract-type-failure.toc

*** Loading assertion-tests/field-and-seq-conflict.toc

*** Loading assertion-tests/field-constraint.toc

*** Loading assertion-tests/flat-map-param.toc

*** Loading assertion-tests/get-field.toc

*** Loading assertion-tests/impl-violates-proto.toc

*** Loading assertion-tests/incompatible-tails.toc

*** Loading assertion-tests/inner-drop.toc

*** Loading assertion-tests/insufficient-static-elements-1.toc

*** Loading assertion-tests/insufficient-static-elements-2.toc

*** Loading assertion-tests/insufficient-static-elements-3.toc

*** Loading assertion-tests/insufficient-static-elements-4.toc

*** Loading assertion-tests/int-too-large.toc

*** Loading assertion-tests/items-constraints-1.toc

*** Loading assertion-tests/items-constraints-3.toc

*** Loading assertion-tests/items-constraints-4.toc

*** Loading assertion-tests/list-butlast.toc

*** Loading assertion-tests/list-items-types.toc

*** Loading assertion-tests/min-count.toc

*** Loading assertion-tests/multi-constraint-violated.toc

*** Loading assertion-tests/missing-namespaced-sym.toc

*** Loading assertion-tests/nested-destruct.toc

*** Loading assertion-tests/nested-field-1.toc

*** Loading assertion-tests/nested-field-2.toc

*** Loading assertion-tests/nested-items-conflict.toc

*** Loading assertion-tests/or-prop.toc

*** Loading assertion-tests/param-in-and-1.toc

*** Loading assertion-tests/param-in-and-2.toc

*** Loading assertion-tests/param-in-and-3.toc

*** Loading assertion-tests/param-in-and-4.toc

*** Loading assertion-tests/param-in-either-1.toc

*** Loading assertion-tests/param-in-either-2.toc

*** Loading assertion-tests/param-in-or-1.toc

*** Loading assertion-tests/param-in-or-2.toc

*** Loading assertion-tests/param-in-or-3.toc

*** Loading assertion-tests/param-in-or-4.toc

*** Loading assertion-tests/param-in-tail-cond-3.toc

*** Loading assertion-tests/preserve-static-info-1.toc

*** Loading assertion-tests/preserve-asserts.toc

*** Loading assertion-tests/preserve-static-info-3.toc

*** Loading assertion-tests/preserve-static-info-2.toc

*** Loading assertion-tests/propogate-inner-3.toc

*** Loading assertion-tests/propogate-through-let.toc

*** Loading assertion-tests/propogate-inner-4.toc

*** Loading assertion-tests/propogate-through-seq.toc

*** Loading assertion-tests/propogate-through-vec.toc

*** Loading assertion-tests/proto-fn-constraint-prop.toc

*** Loading assertion-tests/proto-fn-min-count.toc

*** Loading assertion-tests/proto-fn-param.toc

*** Loading assertion-tests/rest-of-list.toc

*** Loading assertion-tests/rest-of-vect.toc

*** Loading assertion-tests/restrict-conflict.toc

*** Loading assertion-tests/restrict-nested-item.toc

*** Loading assertion-tests/restrict-param.toc

*** Loading assertion-tests/return-bad-type.toc

*** Loading assertion-tests/return-generic-1.toc

*** Loading assertion-tests/return-list-of-1.toc

*** Loading assertion-tests/return-sum-type.toc

*** Loading assertion-tests/simple-conflict.toc

*** Loading assertion-tests/static-fixed-dynamic-result-type-1.toc

*** Loading assertion-tests/static-fixed-dynamic-result-type-2.toc

*** Loading assertion-tests/tail-either-2.toc

*** Loading assertion-tests/unkown-field.toc

*** Loading assertion-tests/update-field-1.toc

*** Loading assertion-tests/variadic-constraints.toc

*** Loading assertion-tests/variadic-count-1.toc

*** Loading assertion-tests/vect-len.toc

*** Loading assertion-tests/vector-butlast.toc

*** Conflicting assertions (706)  at assertion-tests/bad-and-2.toc: 5
Maybe from:    Integer 1 from:
                              
                              


*** site 1076 assertion-tests/bad-arity-1.toc: 8 
 (bad "Bogus") 

 target-c (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity673)
(c/seq-c [(c/param (c/tag 'fn-arity673) 0)
(c/param (c/tag 'fn-arity673) 1)]
c/no-tail)
;; returns
(c/param (c/tag 'fn-arity673) 0))}) 

 arg-cs [(c/StrBuffConstraint "Bogus")] 

 result-type (c/NoValues [(c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity673)
(c/seq-c [(c/param (c/tag 'fn-arity673) 0)
(c/param (c/tag 'fn-arity673) 1)]
c/no-tail)
;; returns
(c/param (c/tag 'fn-arity673) 0))})
(c/ReifiedConstraint 0 (c/tag "No arity found")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")]) 

 Conflicting assertions (1082)  at assertion-tests/bad-arity-1.toc: 8
No arity found from:    Function from
                                     
                                     


*** site 1076 assertion-tests/bad-add.toc: 6 
 (+ 8 b a) 

 target-c (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity396)
(c/seq-c [(c/multi [c/int-constraint
(c/param (c/tag 'fn-arity396) 0)])
(c/multi [c/int-constraint
(c/param (c/tag 'fn-arity396) 1)])]
c/no-tail)
;; returns
c/int-constraint), c/variadic (c/fn-arity
(c/tag 'fn-arity395)
(c/seq-c [] (c/multi [(c/list-c [] (c/coll-of-c c/int-constraint))
(c/param (c/tag 'fn-arity395) 0)]))
;; returns
(c/IntegerConstraint 0 2147483647 -2147483648)), 0 (c/fn-arity
(c/tag 'fn-arity397)
(c/seq-c [] c/no-tail)
;; returns
(c/IntegerConstraint 0 2147483647 -2147483648))}) 

 arg-cs [(c/IntegerConstraint 8 2147483647 -2147483648), (c/SymbolConstraint 's), (c/StrBuffConstraint "z")] 

 result-type (c/NoValues [c/int-constraint
(c/SymbolConstraint 's)]) 

 Conflicting assertions (1082)  at assertion-tests/bad-add.toc: 6
Symbol 's from:    Integer c/no-int from:
                   core: 2137            
                   core: 95              
                   core: 97              
                                         
                                         


*** site 1076 assertion-tests/and-constraints-1.toc: 9 
 (foo (vector "xx") "p") 

 target-c (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity675)
(c/seq-c [(c/param (c/tag 'fn-arity675) 0)
(c/multi [c/int-constraint
(c/param (c/tag 'fn-arity675) 1)])]
c/no-tail)
;; returns
(c/multi [c/maybe-constraint
(c/param (c/tag 'mv) 0)]))}) 

 arg-cs [(c/vect-c [(c/StrBuffConstraint "xx")]
c/no-tail), (c/StrBuffConstraint "p")] 

 result-type (c/NoValues [c/int-constraint
(c/StrBuffConstraint "p")]) 

 Conflicting assertions (1082)  at assertion-tests/and-constraints-1.toc: 9
String from:    Integer c/no-int from:  
                and-constraints-1.toc: 5
                core: 1202              
                core: 1204              
                core: 95                
                core: 97                
                                        
                                        


*** Could not find type constraint for 'enum' at assertion-tests/bad-enum-1.toc: 2

*** site 1076 assertion-tests/and-constraints-2.toc: 8 
 (subs p 1) 

 target-c (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity44)
(c/seq-c [(c/multi [(c/sum-c [c/strbuff-constraint
c/substr-constraint])
(c/param (c/tag 'fn-arity44) 0)])
(c/multi [(c/IntegerConstraint c/no-int 2147483647 0)
(c/param (c/tag 'fn-arity44) 1)])]
c/no-tail)
;; returns
c/substr-constraint), 3 (c/fn-arity
(c/tag 'fn-arity43)
(c/seq-c [(c/multi [(c/sum-c [c/strbuff-constraint
c/substr-constraint])
(c/param (c/tag 'fn-arity43) 0)])
(c/multi [(c/IntegerConstraint c/no-int 2147483647 0)
(c/param (c/tag 'fn-arity43) 1)])
(c/multi [(c/IntegerConstraint c/no-int 2147483647 0)
(c/param (c/tag 'fn-arity43) 2)])]
c/no-tail)
;; returns
c/substr-constraint)}) 

 arg-cs [(c/multi [c/int-constraint
(c/param (c/tag 'p) 0)]), (c/IntegerConstraint 1 2147483647 -2147483648)] 

 result-type (c/NoValues [c/strbuff-constraint
c/int-constraint]) 

 Conflicting assertions (1082)  at assertion-tests/and-constraints-2.toc: 8
Integer c/no-int from:    String from:
core: 1202                core: 336   
core: 1204                core: 22    
core: 95                              
core: 97                              
                                      
                                      


*** site 1076 assertion-tests/add-items-list-1.toc: 18 
 (h (vector 'a 'b)) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity679)
(c/seq-c [(c/multi [(c/sum-c [(c/list-c [c/top-type
c/int-constraint]
c/no-tail)
(c/vect-c [c/top-type
c/int-constraint]
c/no-tail)])
(c/param (c/tag 'fn-arity679) 0)])]
c/no-tail)
;; returns
c/strbuff-constraint)}) 

 arg-cs [(c/vect-c [(c/SymbolConstraint 'a)
(c/SymbolConstraint 'b)]
c/no-tail)] 

 result-type (c/NoValues [c/int-constraint
(c/SymbolConstraint 'b)]) 

 Conflicting assertions (1082)  at assertion-tests/add-items-list-1.toc: 18
Symbol 'b from:    Integer c/no-int from:  
                   add-items-list-1.toc: 15
                   add-items-list-1.toc: 14
                   add-items-list-1.toc: 10
                   add-items-list-1.toc: 11
                   core: 1202              
                   core: 1204              
                   core: 95                
                   core: 97                
                                           
                                           


*** Could not find type constraint for 'enum' at assertion-tests/bad-enum-2.toc: 2

*** site 1076 assertion-tests/add-items-list-2.toc: 19 
 (h (vector 'a 'b)) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity683)
(c/seq-c [(c/multi [(c/sum-c [(c/list-c [c/top-type
c/int-constraint]
c/no-tail)
(c/vect-c [c/top-type
c/int-constraint]
c/no-tail)])
(c/param (c/tag 'fn-arity683) 0)])]
c/no-tail)
;; returns
c/int-constraint)}) 

 arg-cs [(c/vect-c [(c/SymbolConstraint 'a)
(c/SymbolConstraint 'b)]
c/no-tail)] 

 result-type (c/NoValues [c/int-constraint
(c/SymbolConstraint 'b)]) 

 Conflicting assertions (1082)  at assertion-tests/add-items-list-2.toc: 19
Symbol 'b from:    Integer c/no-int from:  
                   add-items-list-2.toc: 16
                   add-items-list-2.toc: 11
                   add-items-list-2.toc: 12
                   core: 1202              
                   core: 1204              
                   core: 95                
                   core: 97                
                                           
                                           


*** Conflicting assertions (706)  at assertion-tests/bad-and-1.toc: 4
Maybe from:    ArrayNode from:
               core: 2492     
               core: 2497     
                              
                              


*** Could not find type constraint for 'enum' at assertion-tests/bad-enum-4.toc: 2

*** Could not find type constraint for 'enum' at assertion-tests/bad-enum-3.toc: 4

*** site 1076 assertion-tests/bad-constructor-param-1.toc: 10 
 (Boogie (vector 1 2 'p)) 

 target-c (c/ReifiedConstraint 75 (c/tag "* Boogie constructor at assertion-tests/bad-constructor-param-1.toc: 2 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag '* Boogie constructor at assertion-tests/bad-constructor-param-1.toc: 2 *)
(c/seq-c [c/top-type
(c/seq-c [] (c/coll-of-c c/int-constraint))]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "Boogie")
{}
{c/contents c/top-type
(c/Field (c/tag ".xs")) (c/multi [(c/seq-c [] (c/coll-of-c c/int-constraint))
(c/param (c/tag '* Boogie constructor at assertion-tests/bad-constructor-param-1.toc: 2 *) 1)])
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "") 

 arg-cs [(c/vect-c [(c/IntegerConstraint 1 2147483647 -2147483648)
(c/IntegerConstraint 2 2147483647 -2147483648)
(c/SymbolConstraint 'p)]
c/no-tail)] 

 result-type (c/NoValues [c/int-constraint
(c/SymbolConstraint 'p)]) 

 Conflicting assertions (1082)  at assertion-tests/bad-constructor-param-1.toc: 10
Symbol 'p from:    Integer c/no-int from:
                                         
                                         


*** site 1076 assertion-tests/bad-constructor-param-3.toc: 14 
 (Boogie (vector 1 2 'p)) 

 target-c (c/ReifiedConstraint 79 (c/tag "* Boogie constructor at assertion-tests/bad-constructor-param-3.toc: 2 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag '* Boogie constructor at assertion-tests/bad-constructor-param-3.toc: 2 *)
(c/seq-c [c/top-type
(c/seq-c [] (c/coll-of-c (c/sum-c [c/strbuff-constraint
c/substr-constraint])))]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "Boogie")
{}
{c/contents c/top-type
(c/Field (c/tag ".xs")) (c/multi [(c/seq-c [] (c/coll-of-c (c/sum-c [c/strbuff-constraint
c/substr-constraint])))
(c/param (c/tag '* Boogie constructor at assertion-tests/bad-constructor-param-3.toc: 2 *) 1)])
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "") 

 arg-cs [(c/vect-c [(c/IntegerConstraint 1 2147483647 -2147483648)
(c/IntegerConstraint 2 2147483647 -2147483648)
(c/SymbolConstraint 'p)]
c/no-tail)] 

 result-type (c/NoValues [c/strbuff-constraint
(c/IntegerConstraint 1 2147483647 -2147483648)]) 

 Conflicting assertions (1082)  at assertion-tests/bad-constructor-param-3.toc: 14
Integer 1 from:    String from:
                   core: 22    
                               
                               


*** Conflicting assertions (510)  at assertion-tests/bad-dipatch-type.toc: 8
BogusType from:    String from:           
                   bad-dipatch-type.toc: 4
                   core: 22               
                                          
                                          


*** Conflicting assertions (706)  at assertion-tests/bad-and-clause.toc: 9
Maybe from:    List from:
               core: 1648
                         
                         


*** site 1076 assertion-tests/bad-impl-arity.toc: 4 
 (take "Bogus") 

 target-c (c/ProtoImpls
(c/tag "take")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'take)
(c/list-c [(c/param (c/tag 'take) 0)
(c/multi [c/int-constraint
(c/param (c/tag 'take) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/inner-type-of-op
(c/param (c/tag 'take) 0)
)))})

{2 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity231)
(c/list-c [(c/multi [(c/param (c/tag 'fn-arity231) 0)
c/strbuff-constraint])
(c/multi [(c/param (c/tag 'fn-arity231) 1)
(c/IntegerConstraint c/no-int 2147483647 0)])]
c/no-tail)
;; returns
(c/multi [c/substr-constraint
(c/coll-of-c (c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity231) 0)
)
c/substr-constraint]))]))}), 5 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity230)
(c/list-c [(c/multi [(c/param (c/tag 'fn-arity230) 0)
c/substr-constraint])
(c/multi [(c/param (c/tag 'fn-arity230) 1)
(c/IntegerConstraint c/no-int 2147483647 0)])]
c/no-tail)
;; returns
(c/multi [c/substr-constraint
(c/coll-of-c (c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity230) 0)
)
c/substr-constraint]))]))}), 6 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity271)
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity271) 0)])
(c/multi [c/int-constraint
(c/param (c/tag 'fn-arity271) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity271) 0)
)))}), 8 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity336)
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity336) 0)])
(c/multi [c/int-constraint
(c/param (c/tag 'fn-arity336) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity336) 0)
)))})}) 

 arg-cs [(c/StrBuffConstraint "Bogus")] 

 result-type (c/NoValues [(c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity231)
(c/list-c [(c/multi [(c/param (c/tag 'fn-arity231) 0)
c/strbuff-constraint])
(c/multi [(c/param (c/tag 'fn-arity231) 1)
(c/IntegerConstraint c/no-int 2147483647 0)])]
c/no-tail)
;; returns
(c/multi [c/substr-constraint
(c/coll-of-c (c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity231) 0)
)
c/substr-constraint]))]))})
(c/ReifiedConstraint 0 (c/tag "No arity found")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")]) 

 Conflicting assertions (1082)  at assertion-tests/bad-impl-arity.toc: 4
No arity found from:    Function from
                                     
                                     


*** site 1076 assertion-tests/bad-constructor-call.toc: 6 
 (AnotherType 1) 

 target-c (c/ReifiedConstraint 71 (c/tag "* AnotherType constructor at assertion-tests/bad-constructor-call.toc: 2 *")
{}
{}
(c/fn-c []
{3 (c/fn-arity
(c/tag '* AnotherType constructor at assertion-tests/bad-constructor-call.toc: 2 *)
(c/seq-c [c/top-type
c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "AnotherType")
{}
{c/contents c/top-type
(c/Field (c/tag ".x")) (c/param (c/tag '* AnotherType constructor at assertion-tests/bad-constructor-call.toc: 2 *) 1)
(c/Field (c/tag ".z")) (c/param (c/tag '* AnotherType constructor at assertion-tests/bad-constructor-call.toc: 2 *) 2)
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "") 

 arg-cs [(c/IntegerConstraint 1 2147483647 -2147483648)] 

 result-type (c/NoValues [(c/fn-c []
{3 (c/fn-arity
(c/tag '* AnotherType constructor at assertion-tests/bad-constructor-call.toc: 2 *)
(c/seq-c [c/top-type
c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "AnotherType")
{}
{c/contents c/top-type
(c/Field (c/tag ".x")) (c/param (c/tag '* AnotherType constructor at assertion-tests/bad-constructor-call.toc: 2 *) 1)
(c/Field (c/tag ".z")) (c/param (c/tag '* AnotherType constructor at assertion-tests/bad-constructor-call.toc: 2 *) 2)
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
(c/ReifiedConstraint 0 (c/tag "No arity found")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")]) 

 Conflicting assertions (1082)  at assertion-tests/bad-constructor-call.toc: 6
No arity found from:    Function from
                                     
                                     


*** No type named 'BogusType' was found. Used at assertion-tests/bad-inline-result-type.toc: 3

*** site 1076 assertion-tests/bad-field-2.toc: 17 
 (foolie zipper) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity694)
(c/seq-c [(c/multi [(c/ReifiedConstraint 0 (c/tag "field 'not-there' required")
{}
{(c/Field (c/tag ".not-there")) c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity694) 0)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag ".not-there")
(c/fn-c []
{2 (c/fn-arity
(c/tag '.not-there_setter)
(c/seq-c [(c/multi [(c/param (c/tag '.not-there_setter) 0)
(c/ReifiedConstraint 0 (c/tag "field 'not-there' required")
{}
{(c/Field (c/tag ".not-there")) c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
(c/param (c/tag '.not-there_setter) 1)]
c/no-tail)
;; returns
(c/type-op c/set-to-op
(c/param (c/tag '.not-there_setter) 0)
[[(c/Field (c/tag ".not-there"))]
(c/param (c/tag '.not-there_setter) 1)]
)), 1 (c/fn-arity
(c/tag '.not-there_getter)
(c/seq-c [(c/multi [(c/param (c/tag '.not-there_getter) 0)
(c/ReifiedConstraint 0 (c/tag "field 'not-there' required")
{}
{(c/Field (c/tag ".not-there")) c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])]
c/no-tail)
;; returns
(c/type-op c/get-from-op
(c/param (c/tag '.not-there_getter) 0)
[(c/Field (c/tag ".not-there"))]
))})

{82 (c/fn-c []
{2 (c/fn-arity
(c/tag 'Ooops-.not-there-setter)
(c/seq-c [(c/multi [(c/param (c/tag 'Ooops-.not-there-setter) 0)
(c/ReifiedConstraint 82 (c/tag "Ooops")
{(c/Field (c/tag ".not-there")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".not-there")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")])
(c/multi [(c/param (c/tag 'Ooops-.not-there-setter) 1)
c/top-type])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/set-to-op
(c/param (c/tag 'Ooops-.not-there-setter) 0)
[[(c/Field (c/tag ".not-there"))]
(c/param (c/tag 'Ooops-.not-there-setter) 1)]
)
(c/type-op c/set-to-op
(c/param (c/tag 'Ooops-.not-there-setter) 0)
[[(c/Field (c/tag ".not-there"))]
(c/param (c/tag 'Ooops-.not-there-setter) 1)]
)])), 1 (c/fn-arity
(c/tag 'Ooops-.not-there-getter)
(c/seq-c [(c/multi [(c/param (c/tag 'Ooops-.not-there-getter) 0)
(c/ReifiedConstraint 82 (c/tag "Ooops")
{(c/Field (c/tag ".not-there")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".not-there")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'Ooops-.not-there-getter) 0)
[(c/Field (c/tag ".not-there"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'Ooops-.not-there-getter) 0)
[(c/Field (c/tag ".not-there"))]
)]))})})
[(c/param (c/tag 'fn-arity694) 0)]
))}) 

 arg-cs [(c/multi [(c/ReifiedConstraint 86 (c/tag "Bogus")
{(c/Field (c/tag ".x-field")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".x-field")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity696) 0)])] 

 result-type (c/NoValues [(c/ReifiedConstraint 0 (c/tag "field 'not-there' required")
{}
{(c/Field (c/tag ".not-there")) c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 86 (c/tag "Bogus")
{(c/Field (c/tag ".x-field")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".x-field")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")]) 

 Conflicting assertions (1082)  at assertion-tests/bad-field-2.toc: 17
Bogus from:            field 'not-there' required from:
bad-field-2.toc: 11    bad-field-2.toc: 9              
bad-field-2.toc: 13                                    
bad-field-2.toc: 12                                    
bad-field-2.toc: 4                                     
                                                       
                                                       


*** site 1076 assertion-tests/apply-constructor.toc: 13 
 (g 's "8") 

 target-c (c/fn-c []
{c/variadic (c/fn-arity
(c/tag 'fn-arity697)
(c/seq-c [] (c/multi [(c/list-c [c/sym-constraint
c/int-constraint]
c/no-tail)
(c/param (c/tag 'fn-arity697) 0)]))
;; returns
(c/type-op c/apply-op
(c/ReifiedConstraint 67 (c/tag "* Popper constructor at assertion-tests/apply-constructor.toc: 2 *")
{}
{}
(c/fn-c []
{3 (c/fn-arity
(c/tag '* Popper constructor at assertion-tests/apply-constructor.toc: 2 *)
(c/seq-c [c/top-type
c/sym-constraint
c/int-constraint]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "Popper")
{}
{c/contents c/top-type
(c/Field (c/tag ".x")) (c/multi [c/sym-constraint
(c/param (c/tag '* Popper constructor at assertion-tests/apply-constructor.toc: 2 *) 1)])
(c/Field (c/tag ".y")) (c/multi [c/int-constraint
(c/param (c/tag '* Popper constructor at assertion-tests/apply-constructor.toc: 2 *) 2)])
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")
(c/multi [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity697) 0)])
(c/seq-c [c/sym-constraint
c/int-constraint]
c/no-tail)])
))}) 

 arg-cs [(c/SymbolConstraint 's), (c/StrBuffConstraint "8")] 

 result-type (c/NoValues [c/int-constraint
(c/StrBuffConstraint "8")]) 

 Conflicting assertions (1082)  at assertion-tests/apply-constructor.toc: 13
String from:    Integer c/no-int from:   
                apply-constructor.toc: 10
                apply-constructor.toc: 7 
                                         
                                         


*** site 1076 assertion-tests/bad-inner-11.toc: 12 
 (f (g "x")) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity698)
(c/seq-c [(c/multi [(c/MaybeConstraint c/int-constraint)
(c/param (c/tag 'fn-arity698) 0)])]
c/no-tail)
;; returns
(c/MaybeConstraint c/int-constraint))}) 

 arg-cs [(c/MaybeConstraint c/substr-constraint)] 

 result-type (c/NoValues [c/int-constraint
c/substr-constraint]) 

 Conflicting assertions (1082)  at assertion-tests/bad-inner-11.toc: 12
String from:    Integer c/no-int from:
core: 333       bad-inner-11.toc: 4   
core: 338       core: 1202            
                core: 1204            
                core: 95              
                core: 97              
                                      
                                      


*** site 1076 assertion-tests/bad-flat-map-inner.toc: 3 
 (flat-map (maybe (inc s)) (fn  [x]
(map (maybe (symbol x)) (fn  [y]
(str y))))) 

 target-c (c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'flat-map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])
0
))
(c/param (c/tag 'flat-map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])]
c/no-tail)
;; returns
c/top-type)})

{6 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity162)
(c/list-c [(c/multi [(c/param (c/tag 'fn-arity162) 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity162) 1)
0
)))])
(c/multi [(c/param (c/tag 'fn-arity162) 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c (c/list-c [] (c/coll-of-c c/top-type))))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/concat-op
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity162) 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity162) 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity162) 0)
)])]
)
(c/list-c [] (c/coll-of-c c/top-type))])))
)
(c/seq-c [] (c/coll-of-c (c/type-op c/inner-type-of-op
(c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/intersect c/fn-constraint
(c/coll-of-c (c/list-c [] (c/coll-of-c c/top-type))))
(c/param (c/tag 'fn-arity162) 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity162) 0)
(c/seq-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity162) 1)
0
)))])
)]
)
)))]))}), 8 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity304)
(c/list-c [(c/multi [(c/param (c/tag 'fn-arity304) 0)
(c/vect-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity304) 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/intersect c/fn-constraint
(c/coll-of-c (c/vect-c [] (c/coll-of-c c/top-type))))
(c/param (c/tag 'fn-arity304) 1)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/type-op c/inner-type-of-op
(c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/intersect c/fn-constraint
(c/coll-of-c (c/vect-c [] (c/coll-of-c c/top-type))))
(c/param (c/tag 'fn-arity304) 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity304) 0)
(c/seq-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity304) 1)
0
)))])
)]
)
))))}), 15 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity348)
(c/list-c [(c/multi [(c/param (c/tag 'fn-arity348) 0)
c/promise-constraint])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity348) 1)])]
c/no-tail)
;; returns
(c/multi [c/promise-constraint
(c/param (c/tag 'new-p) 0)]))}), 16 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity369)
(c/list-c [(c/multi [(c/param (c/tag 'fn-arity369) 0)
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity369) 1)])]
c/no-tail)
;; returns
(c/multi [(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag 'new-fut) 0)]))}), 7 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity145)
(c/list-c [(c/multi [(c/param (c/tag 'fn-arity145) 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity145) 1)
0
))
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity145) 1)
0
))])
(c/multi [(c/param (c/tag 'fn-arity145) 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag 'fn-arity145) 1)])
[(c/type-op c/call-value-op
(c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity126)
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag 'fn-arity126) 0)])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/inner-type-of-op
(c/multi [c/maybe-constraint
(c/param (c/tag 'fn-arity126) 0)])
(c/tag "#result"))
(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity126) 0)
)]))})
[(c/multi [(c/param (c/tag 'fn-arity145) 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity145) 1)
0
))])]
)]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag 'fn-arity145) 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/param (c/tag 'fn-arity145) 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity145) 1)
0
))])
)]
(c/tag "#result"))]))}), 35 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity627)
(c/list-c [(c/multi [(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity641) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity640) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity639) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity638) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity637) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity636) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity635) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity634) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity633) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity632) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity631) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity630) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity629) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity628) 0)
[(c/Field (c/tag ".set-map"))]
)])
}
{c/contents c/top-type
(c/Field (c/tag ".set-map")) (c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity641) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity640) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity639) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity638) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity637) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity636) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity635) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity634) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity633) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity632) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity631) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity630) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity629) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity628) 0)
[(c/Field (c/tag ".set-map"))]
)])
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity627) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity627) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity627) 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{c/contents c/top-type
(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
(c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity641)
(c/seq-c [(c/multi [(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{c/contents c/top-type
(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity641) 0)])
(c/param (c/tag 'fn-arity641) 1)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "get")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'get)
(c/list-c [(c/param (c/tag 'get) 0)
(c/param (c/tag 'get) 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag 'get) 0)
)))})

{})
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity641) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])])
(c/param (c/tag 'fn-arity641) 1)]
))})
 empty-list c/no-symbol ""))})}) 

 arg-cs [(c/MaybeConstraint c/int-constraint), (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity701)
(c/seq-c [(c/multi [(c/sum-c [c/strbuff-constraint
c/substr-constraint])
(c/param (c/tag 'fn-arity701) 0)])]
c/no-tail)
;; returns
(c/MaybeConstraint c/strbuff-constraint))})] 

 result-type (c/NoValues [c/strbuff-constraint
c/int-constraint]) 

 Conflicting assertions (1082)  at assertion-tests/bad-flat-map-inner.toc: 3
Integer c/no-int from:    String from:
core: 95                  core: 345   
core: 98                  core: 347   
                          core: 22    
                                      
                                      


*** site 1076 assertion-tests/bad-inner-12.toc: 7 
 (map (first (map x str)) inc) 

 target-c (c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{6 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity164)
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity164) 0)
(c/seq-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity164) 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity164) 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity164) 1)
)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity164) 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity164) 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity164) 0)
)])]
)])))), 3 (c/fn-arity
(c/tag 'fn-arity163)
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity163) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity163) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity163) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity163) 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity163) 2)
[(c/list-c [] c/no-tail)]
)
(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'flat-map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])
0
))
(c/param (c/tag 'flat-map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity163) 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity163) 0)
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity183)
(c/seq-c [(c/param (c/tag 'fn-arity183) 0)]
c/no-tail)
;; returns
(c/coll-of-c (c/seq-c []
(c/coll-of-c c/top-type))))})]
)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity163) 2)
[(c/list-c [] c/no-tail)]
)])
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'flat-map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])
0
))
(c/param (c/tag 'flat-map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity163) 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity163) 0)
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity183)
(c/seq-c [(c/param (c/tag 'fn-arity183) 0)]
c/no-tail)
;; returns
(c/coll-of-c (c/seq-c []
(c/coll-of-c c/top-type))))})]
)]))}), 8 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity306)
(c/list-c [(c/multi [(c/param (c/tag 'fn-arity306) 0)
(c/vect-c [] (c/coll-of-c c/top-type))
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity306) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity306) 1)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity306) 1)
)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity306) 1)
[(c/type-op c/inner-type-of-op
(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity306) 0)])
)]
)])))), 3 (c/fn-arity
(c/tag 'fn-arity305)
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity305) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity305) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity305) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity305) 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'flat-map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])
0
))
(c/param (c/tag 'flat-map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity305) 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity305) 0)
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity329)
(c/seq-c [(c/param (c/tag 'fn-arity329) 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity305) 2)
[(c/vect-c [] c/no-tail)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity330)
(c/seq-c [(c/param (c/tag 'fn-arity330) 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "conj")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'conj)
(c/list-c [(c/param (c/tag 'conj) 0)
(c/param (c/tag 'conj) 1)]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/param (c/tag 'fn-arity330) 0)
(c/param (c/tag 'fn-arity329) 0)]
))})]
))})]
)
(c/ProtoImpls
(c/tag "reverse")
(c/fn-c []
{1 (c/fn-arity
(c/tag 'reverse)
(c/list-c [(c/param (c/tag 'reverse) 0)]
c/no-tail)
;; returns
c/top-type)})

{2 (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity241)
(c/list-c [(c/multi [c/strbuff-constraint
(c/param (c/tag 'fn-arity241) 0)])]
c/no-tail)
;; returns
(c/multi [c/strbuff-constraint
(c/coll-of-c (c/multi [(c/type-op c/inner-type-of-op
(c/multi [c/strbuff-constraint
(c/param (c/tag 'fn-arity241) 0)])
)
c/substr-constraint]))]))}), 5 (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity240)
(c/list-c [(c/multi [c/substr-constraint
(c/param (c/tag 'fn-arity240) 0)])]
c/no-tail)
;; returns
(c/multi [c/strbuff-constraint
(c/coll-of-c (c/multi [(c/type-op c/inner-type-of-op
(c/multi [c/substr-constraint
(c/param (c/tag 'fn-arity240) 0)])
)
c/substr-constraint]))]))}), 6 (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity82)
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity82) 0)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/type-op c/inner-type-of-op
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity82) 0)])
))))}), 8 (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity88)
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity88) 0)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/type-op c/inner-type-of-op
(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity88) 0)])
))))})})]
))}), 56 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity553)
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".x")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity553) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity553) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity553) 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents (c/type-op c/call-value-op
(c/param (c/tag 'fn-arity553) 1)
)
(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag 'fn-arity553) 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity554) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity554) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity553) 0)
[(c/Field (c/tag ".x"))]
)])]
)
}
c/fn-constraint
 empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag 'fn-arity552)
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".x")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity552) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity552) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity552) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity552) 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity552) 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity554) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity554) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity553) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity552) 0)
[(c/Field (c/tag ".x"))]
)])]
)
(c/ReifiedConstraint 59 (c/tag "* RecurseFinal constructor at core: 2559 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag '* RecurseFinal constructor at core: 2559 *)
(c/seq-c [c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "RecurseFinal")
{}
{c/contents c/top-type
(c/Field (c/tag ".x")) (c/param (c/tag '* RecurseFinal constructor at core: 2559 *) 1)
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")]
))}), 15 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity349)
(c/list-c [(c/multi [(c/param (c/tag 'fn-arity349) 0)
c/promise-constraint])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity349) 1)])]
c/no-tail)
;; returns
(c/multi [(c/param (c/tag 'new-p) 0)
c/promise-constraint]))}), 16 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity370)
(c/list-c [(c/multi [(c/param (c/tag 'fn-arity370) 0)
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity370) 1)])]
c/no-tail)
;; returns
(c/multi [(c/param (c/tag 'new-fut) 0)
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")]))}), 55 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity556)
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".x")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity556) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity556) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity556) 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents (c/type-op c/call-value-op
(c/param (c/tag 'fn-arity556) 1)
)
(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag 'fn-arity556) 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity557) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity557) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity556) 0)
[(c/Field (c/tag ".x"))]
)])]
)
}
c/fn-constraint
 empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag 'fn-arity555)
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".x")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity555) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity555) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity555) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity555) 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity555) 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity557) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity557) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity556) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity555) 0)
[(c/Field (c/tag ".x"))]
)])]
)
(c/ReifiedConstraint 60 (c/tag "* RecurseWith constructor at core: 2571 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag '* RecurseWith constructor at core: 2571 *)
(c/seq-c [c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "RecurseWith")
{}
{c/contents c/top-type
(c/Field (c/tag ".x")) (c/param (c/tag '* RecurseWith constructor at core: 2571 *) 1)
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")]
))}), 7 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity129)
(c/list-c [(c/multi [(c/param (c/tag 'fn-arity129) 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity129) 1)
0
))
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity129) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity129) 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity129) 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity129) 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity129) 0)
)])]
)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity129) 1)
)]))), 3 (c/fn-arity
(c/tag 'fn-arity128)
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag 'fn-arity128) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity128) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity128) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity128) 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/inner-type-of-op
(c/MaybeConstraint (c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity128) 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity128) 0)
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity3)
(c/seq-c [(c/param (c/tag 'fn-arity3) 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag 'fn-arity3) 0)))})]
))
)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity128) 2)
[c/maybe-constraint]
)]))}), 35 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity628)
(c/list-c [(c/multi [(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity641) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity640) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity639) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity638) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity637) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity636) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity635) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity634) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity633) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity632) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity631) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity630) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity629) 0)
[(c/Field (c/tag ".set-map"))]
)])
}
{c/contents c/top-type
(c/Field (c/tag ".set-map")) (c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity641) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity640) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity639) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity638) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity637) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity636) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity635) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity634) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity633) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity632) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity631) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity630) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity629) 0)
[(c/Field (c/tag ".set-map"))]
)])
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity628) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity628) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity628) 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{c/contents (c/type-op c/call-value-op
(c/param (c/tag 'fn-arity628) 1)
)
(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
(c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity641)
(c/seq-c [(c/multi [(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{c/contents c/top-type
(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity641) 0)])
(c/param (c/tag 'fn-arity641) 1)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "get")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'get)
(c/list-c [(c/param (c/tag 'get) 0)
(c/param (c/tag 'get) 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag 'get) 0)
)))})

{})
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity641) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])])
(c/param (c/tag 'fn-arity641) 1)]
))})
 empty-list c/no-symbol ""))})}) 

 arg-cs [(c/MaybeConstraint c/strbuff-constraint), (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity120)
(c/seq-c [(c/multi [c/int-constraint
(c/param (c/tag 'fn-arity120) 0)])]
c/no-tail)
;; returns
c/int-constraint)})] 

 result-type (c/NoValues [c/strbuff-constraint
c/int-constraint]) 

 Conflicting assertions (1082)  at assertion-tests/bad-inner-12.toc: 7
Integer c/no-int from:    String from:
core: 1204                core: 1712  
core: 95                  core: 22    
core: 97                              
                                      
                                      


*** site 1076 assertion-tests/bad-inner-15.toc: 5 
 (inc (extract (maybe "1"))) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity120)
(c/seq-c [(c/multi [c/int-constraint
(c/param (c/tag 'fn-arity120) 0)])]
c/no-tail)
;; returns
c/int-constraint)}) 

 arg-cs [(c/StrBuffConstraint "1")] 

 result-type (c/NoValues [c/int-constraint
(c/StrBuffConstraint "1")]) 

 Conflicting assertions (1082)  at assertion-tests/bad-inner-15.toc: 5
String from:    Integer c/no-int from:
                core: 1204            
                core: 95              
                core: 97              
                                      
                                      


*** site 1076 assertion-tests/bad-inner-13.toc: 6 
 (map (map x str) inc) 

 target-c (c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{6 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity164)
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity164) 0)
(c/seq-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity164) 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity164) 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity164) 1)
)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity164) 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity164) 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity164) 0)
)])]
)])))), 3 (c/fn-arity
(c/tag 'fn-arity163)
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity163) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity163) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity163) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity163) 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity163) 2)
[(c/list-c [] c/no-tail)]
)
(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'flat-map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])
0
))
(c/param (c/tag 'flat-map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity163) 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity163) 0)
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity183)
(c/seq-c [(c/param (c/tag 'fn-arity183) 0)]
c/no-tail)
;; returns
(c/coll-of-c (c/seq-c []
(c/coll-of-c c/top-type))))})]
)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity163) 2)
[(c/list-c [] c/no-tail)]
)])
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'flat-map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])
0
))
(c/param (c/tag 'flat-map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity163) 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity163) 0)
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity183)
(c/seq-c [(c/param (c/tag 'fn-arity183) 0)]
c/no-tail)
;; returns
(c/coll-of-c (c/seq-c []
(c/coll-of-c c/top-type))))})]
)]))}), 8 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity306)
(c/list-c [(c/multi [(c/param (c/tag 'fn-arity306) 0)
(c/vect-c [] (c/coll-of-c c/top-type))
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity306) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity306) 1)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity306) 1)
)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity306) 1)
[(c/type-op c/inner-type-of-op
(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity306) 0)])
)]
)])))), 3 (c/fn-arity
(c/tag 'fn-arity305)
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity305) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity305) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity305) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity305) 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'flat-map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])
0
))
(c/param (c/tag 'flat-map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity305) 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity305) 0)
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity329)
(c/seq-c [(c/param (c/tag 'fn-arity329) 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity305) 2)
[(c/vect-c [] c/no-tail)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity330)
(c/seq-c [(c/param (c/tag 'fn-arity330) 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "conj")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'conj)
(c/list-c [(c/param (c/tag 'conj) 0)
(c/param (c/tag 'conj) 1)]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/param (c/tag 'fn-arity330) 0)
(c/param (c/tag 'fn-arity329) 0)]
))})]
))})]
)
(c/ProtoImpls
(c/tag "reverse")
(c/fn-c []
{1 (c/fn-arity
(c/tag 'reverse)
(c/list-c [(c/param (c/tag 'reverse) 0)]
c/no-tail)
;; returns
c/top-type)})

{2 (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity241)
(c/list-c [(c/multi [c/strbuff-constraint
(c/param (c/tag 'fn-arity241) 0)])]
c/no-tail)
;; returns
(c/multi [c/strbuff-constraint
(c/coll-of-c (c/multi [(c/type-op c/inner-type-of-op
(c/multi [c/strbuff-constraint
(c/param (c/tag 'fn-arity241) 0)])
)
c/substr-constraint]))]))}), 5 (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity240)
(c/list-c [(c/multi [c/substr-constraint
(c/param (c/tag 'fn-arity240) 0)])]
c/no-tail)
;; returns
(c/multi [c/strbuff-constraint
(c/coll-of-c (c/multi [(c/type-op c/inner-type-of-op
(c/multi [c/substr-constraint
(c/param (c/tag 'fn-arity240) 0)])
)
c/substr-constraint]))]))}), 6 (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity82)
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity82) 0)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/type-op c/inner-type-of-op
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity82) 0)])
))))}), 8 (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity88)
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity88) 0)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/type-op c/inner-type-of-op
(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity88) 0)])
))))})})]
))}), 56 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity553)
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".x")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity553) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity553) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity553) 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents (c/type-op c/call-value-op
(c/param (c/tag 'fn-arity553) 1)
)
(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag 'fn-arity553) 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity554) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity554) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity553) 0)
[(c/Field (c/tag ".x"))]
)])]
)
}
c/fn-constraint
 empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag 'fn-arity552)
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".x")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity552) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity552) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity552) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity552) 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity552) 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity554) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity554) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity553) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity552) 0)
[(c/Field (c/tag ".x"))]
)])]
)
(c/ReifiedConstraint 59 (c/tag "* RecurseFinal constructor at core: 2559 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag '* RecurseFinal constructor at core: 2559 *)
(c/seq-c [c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "RecurseFinal")
{}
{c/contents c/top-type
(c/Field (c/tag ".x")) (c/param (c/tag '* RecurseFinal constructor at core: 2559 *) 1)
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")]
))}), 15 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity349)
(c/list-c [(c/multi [(c/param (c/tag 'fn-arity349) 0)
c/promise-constraint])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity349) 1)])]
c/no-tail)
;; returns
(c/multi [(c/param (c/tag 'new-p) 0)
c/promise-constraint]))}), 16 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity370)
(c/list-c [(c/multi [(c/param (c/tag 'fn-arity370) 0)
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity370) 1)])]
c/no-tail)
;; returns
(c/multi [(c/param (c/tag 'new-fut) 0)
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")]))}), 55 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity556)
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".x")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity556) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity556) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity556) 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents (c/type-op c/call-value-op
(c/param (c/tag 'fn-arity556) 1)
)
(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag 'fn-arity556) 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity557) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity557) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity556) 0)
[(c/Field (c/tag ".x"))]
)])]
)
}
c/fn-constraint
 empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag 'fn-arity555)
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".x")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity555) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity555) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity555) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity555) 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity555) 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity557) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity557) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity556) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity555) 0)
[(c/Field (c/tag ".x"))]
)])]
)
(c/ReifiedConstraint 60 (c/tag "* RecurseWith constructor at core: 2571 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag '* RecurseWith constructor at core: 2571 *)
(c/seq-c [c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "RecurseWith")
{}
{c/contents c/top-type
(c/Field (c/tag ".x")) (c/param (c/tag '* RecurseWith constructor at core: 2571 *) 1)
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")]
))}), 7 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity129)
(c/list-c [(c/multi [(c/param (c/tag 'fn-arity129) 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity129) 1)
0
))
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity129) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity129) 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity129) 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity129) 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity129) 0)
)])]
)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity129) 1)
)]))), 3 (c/fn-arity
(c/tag 'fn-arity128)
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag 'fn-arity128) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity128) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity128) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity128) 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/inner-type-of-op
(c/MaybeConstraint (c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity128) 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity128) 0)
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity3)
(c/seq-c [(c/param (c/tag 'fn-arity3) 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag 'fn-arity3) 0)))})]
))
)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity128) 2)
[c/maybe-constraint]
)]))}), 35 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity628)
(c/list-c [(c/multi [(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity641) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity640) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity639) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity638) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity637) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity636) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity635) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity634) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity633) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity632) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity631) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity630) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity629) 0)
[(c/Field (c/tag ".set-map"))]
)])
}
{c/contents c/top-type
(c/Field (c/tag ".set-map")) (c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity641) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity640) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity639) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity638) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity637) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity636) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity635) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity634) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity633) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity632) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity631) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity630) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity629) 0)
[(c/Field (c/tag ".set-map"))]
)])
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity628) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity628) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity628) 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{c/contents (c/type-op c/call-value-op
(c/param (c/tag 'fn-arity628) 1)
)
(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
(c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity641)
(c/seq-c [(c/multi [(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{c/contents c/top-type
(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity641) 0)])
(c/param (c/tag 'fn-arity641) 1)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "get")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'get)
(c/list-c [(c/param (c/tag 'get) 0)
(c/param (c/tag 'get) 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag 'get) 0)
)))})

{})
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity641) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])])
(c/param (c/tag 'fn-arity641) 1)]
))})
 empty-list c/no-symbol ""))})}) 

 arg-cs [(c/list-c [] (c/coll-of-c c/strbuff-constraint)), (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity120)
(c/seq-c [(c/multi [c/int-constraint
(c/param (c/tag 'fn-arity120) 0)])]
c/no-tail)
;; returns
c/int-constraint)})] 

 result-type (c/NoValues [c/strbuff-constraint
c/int-constraint]) 

 Conflicting assertions (1082)  at assertion-tests/bad-inner-13.toc: 6
Integer c/no-int from:    String from:
core: 1204                core: 1712  
core: 95                  core: 22    
core: 97                              
                                      
                                      


*** site 1076 assertion-tests/bad-inner-10.toc: 7 
 (f (vector (list 1 2) (vector 'x) (vector 3 6))) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity705)
(c/seq-c [(c/param (c/tag 'fn-arity705) 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "reduce")
(c/fn-c []
{3 (c/fn-arity
(c/tag 'reduce)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [2])
(c/param (c/tag 'reduce) 2)])
1
))
(c/param (c/tag 'reduce) 0)])
(c/param (c/tag 'reduce) 1)
(c/multi [(.required-arities c/fn-constraint [2])
(c/param (c/tag 'reduce) 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/param (c/tag 'reduce) 1)
(c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [2])
(c/param (c/tag 'reduce) 2)])
[(c/sum-c [(c/param (c/tag 'reduce) 1)
(c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [2])
(c/param (c/tag 'reduce) 2)])
)])
(c/type-op c/inner-type-of-op
(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [2])
(c/param (c/tag 'reduce) 2)])
1
))
(c/param (c/tag 'reduce) 0)])
)]
)]))})

{2 (c/fn-c []
{3 (c/fn-arity
(c/tag 'fn-arity211)
(c/list-c [(c/multi [c/strbuff-constraint
(c/param (c/tag 'fn-arity211) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity211) 2)
1
))])
(c/param (c/tag 'fn-arity211) 1)
(c/multi [(.required-arities c/fn-constraint [2])
(c/param (c/tag 'fn-arity211) 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/param (c/tag 'fn-arity211) 1)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity211) 2)
[(c/sum-c [(c/param (c/tag 'fn-arity211) 1)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity211) 2)
)])
(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity211) 2)
1
)
(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity211) 0)
)])]
)]))}), 5 (c/fn-c []
{3 (c/fn-arity
(c/tag 'fn-arity210)
(c/list-c [(c/multi [c/substr-constraint
(c/param (c/tag 'fn-arity210) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity210) 2)
1
))])
(c/param (c/tag 'fn-arity210) 1)
(c/multi [(.required-arities c/fn-constraint [2])
(c/param (c/tag 'fn-arity210) 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/param (c/tag 'fn-arity210) 1)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity210) 2)
[(c/sum-c [(c/param (c/tag 'fn-arity210) 1)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity210) 2)
)])
(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity210) 2)
1
)
(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity210) 0)
)])]
)]))}), 6 (c/fn-c []
{3 (c/fn-arity
(c/tag 'fn-arity160)
(c/list-c [(c/multi [(c/param (c/tag 'fn-arity160) 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity160) 2)
1
)))])
(c/param (c/tag 'fn-arity160) 1)
(c/multi [(.required-arities c/fn-constraint [2])
(c/param (c/tag 'fn-arity160) 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/param (c/tag 'fn-arity160) 1)
(c/multi [(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity160) 2)
[(c/sum-c [(c/param (c/tag 'fn-arity160) 1)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity160) 2)
)])
(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity160) 2)
1
)
(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity160) 0)
)])]
)
(c/param (c/tag 'fn-arity160) 1)])]))}), 8 (c/fn-c []
{3 (c/fn-arity
(c/tag 'fn-arity303)
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity303) 0)
(c/seq-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity303) 2)
1
)))])
(c/param (c/tag 'fn-arity303) 1)
(c/multi [(.required-arities c/fn-constraint [2])
(c/param (c/tag 'fn-arity303) 2)])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity303) 2)
[(c/param (c/tag 'fn-arity303) 1)
(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity303) 2)
1
)
(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity303) 0)
)])]
)
(c/sum-c [(c/param (c/tag 'fn-arity303) 1)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity303) 2)
[(c/sum-c [(c/param (c/tag 'fn-arity303) 1)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity303) 2)
)])
(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity303) 2)
1
)
(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity303) 0)
)])]
)])]))}), 35 (c/fn-c []
{3 (c/fn-arity
(c/tag 'fn-arity636)
(c/list-c [(c/multi [(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity641) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity640) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity639) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity638) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity637) 0)
[(c/Field (c/tag ".set-map"))]
)])
}
{c/contents c/top-type
(c/Field (c/tag ".set-map")) (c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity641) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity640) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity639) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity638) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity637) 0)
[(c/Field (c/tag ".set-map"))]
)])
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity636) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity636) 2)
1
))])
(c/param (c/tag 'fn-arity636) 1)
(c/multi [(.required-arities c/fn-constraint [2])
(c/param (c/tag 'fn-arity636) 2)])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/fn-c []
{3 (c/fn-arity
(c/tag 'fn-arity160)
(c/list-c [(c/multi [(c/param (c/tag 'fn-arity160) 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity160) 2)
1
)))])
(c/param (c/tag 'fn-arity160) 1)
(c/multi [(.required-arities c/fn-constraint [2])
(c/param (c/tag 'fn-arity160) 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/param (c/tag 'fn-arity160) 1)
(c/multi [(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity160) 2)
[(c/sum-c [(c/param (c/tag 'fn-arity160) 1)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity160) 2)
)])
(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity160) 2)
1
)
(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity160) 0)
)])]
)
(c/param (c/tag 'fn-arity160) 1)])]))})
[(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "vals")
(c/fn-c []
{1 (c/fn-arity
(c/tag 'vals)
(c/list-c [(c/param (c/tag 'vals) 0)]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c c/top-type)))})

{})
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity641) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity640) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity639) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity638) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity637) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity636) 0)
[(c/Field (c/tag ".set-map"))]
)])]
)
(c/param (c/tag 'fn-arity636) 1)
(c/param (c/tag 'fn-arity636) 2)]
)
(c/sum-c [(c/param (c/tag 'fn-arity636) 1)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity636) 2)
[(c/sum-c [(c/param (c/tag 'fn-arity636) 1)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity636) 2)
)])
(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity636) 2)
1
)
(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity636) 0)
)])]
)])]))})})
[(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "seq")
(c/fn-c []
{1 (c/fn-arity
(c/tag 'seq)
(c/list-c [(c/param (c/tag 'seq) 0)]
c/no-tail)
;; returns
(c/type-op c/list-from-op
(c/param (c/tag 'seq) 0)
(c/tag "#result")))})

{2 (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity203)
(c/list-c [(c/multi [c/strbuff-constraint
(c/param (c/tag 'fn-arity203) 0)])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/list-from-op
(c/multi [c/strbuff-constraint
(c/param (c/tag 'fn-arity203) 0)])
(c/tag "#result"))
(c/type-op c/list-from-op
(c/param (c/tag 'fn-arity203) 0)
)]))}), 5 (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity202)
(c/list-c [(c/multi [c/substr-constraint
(c/param (c/tag 'fn-arity202) 0)])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/list-from-op
(c/multi [c/substr-constraint
(c/param (c/tag 'fn-arity202) 0)])
(c/tag "#result"))
(c/type-op c/list-from-op
(c/param (c/tag 'fn-arity202) 0)
)]))}), 6 (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity176)
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity176) 0)])]
c/no-tail)
;; returns
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity176) 0)
(c/type-op c/list-from-op
(c/param (c/tag 'fn-arity176) 0)
)]))}), 8 (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity87)
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity87) 0)])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/list-from-op
(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity87) 0)])
(c/tag "#result"))
(c/type-op c/list-from-op
(c/param (c/tag 'fn-arity87) 0)
)]))}), 12 (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity498)
(c/list-c [(c/multi [(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity498) 0)])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/list-from-op
(c/param (c/tag 'fn-arity498) 0)
)
(c/list-c [] (c/coll-of-c (c/list-c [] (c/coll-of-c c/top-type))))]))}), 13 (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity497)
(c/list-c [(c/multi [(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity497) 0)])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/list-from-op
(c/param (c/tag 'fn-arity497) 0)
)
(c/list-c [] (c/coll-of-c (c/list-c [] (c/coll-of-c c/top-type))))]))}), 11 (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity499)
(c/list-c [(c/multi [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity499) 0)])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/list-from-op
(c/param (c/tag 'fn-arity499) 0)
)
(c/list-c [] (c/coll-of-c (c/list-c [] (c/coll-of-c c/top-type))))]))}), 35 (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity626)
(c/list-c [(c/multi [(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity641) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity640) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity639) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity638) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity637) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity636) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity635) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity634) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity633) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity632) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity631) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity630) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity629) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity628) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity627) 0)
[(c/Field (c/tag ".set-map"))]
)])
}
{c/contents c/top-type
(c/Field (c/tag ".set-map")) (c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity641) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity640) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity639) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity638) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity637) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity636) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity635) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity634) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity633) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity632) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity631) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity630) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity629) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity628) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity627) 0)
[(c/Field (c/tag ".set-map"))]
)])
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity626) 0)])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "vals")
(c/fn-c []
{1 (c/fn-arity
(c/tag 'vals)
(c/list-c [(c/param (c/tag 'vals) 0)]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c c/top-type)))})

{})
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity641) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity640) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity639) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity638) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity637) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity636) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity635) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity634) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity633) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity632) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity631) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity630) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity629) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity628) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity627) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity626) 0)
[(c/Field (c/tag ".set-map"))]
)])]
)
(c/type-op c/list-from-op
(c/param (c/tag 'fn-arity626) 0)
)]))})})
[(c/param (c/tag 'fn-arity705) 0)]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
(c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity706)
(c/seq-c [(c/param (c/tag 'fn-arity706) 0)
(c/seq-c [c/int-constraint
c/top-type]
c/no-tail)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "assoc")
(c/fn-c []
{3 (c/fn-arity
(c/tag 'assoc)
(c/list-c [(c/param (c/tag 'assoc) 0)
(c/param (c/tag 'assoc) 1)
(c/param (c/tag 'assoc) 2)]
c/no-tail)
;; returns
c/top-type)})

{12 (c/fn-c []
{3 (c/fn-arity
(c/tag 'fn-arity486)
(c/list-c [(c/multi [(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity486) 0)])
(c/param (c/tag 'fn-arity486) 1)
(c/param (c/tag 'fn-arity486) 2)]
c/no-tail)
;; returns
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")]))}), 13 (c/fn-c []
{3 (c/fn-arity
(c/tag 'fn-arity485)
(c/list-c [(c/multi [(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity485) 0)])
(c/param (c/tag 'fn-arity485) 1)
(c/param (c/tag 'fn-arity485) 2)]
c/no-tail)
;; returns
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")]))}), 11 (c/fn-c []
{3 (c/fn-arity
(c/tag 'fn-arity487)
(c/list-c [(c/multi [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity487) 0)])
(c/param (c/tag 'fn-arity487) 1)
(c/param (c/tag 'fn-arity487) 2)]
c/no-tail)
;; returns
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")]))}), 7 (c/fn-c []
{3 (c/fn-arity
(c/tag 'fn-arity135)
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag 'fn-arity135) 0)])
(c/param (c/tag 'fn-arity135) 1)
(c/param (c/tag 'fn-arity135) 2)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag 'fn-arity135) 2)))})})
[(c/param (c/tag 'fn-arity706) 0)
c/top-type
(c/vect-c [c/int-constraint
c/top-type]
c/no-tail)]
))})]
))}) 

 arg-cs [(c/vect-c [(c/list-c [(c/IntegerConstraint 1 2147483647 -2147483648)
(c/IntegerConstraint 2 2147483647 -2147483648)]
c/no-tail)
(c/vect-c [(c/SymbolConstraint 'x)]
c/no-tail)
(c/vect-c [(c/IntegerConstraint 3 2147483647 -2147483648)
(c/IntegerConstraint 6 2147483647 -2147483648)]
c/no-tail)]
c/no-tail)] 

 result-type (c/NoValues [c/int-constraint
(c/SymbolConstraint 'x)]) 

 Conflicting assertions (1082)  at assertion-tests/bad-inner-10.toc: 7
Symbol 'x from:    Integer c/no-int from:
                   bad-inner-10.toc: 4   
                   core: 1202            
                   core: 1204            
                   core: 95              
                   core: 97              
                                         
                                         


*** Could not find type constraint for 'do' at assertion-tests/bad-inner-16.toc: 10

*** site 1076 assertion-tests/bad-field-1.toc: 9 
 (.not-there (Bogus 99)) 

 target-c (c/ProtoImpls
(c/tag ".not-there")
(c/fn-c []
{2 (c/fn-arity
(c/tag '.not-there_setter)
(c/seq-c [(c/multi [(c/param (c/tag '.not-there_setter) 0)
(c/ReifiedConstraint 0 (c/tag "field 'not-there' required")
{}
{(c/Field (c/tag ".not-there")) c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
(c/param (c/tag '.not-there_setter) 1)]
c/no-tail)
;; returns
(c/type-op c/set-to-op
(c/param (c/tag '.not-there_setter) 0)
[[(c/Field (c/tag ".not-there"))]
(c/param (c/tag '.not-there_setter) 1)]
)), 1 (c/fn-arity
(c/tag '.not-there_getter)
(c/seq-c [(c/multi [(c/param (c/tag '.not-there_getter) 0)
(c/ReifiedConstraint 0 (c/tag "field 'not-there' required")
{}
{(c/Field (c/tag ".not-there")) c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])]
c/no-tail)
;; returns
(c/type-op c/get-from-op
(c/param (c/tag '.not-there_getter) 0)
[(c/Field (c/tag ".not-there"))]
))})

{80 (c/fn-c []
{2 (c/fn-arity
(c/tag 'Ooops-.not-there-setter)
(c/seq-c [(c/multi [(c/param (c/tag 'Ooops-.not-there-setter) 0)
(c/ReifiedConstraint 80 (c/tag "Ooops")
{(c/Field (c/tag ".not-there")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".not-there")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")])
(c/multi [(c/param (c/tag 'Ooops-.not-there-setter) 1)
c/top-type])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/set-to-op
(c/param (c/tag 'Ooops-.not-there-setter) 0)
[[(c/Field (c/tag ".not-there"))]
(c/param (c/tag 'Ooops-.not-there-setter) 1)]
)
(c/type-op c/set-to-op
(c/param (c/tag 'Ooops-.not-there-setter) 0)
[[(c/Field (c/tag ".not-there"))]
(c/param (c/tag 'Ooops-.not-there-setter) 1)]
)])), 1 (c/fn-arity
(c/tag 'Ooops-.not-there-getter)
(c/seq-c [(c/multi [(c/param (c/tag 'Ooops-.not-there-getter) 0)
(c/ReifiedConstraint 80 (c/tag "Ooops")
{(c/Field (c/tag ".not-there")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".not-there")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'Ooops-.not-there-getter) 0)
[(c/Field (c/tag ".not-there"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'Ooops-.not-there-getter) 0)
[(c/Field (c/tag ".not-there"))]
)]))})}) 

 arg-cs [(c/ReifiedConstraint 92 (c/tag "Bogus")
{(c/Field (c/tag ".x-field")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".x-field")) (c/IntegerConstraint 99 2147483647 -2147483648)
}
c/fn-constraint
 empty-list c/no-symbol "")] 

 result-type (c/NoValues [(c/ReifiedConstraint 0 (c/tag "field 'not-there' required")
{}
{(c/Field (c/tag ".not-there")) c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 92 (c/tag "Bogus")
{(c/Field (c/tag ".x-field")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".x-field")) (c/IntegerConstraint 99 2147483647 -2147483648)
}
c/fn-constraint
 empty-list c/no-symbol "")]) 

 Conflicting assertions (1082)  at assertion-tests/bad-field-1.toc: 9
Bogus from:    field 'not-there' required from:
                                               
                                               


*** site 1076 assertion-tests/bad-field-4.toc: 11 
 (.not-there (.x-field (Bogus 99) 3)) 

 target-c (c/ProtoImpls
(c/tag ".not-there")
(c/fn-c []
{2 (c/fn-arity
(c/tag '.not-there_setter)
(c/seq-c [(c/multi [(c/param (c/tag '.not-there_setter) 0)
(c/ReifiedConstraint 0 (c/tag "field 'not-there' required")
{}
{(c/Field (c/tag ".not-there")) c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
(c/param (c/tag '.not-there_setter) 1)]
c/no-tail)
;; returns
(c/type-op c/set-to-op
(c/param (c/tag '.not-there_setter) 0)
[[(c/Field (c/tag ".not-there"))]
(c/param (c/tag '.not-there_setter) 1)]
)), 1 (c/fn-arity
(c/tag '.not-there_getter)
(c/seq-c [(c/multi [(c/param (c/tag '.not-there_getter) 0)
(c/ReifiedConstraint 0 (c/tag "field 'not-there' required")
{}
{(c/Field (c/tag ".not-there")) c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])]
c/no-tail)
;; returns
(c/type-op c/get-from-op
(c/param (c/tag '.not-there_getter) 0)
[(c/Field (c/tag ".not-there"))]
))})

{84 (c/fn-c []
{2 (c/fn-arity
(c/tag 'Ooops-.not-there-setter)
(c/seq-c [(c/multi [(c/param (c/tag 'Ooops-.not-there-setter) 0)
(c/ReifiedConstraint 84 (c/tag "Ooops")
{(c/Field (c/tag ".not-there")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".not-there")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")])
(c/multi [(c/param (c/tag 'Ooops-.not-there-setter) 1)
c/top-type])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/set-to-op
(c/param (c/tag 'Ooops-.not-there-setter) 0)
[[(c/Field (c/tag ".not-there"))]
(c/param (c/tag 'Ooops-.not-there-setter) 1)]
)
(c/type-op c/set-to-op
(c/param (c/tag 'Ooops-.not-there-setter) 0)
[[(c/Field (c/tag ".not-there"))]
(c/param (c/tag 'Ooops-.not-there-setter) 1)]
)])), 1 (c/fn-arity
(c/tag 'Ooops-.not-there-getter)
(c/seq-c [(c/multi [(c/param (c/tag 'Ooops-.not-there-getter) 0)
(c/ReifiedConstraint 84 (c/tag "Ooops")
{(c/Field (c/tag ".not-there")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".not-there")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'Ooops-.not-there-getter) 0)
[(c/Field (c/tag ".not-there"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'Ooops-.not-there-getter) 0)
[(c/Field (c/tag ".not-there"))]
)]))})}) 

 arg-cs [(c/ReifiedConstraint 90 (c/tag "Bogus")
{(c/Field (c/tag ".x-field")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".x-field")) (c/IntegerConstraint 3 2147483647 -2147483648)
}
c/fn-constraint
 empty-list c/no-symbol "")] 

 result-type (c/NoValues [(c/ReifiedConstraint 0 (c/tag "field 'not-there' required")
{}
{(c/Field (c/tag ".not-there")) c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 90 (c/tag "Bogus")
{(c/Field (c/tag ".x-field")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".x-field")) (c/IntegerConstraint 3 2147483647 -2147483648)
}
c/fn-constraint
 empty-list c/no-symbol "")]) 

 Conflicting assertions (1082)  at assertion-tests/bad-field-4.toc: 11
Bogus from:    field 'not-there' required from:
                                               
                                               


*** Conflicting assertions (510)  at assertion-tests/bad-impl-return-value.toc: 12
Symbol c/no-symbol from:        Maybe from:                 
bad-impl-return-value.toc: 4    bad-impl-return-value.toc: 9
                                                            
                                                            


*** site 1076 assertion-tests/bad-inner-18.toc: 12 
 (g x) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity720)
(c/seq-c [(c/multi [(c/MaybeConstraint (c/sum-c [c/strbuff-constraint
c/substr-constraint]))
(c/param (c/tag 'fn-arity720) 0)])]
c/no-tail)
;; returns
(c/MaybeConstraint c/substr-constraint))}) 

 arg-cs [(c/multi [(c/MaybeConstraint c/int-constraint)
(c/param (c/tag 'fn-arity727) 0)])] 

 result-type (c/NoValues [c/strbuff-constraint
c/int-constraint]) 

 Conflicting assertions (1082)  at assertion-tests/bad-inner-18.toc: 12
Integer c/no-int from:    String from:       
bad-inner-18.toc: 2       bad-inner-18.toc: 8
bad-inner-18.toc: 4       core: 333          
core: 1202                core: 336          
core: 1204                core: 22           
core: 95                                     
core: 97                                     
                                             
                                             


*** site 1076 assertion-tests/bad-inner-5.toc: 11 
 (g (f x)) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity723)
(c/seq-c [(c/multi [(c/MaybeConstraint (c/sum-c [c/strbuff-constraint
c/substr-constraint]))
(c/param (c/tag 'fn-arity723) 0)])]
c/no-tail)
;; returns
(c/MaybeConstraint c/substr-constraint))}) 

 arg-cs [(c/MaybeConstraint c/int-constraint)] 

 result-type (c/NoValues [c/strbuff-constraint
c/int-constraint]) 

 Conflicting assertions (1082)  at assertion-tests/bad-inner-5.toc: 11
Integer c/no-int from:    String from:      
core: 1202                bad-inner-5.toc: 8
core: 95                  core: 333         
core: 98                  core: 336         
                          core: 22          
                                            
                                            


*** site 1076 assertion-tests/bad-inner-3.toc: 12 
 (g x) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity725)
(c/seq-c [(c/multi [(c/MaybeConstraint (c/sum-c [c/strbuff-constraint
c/substr-constraint]))
(c/param (c/tag 'fn-arity725) 0)])]
c/no-tail)
;; returns
(c/MaybeConstraint c/substr-constraint))}) 

 arg-cs [(c/multi [(c/MaybeConstraint c/int-constraint)
(c/param (c/tag 'fn-arity731) 0)])] 

 result-type (c/NoValues [c/strbuff-constraint
c/int-constraint]) 

 Conflicting assertions (1082)  at assertion-tests/bad-inner-3.toc: 12
Integer c/no-int from:    String from:      
bad-inner-3.toc: 2        bad-inner-3.toc: 8
bad-inner-3.toc: 4        core: 333         
core: 1202                core: 336         
core: 1204                core: 22          
core: 95                                    
core: 97                                    
                                            
                                            


*** site 1076 assertion-tests/bad-apply-constructor.toc: 10 
 (apply Bogus (vector 4 5)) 

 target-c (c/ProtoImpls
(c/tag "apply")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'apply)
(c/list-c [(c/param (c/tag 'apply) 0)
(c/multi [(c/sum-c [(c/list-c [] (c/coll-of-c c/top-type))
(c/vect-c [] (c/coll-of-c c/top-type))])
(c/param (c/tag 'apply) 1)])]
c/no-tail)
;; returns
c/top-type)})

{4 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity281)
(c/list-c [(c/multi [c/fn-constraint
(c/param (c/tag 'fn-arity281) 0)])
(c/multi [(c/sum-c [(c/list-c [] (c/coll-of-c c/top-type))
(c/vect-c [] (c/coll-of-c c/top-type))])
(c/param (c/tag 'fn-arity281) 1)])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/apply-op
c/fn-constraint
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "seq")
(c/fn-c []
{1 (c/fn-arity
(c/tag 'seq)
(c/list-c [(c/param (c/tag 'seq) 0)]
c/no-tail)
;; returns
(c/type-op c/list-from-op
(c/param (c/tag 'seq) 0)
(c/tag "#result")))})

{})
[(c/param (c/tag 'fn-arity281) 1)]
)])
)
(c/type-op c/apply-op
(c/param (c/tag 'fn-arity281) 0)
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "seq")
(c/fn-c []
{1 (c/fn-arity
(c/tag 'seq)
(c/list-c [(c/param (c/tag 'seq) 0)]
c/no-tail)
;; returns
(c/type-op c/list-from-op
(c/param (c/tag 'seq) 0)
(c/tag "#result")))})

{})
[(c/param (c/tag 'fn-arity281) 1)]
)])
)]))}), 61 (c/fn-c []
{2 (c/fn-arity
(c/tag 'apply-HashSet-constructor)
(c/list-c [(c/multi [(c/param (c/tag 'apply-HashSet-constructor) 0)
(c/ReifiedConstraint 61 (c/tag "* HashSet constructor at core: 2810 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag '* HashSet constructor at core: 2810 *)
(c/seq-c [c/top-type
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "HashSet")
{}
{c/contents c/top-type
(c/Field (c/tag ".set-map")) (c/multi [(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
(c/param (c/tag '* HashSet constructor at core: 2810 *) 1)])
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")])
(c/multi [(c/param (c/tag 'apply-HashSet-constructor) 1)
(c/seq-c [(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])]
c/no-tail)
(c/sum-c [(c/list-c [] (c/coll-of-c c/top-type))
(c/vect-c [] (c/coll-of-c c/top-type))])])]
c/no-tail)
;; returns
(c/type-op c/apply-op
(c/ReifiedConstraint 61 (c/tag "* HashSet constructor at core: 2810 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag '* HashSet constructor at core: 2810 *)
(c/seq-c [c/top-type
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "HashSet")
{}
{c/contents c/top-type
(c/Field (c/tag ".set-map")) (c/multi [(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
(c/param (c/tag '* HashSet constructor at core: 2810 *) 1)])
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")
(c/multi [(c/param (c/tag 'apply-HashSet-constructor) 1)
(c/seq-c [(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])]
c/no-tail)])
))}), 63 (c/fn-c []
{2 (c/fn-arity
(c/tag 'apply-IntGenerator-constructor)
(c/list-c [(c/multi [(c/param (c/tag 'apply-IntGenerator-constructor) 0)
(c/ReifiedConstraint 63 (c/tag "* IntGenerator constructor at core: 2937 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag '* IntGenerator constructor at core: 2937 *)
(c/seq-c [c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "IntGenerator")
{}
{c/contents c/top-type
(c/Field (c/tag ".gen")) (c/param (c/tag '* IntGenerator constructor at core: 2937 *) 1)
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")])
(c/multi [(c/param (c/tag 'apply-IntGenerator-constructor) 1)
(c/seq-c [c/top-type]
c/no-tail)
(c/sum-c [(c/list-c [] (c/coll-of-c c/top-type))
(c/vect-c [] (c/coll-of-c c/top-type))])])]
c/no-tail)
;; returns
(c/type-op c/apply-op
(c/ReifiedConstraint 63 (c/tag "* IntGenerator constructor at core: 2937 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag '* IntGenerator constructor at core: 2937 *)
(c/seq-c [c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "IntGenerator")
{}
{c/contents c/top-type
(c/Field (c/tag ".gen")) (c/param (c/tag '* IntGenerator constructor at core: 2937 *) 1)
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")
(c/multi [(c/param (c/tag 'apply-IntGenerator-constructor) 1)
(c/seq-c [c/top-type]
c/no-tail)])
))}), 54 (c/fn-c []
{2 (c/fn-arity
(c/tag 'apply-Sorting-constructor)
(c/list-c [(c/multi [(c/param (c/tag 'apply-Sorting-constructor) 0)
(c/ReifiedConstraint 54 (c/tag "* Sorting constructor at core: 2331 *")
{}
{}
(c/fn-c []
{3 (c/fn-arity
(c/tag '* Sorting constructor at core: 2331 *)
(c/seq-c [c/top-type
c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "Sorting")
{}
{c/contents c/top-type
(c/Field (c/tag ".k")) (c/param (c/tag '* Sorting constructor at core: 2331 *) 1)
(c/Field (c/tag ".v")) (c/param (c/tag '* Sorting constructor at core: 2331 *) 2)
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")])
(c/multi [(c/param (c/tag 'apply-Sorting-constructor) 1)
(c/seq-c [c/top-type
c/top-type]
c/no-tail)
(c/sum-c [(c/list-c [] (c/coll-of-c c/top-type))
(c/vect-c [] (c/coll-of-c c/top-type))])])]
c/no-tail)
;; returns
(c/type-op c/apply-op
(c/ReifiedConstraint 54 (c/tag "* Sorting constructor at core: 2331 *")
{}
{}
(c/fn-c []
{3 (c/fn-arity
(c/tag '* Sorting constructor at core: 2331 *)
(c/seq-c [c/top-type
c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "Sorting")
{}
{c/contents c/top-type
(c/Field (c/tag ".k")) (c/param (c/tag '* Sorting constructor at core: 2331 *) 1)
(c/Field (c/tag ".v")) (c/param (c/tag '* Sorting constructor at core: 2331 *) 2)
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")
(c/multi [(c/param (c/tag 'apply-Sorting-constructor) 1)
(c/seq-c [c/top-type
c/top-type]
c/no-tail)])
))}), 59 (c/fn-c []
{2 (c/fn-arity
(c/tag 'apply-RecurseFinal-constructor)
(c/list-c [(c/multi [(c/param (c/tag 'apply-RecurseFinal-constructor) 0)
(c/ReifiedConstraint 59 (c/tag "* RecurseFinal constructor at core: 2559 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag '* RecurseFinal constructor at core: 2559 *)
(c/seq-c [c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "RecurseFinal")
{}
{c/contents c/top-type
(c/Field (c/tag ".x")) (c/param (c/tag '* RecurseFinal constructor at core: 2559 *) 1)
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")])
(c/multi [(c/param (c/tag 'apply-RecurseFinal-constructor) 1)
(c/seq-c [c/top-type]
c/no-tail)
(c/sum-c [(c/list-c [] (c/coll-of-c c/top-type))
(c/vect-c [] (c/coll-of-c c/top-type))])])]
c/no-tail)
;; returns
(c/type-op c/apply-op
(c/ReifiedConstraint 59 (c/tag "* RecurseFinal constructor at core: 2559 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag '* RecurseFinal constructor at core: 2559 *)
(c/seq-c [c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "RecurseFinal")
{}
{c/contents c/top-type
(c/Field (c/tag ".x")) (c/param (c/tag '* RecurseFinal constructor at core: 2559 *) 1)
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")
(c/multi [(c/param (c/tag 'apply-RecurseFinal-constructor) 1)
(c/seq-c [c/top-type]
c/no-tail)])
))}), 6 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity161)
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity161) 0)])
(c/multi [(c/sum-c [(c/list-c [] (c/coll-of-c c/top-type))
(c/vect-c [] (c/coll-of-c c/top-type))])
(c/param (c/tag 'fn-arity161) 1)])]
c/no-tail)
;; returns
(c/sum-c [(c/multi [(c/type-op c/inner-type-of-op
(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'flat-map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])
0
))
(c/param (c/tag 'flat-map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/param (c/tag 'wrap154) 0)
(c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity186)
(c/seq-c [(c/param (c/tag 'fn-arity186) 0)]
c/no-tail)
;; returns
c/maybe-constraint)})]
)
c/maybe-constraint])
)
(c/seq-c [] (c/coll-of-c (c/type-op c/call-value-op
(c/type-op c/inner-type-of-op
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity161) 0)])
)
)))])
(c/list-c [] c/no-tail)]))}), 8 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity335)
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity335) 0)])
(c/multi [(c/sum-c [(c/list-c [] (c/coll-of-c c/top-type))
(c/vect-c [] (c/coll-of-c c/top-type))])
(c/param (c/tag 'fn-arity335) 1)])]
c/no-tail)
;; returns
(c/sum-c [(c/multi [(c/type-op c/inner-type-of-op
(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'flat-map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])
0
))
(c/param (c/tag 'flat-map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/param (c/tag 'wrap280) 0)
(c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity343)
(c/seq-c [(c/param (c/tag 'fn-arity343) 0)]
c/no-tail)
;; returns
c/maybe-constraint)})]
)
c/maybe-constraint])
)
(c/seq-c [] (c/coll-of-c (c/type-op c/call-value-op
(c/type-op c/inner-type-of-op
(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity335) 0)])
)
)))])
(c/vect-c [] c/no-tail)]))}), 69 (c/fn-c []
{2 (c/fn-arity
(c/tag 'apply-Bogus-constructor)
(c/list-c [(c/multi [(c/param (c/tag 'apply-Bogus-constructor) 0)
(c/ReifiedConstraint 69 (c/tag "* Bogus constructor at assertion-tests/bad-apply-constructor.toc: 4 *")
{}
{}
(c/fn-c []
{4 (c/fn-arity
(c/tag '* Bogus constructor at assertion-tests/bad-apply-constructor.toc: 4 *)
(c/seq-c [c/top-type
c/top-type
c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "Bogus")
{}
{c/contents c/top-type
(c/Field (c/tag ".a")) (c/param (c/tag '* Bogus constructor at assertion-tests/bad-apply-constructor.toc: 4 *) 1)
(c/Field (c/tag ".b")) (c/param (c/tag '* Bogus constructor at assertion-tests/bad-apply-constructor.toc: 4 *) 2)
(c/Field (c/tag ".c")) (c/param (c/tag '* Bogus constructor at assertion-tests/bad-apply-constructor.toc: 4 *) 3)
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")])
(c/multi [(c/param (c/tag 'apply-Bogus-constructor) 1)
(c/seq-c [c/top-type
c/top-type
c/top-type]
c/no-tail)
(c/sum-c [(c/list-c [] (c/coll-of-c c/top-type))
(c/vect-c [] (c/coll-of-c c/top-type))])])]
c/no-tail)
;; returns
(c/type-op c/apply-op
(c/ReifiedConstraint 69 (c/tag "* Bogus constructor at assertion-tests/bad-apply-constructor.toc: 4 *")
{}
{}
(c/fn-c []
{4 (c/fn-arity
(c/tag '* Bogus constructor at assertion-tests/bad-apply-constructor.toc: 4 *)
(c/seq-c [c/top-type
c/top-type
c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "Bogus")
{}
{c/contents c/top-type
(c/Field (c/tag ".a")) (c/param (c/tag '* Bogus constructor at assertion-tests/bad-apply-constructor.toc: 4 *) 1)
(c/Field (c/tag ".b")) (c/param (c/tag '* Bogus constructor at assertion-tests/bad-apply-constructor.toc: 4 *) 2)
(c/Field (c/tag ".c")) (c/param (c/tag '* Bogus constructor at assertion-tests/bad-apply-constructor.toc: 4 *) 3)
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")
(c/multi [(c/param (c/tag 'apply-Bogus-constructor) 1)
(c/seq-c [c/top-type
c/top-type
c/top-type]
c/no-tail)])
))}), 15 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity362)
(c/list-c [(c/multi [c/promise-constraint
(c/param (c/tag 'fn-arity362) 0)])
(c/multi [(c/sum-c [(c/list-c [] (c/coll-of-c c/top-type))
(c/vect-c [] (c/coll-of-c c/top-type))])
(c/param (c/tag 'fn-arity362) 1)])]
c/no-tail)
;; returns
(c/multi [c/promise-constraint
(c/param (c/tag 'new-p) 0)]))}), 65 (c/fn-c []
{2 (c/fn-arity
(c/tag 'apply-LazyList-constructor)
(c/list-c [(c/multi [(c/param (c/tag 'apply-LazyList-constructor) 0)
(c/ReifiedConstraint 65 (c/tag "* LazyList constructor at core: 2961 *")
{}
{}
(c/fn-c []
{4 (c/fn-arity
(c/tag '* LazyList constructor at core: 2961 *)
(c/seq-c [c/top-type
c/top-type
(c/list-c [] (c/coll-of-c c/top-type))
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "LazyList")
{}
{c/contents c/top-type
(c/Field (c/tag ".lazy")) (c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag '* LazyList constructor at core: 2961 *) 2)])
(c/Field (c/tag ".tail")) (c/param (c/tag '* LazyList constructor at core: 2961 *) 3)
(c/Field (c/tag ".container")) (c/param (c/tag '* LazyList constructor at core: 2961 *) 1)
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")])
(c/multi [(c/param (c/tag 'apply-LazyList-constructor) 1)
(c/seq-c [c/top-type
(c/list-c [] (c/coll-of-c c/top-type))
c/top-type]
c/no-tail)
(c/sum-c [(c/list-c [] (c/coll-of-c c/top-type))
(c/vect-c [] (c/coll-of-c c/top-type))])])]
c/no-tail)
;; returns
(c/type-op c/apply-op
(c/ReifiedConstraint 65 (c/tag "* LazyList constructor at core: 2961 *")
{}
{}
(c/fn-c []
{4 (c/fn-arity
(c/tag '* LazyList constructor at core: 2961 *)
(c/seq-c [c/top-type
c/top-type
(c/list-c [] (c/coll-of-c c/top-type))
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "LazyList")
{}
{c/contents c/top-type
(c/Field (c/tag ".lazy")) (c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag '* LazyList constructor at core: 2961 *) 2)])
(c/Field (c/tag ".tail")) (c/param (c/tag '* LazyList constructor at core: 2961 *) 3)
(c/Field (c/tag ".container")) (c/param (c/tag '* LazyList constructor at core: 2961 *) 1)
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")
(c/multi [(c/param (c/tag 'apply-LazyList-constructor) 1)
(c/seq-c [c/top-type
(c/list-c [] (c/coll-of-c c/top-type))
c/top-type]
c/no-tail)])
))}), 16 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity383)
(c/list-c [(c/multi [(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity383) 0)])
(c/multi [(c/sum-c [(c/list-c [] (c/coll-of-c c/top-type))
(c/vect-c [] (c/coll-of-c c/top-type))])
(c/param (c/tag 'fn-arity383) 1)])]
c/no-tail)
;; returns
(c/multi [(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag 'new-fut) 0)]))}), 60 (c/fn-c []
{2 (c/fn-arity
(c/tag 'apply-RecurseWith-constructor)
(c/list-c [(c/multi [(c/param (c/tag 'apply-RecurseWith-constructor) 0)
(c/ReifiedConstraint 60 (c/tag "* RecurseWith constructor at core: 2571 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag '* RecurseWith constructor at core: 2571 *)
(c/seq-c [c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "RecurseWith")
{}
{c/contents c/top-type
(c/Field (c/tag ".x")) (c/param (c/tag '* RecurseWith constructor at core: 2571 *) 1)
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")])
(c/multi [(c/param (c/tag 'apply-RecurseWith-constructor) 1)
(c/seq-c [c/top-type]
c/no-tail)
(c/sum-c [(c/list-c [] (c/coll-of-c c/top-type))
(c/vect-c [] (c/coll-of-c c/top-type))])])]
c/no-tail)
;; returns
(c/type-op c/apply-op
(c/ReifiedConstraint 60 (c/tag "* RecurseWith constructor at core: 2571 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag '* RecurseWith constructor at core: 2571 *)
(c/seq-c [c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "RecurseWith")
{}
{c/contents c/top-type
(c/Field (c/tag ".x")) (c/param (c/tag '* RecurseWith constructor at core: 2571 *) 1)
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")
(c/multi [(c/param (c/tag 'apply-RecurseWith-constructor) 1)
(c/seq-c [c/top-type]
c/no-tail)])
))}), 7 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity127)
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag 'fn-arity127) 0)])
(c/multi [(c/sum-c [(c/list-c [] (c/coll-of-c c/top-type))
(c/vect-c [] (c/coll-of-c c/top-type))])
(c/param (c/tag 'fn-arity127) 1)])]
c/no-tail)
;; returns
(c/sum-c [(c/MaybeConstraint (c/type-op c/call-value-op
(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity127) 0)
)
))
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "apply")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'apply)
(c/list-c [(c/param (c/tag 'apply) 0)
(c/multi [(c/sum-c [(c/list-c [] (c/coll-of-c c/top-type))
(c/vect-c [] (c/coll-of-c c/top-type))])
(c/param (c/tag 'apply) 1)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity127) 0)
)
(c/vect-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity127) 0)
)
)]))]))})}) 

 arg-cs [(c/ReifiedConstraint 69 (c/tag "* Bogus constructor at assertion-tests/bad-apply-constructor.toc: 4 *")
{}
{}
(c/fn-c []
{4 (c/fn-arity
(c/tag '* Bogus constructor at assertion-tests/bad-apply-constructor.toc: 4 *)
(c/seq-c [c/top-type
c/top-type
c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "Bogus")
{}
{c/contents c/top-type
(c/Field (c/tag ".a")) (c/param (c/tag '* Bogus constructor at assertion-tests/bad-apply-constructor.toc: 4 *) 1)
(c/Field (c/tag ".b")) (c/param (c/tag '* Bogus constructor at assertion-tests/bad-apply-constructor.toc: 4 *) 2)
(c/Field (c/tag ".c")) (c/param (c/tag '* Bogus constructor at assertion-tests/bad-apply-constructor.toc: 4 *) 3)
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol ""), (c/vect-c [(c/IntegerConstraint 4 2147483647 -2147483648)
(c/IntegerConstraint 5 2147483647 -2147483648)]
c/no-tail)] 

 result-type (c/NoValues [c/no-tail
(c/ReifiedConstraint 0 (c/tag "Can not contain other values")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")]) 

 Conflicting assertions (1082)  at assertion-tests/bad-apply-constructor.toc: 10
Can not contain other values from:    No Tail for sequence


*** site 1076 assertion-tests/bad-inner-4.toc: 5 
 (drop-while (map (vector 1 2 3) inc) (fn  [n]
(= "" (subs n 1)))) 

 target-c (c/ProtoImpls
(c/tag "drop-while")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'drop-while)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag 'drop-while) 1)])
0
))
(c/param (c/tag 'drop-while) 0)])
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag 'drop-while) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/inner-type-of-op
(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag 'drop-while) 1)])
0
))
(c/param (c/tag 'drop-while) 0)])
)))})

{2 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity263)
(c/list-c [(c/multi [c/strbuff-constraint
(c/param (c/tag 'fn-arity263) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity263) 1)
0
))])
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag 'fn-arity263) 1)])]
c/no-tail)
;; returns
(c/multi [c/substr-constraint
(c/coll-of-c (c/multi [(c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity263) 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity263) 0)
)
c/substr-constraint]))]))}), 5 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity262)
(c/list-c [(c/multi [c/substr-constraint
(c/param (c/tag 'fn-arity262) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity262) 1)
0
))])
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag 'fn-arity262) 1)])]
c/no-tail)
;; returns
(c/multi [c/substr-constraint
(c/coll-of-c (c/multi [(c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity262) 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity262) 0)
)
c/substr-constraint]))]))}), 6 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity274)
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity274) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity274) 1)
0
))])
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag 'fn-arity274) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/multi [(c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity274) 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity274) 0)
)])))}), 8 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity340)
(c/list-c [(c/multi [(c/param (c/tag 'fn-arity340) 0)
(c/vect-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity340) 1)
0
)))])
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag 'fn-arity340) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/multi [(c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity340) 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity340) 0)
)])))})}) 

 arg-cs [(c/vect-c [] (c/coll-of-c c/int-constraint)), (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity734)
(c/seq-c [(c/multi [(c/sum-c [c/strbuff-constraint
c/substr-constraint])
(c/param (c/tag 'fn-arity734) 0)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/sum-c [(c/StrBuffConstraint "")
c/substr-constraint])))})] 

 result-type (c/NoValues [c/strbuff-constraint
c/int-constraint]) 

 Conflicting assertions (1082)  at assertion-tests/bad-inner-4.toc: 5
Integer c/no-int from:    String from:
core: 95                  core: 333   
core: 98                  core: 336   
                          core: 22    
                                      
                                      


*** site 1076 assertion-tests/bad-inner-1.toc: 3 
 (map (vector 1 2 3) (fn  [s]
(subs s 1))) 

 target-c (c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{6 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity164)
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity164) 0)
(c/seq-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity164) 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity164) 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity164) 1)
)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity164) 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity164) 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity164) 0)
)])]
)])))), 3 (c/fn-arity
(c/tag 'fn-arity163)
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity163) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity163) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity163) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity163) 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity163) 2)
[(c/list-c [] c/no-tail)]
)
(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'flat-map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])
0
))
(c/param (c/tag 'flat-map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity163) 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity163) 0)
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity183)
(c/seq-c [(c/param (c/tag 'fn-arity183) 0)]
c/no-tail)
;; returns
(c/coll-of-c (c/seq-c []
(c/coll-of-c c/top-type))))})]
)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity163) 2)
[(c/list-c [] c/no-tail)]
)])
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'flat-map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])
0
))
(c/param (c/tag 'flat-map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity163) 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity163) 0)
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity183)
(c/seq-c [(c/param (c/tag 'fn-arity183) 0)]
c/no-tail)
;; returns
(c/coll-of-c (c/seq-c []
(c/coll-of-c c/top-type))))})]
)]))}), 8 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity306)
(c/list-c [(c/multi [(c/param (c/tag 'fn-arity306) 0)
(c/vect-c [] (c/coll-of-c c/top-type))
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity306) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity306) 1)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity306) 1)
)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity306) 1)
[(c/type-op c/inner-type-of-op
(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity306) 0)])
)]
)])))), 3 (c/fn-arity
(c/tag 'fn-arity305)
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity305) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity305) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity305) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity305) 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'flat-map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])
0
))
(c/param (c/tag 'flat-map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity305) 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity305) 0)
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity329)
(c/seq-c [(c/param (c/tag 'fn-arity329) 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity305) 2)
[(c/vect-c [] c/no-tail)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity330)
(c/seq-c [(c/param (c/tag 'fn-arity330) 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "conj")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'conj)
(c/list-c [(c/param (c/tag 'conj) 0)
(c/param (c/tag 'conj) 1)]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/param (c/tag 'fn-arity330) 0)
(c/param (c/tag 'fn-arity329) 0)]
))})]
))})]
)
(c/ProtoImpls
(c/tag "reverse")
(c/fn-c []
{1 (c/fn-arity
(c/tag 'reverse)
(c/list-c [(c/param (c/tag 'reverse) 0)]
c/no-tail)
;; returns
c/top-type)})

{2 (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity241)
(c/list-c [(c/multi [c/strbuff-constraint
(c/param (c/tag 'fn-arity241) 0)])]
c/no-tail)
;; returns
(c/multi [c/strbuff-constraint
(c/coll-of-c (c/multi [(c/type-op c/inner-type-of-op
(c/multi [c/strbuff-constraint
(c/param (c/tag 'fn-arity241) 0)])
)
c/substr-constraint]))]))}), 5 (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity240)
(c/list-c [(c/multi [c/substr-constraint
(c/param (c/tag 'fn-arity240) 0)])]
c/no-tail)
;; returns
(c/multi [c/strbuff-constraint
(c/coll-of-c (c/multi [(c/type-op c/inner-type-of-op
(c/multi [c/substr-constraint
(c/param (c/tag 'fn-arity240) 0)])
)
c/substr-constraint]))]))}), 6 (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity82)
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity82) 0)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/type-op c/inner-type-of-op
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity82) 0)])
))))}), 8 (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity88)
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity88) 0)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/type-op c/inner-type-of-op
(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity88) 0)])
))))})})]
))}), 56 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity553)
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".x")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity553) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity553) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity553) 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents (c/type-op c/call-value-op
(c/param (c/tag 'fn-arity553) 1)
)
(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag 'fn-arity553) 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity554) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity554) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity553) 0)
[(c/Field (c/tag ".x"))]
)])]
)
}
c/fn-constraint
 empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag 'fn-arity552)
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".x")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity552) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity552) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity552) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity552) 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity552) 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity554) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity554) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity553) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity552) 0)
[(c/Field (c/tag ".x"))]
)])]
)
(c/ReifiedConstraint 59 (c/tag "* RecurseFinal constructor at core: 2559 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag '* RecurseFinal constructor at core: 2559 *)
(c/seq-c [c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "RecurseFinal")
{}
{c/contents c/top-type
(c/Field (c/tag ".x")) (c/param (c/tag '* RecurseFinal constructor at core: 2559 *) 1)
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")]
))}), 15 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity349)
(c/list-c [(c/multi [(c/param (c/tag 'fn-arity349) 0)
c/promise-constraint])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity349) 1)])]
c/no-tail)
;; returns
(c/multi [(c/param (c/tag 'new-p) 0)
c/promise-constraint]))}), 16 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity370)
(c/list-c [(c/multi [(c/param (c/tag 'fn-arity370) 0)
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity370) 1)])]
c/no-tail)
;; returns
(c/multi [(c/param (c/tag 'new-fut) 0)
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")]))}), 55 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity556)
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".x")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity556) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity556) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity556) 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents (c/type-op c/call-value-op
(c/param (c/tag 'fn-arity556) 1)
)
(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag 'fn-arity556) 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity557) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity557) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity556) 0)
[(c/Field (c/tag ".x"))]
)])]
)
}
c/fn-constraint
 empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag 'fn-arity555)
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".x")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity555) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity555) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity555) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity555) 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity555) 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity557) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity557) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity556) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity555) 0)
[(c/Field (c/tag ".x"))]
)])]
)
(c/ReifiedConstraint 60 (c/tag "* RecurseWith constructor at core: 2571 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag '* RecurseWith constructor at core: 2571 *)
(c/seq-c [c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "RecurseWith")
{}
{c/contents c/top-type
(c/Field (c/tag ".x")) (c/param (c/tag '* RecurseWith constructor at core: 2571 *) 1)
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")]
))}), 7 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity129)
(c/list-c [(c/multi [(c/param (c/tag 'fn-arity129) 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity129) 1)
0
))
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity129) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity129) 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity129) 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity129) 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity129) 0)
)])]
)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity129) 1)
)]))), 3 (c/fn-arity
(c/tag 'fn-arity128)
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag 'fn-arity128) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity128) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity128) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity128) 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/inner-type-of-op
(c/MaybeConstraint (c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity128) 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity128) 0)
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity3)
(c/seq-c [(c/param (c/tag 'fn-arity3) 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag 'fn-arity3) 0)))})]
))
)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity128) 2)
[c/maybe-constraint]
)]))}), 35 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity628)
(c/list-c [(c/multi [(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity641) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity640) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity639) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity638) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity637) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity636) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity635) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity634) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity633) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity632) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity631) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity630) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity629) 0)
[(c/Field (c/tag ".set-map"))]
)])
}
{c/contents c/top-type
(c/Field (c/tag ".set-map")) (c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity641) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity640) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity639) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity638) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity637) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity636) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity635) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity634) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity633) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity632) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity631) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity630) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity629) 0)
[(c/Field (c/tag ".set-map"))]
)])
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity628) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity628) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity628) 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{c/contents (c/type-op c/call-value-op
(c/param (c/tag 'fn-arity628) 1)
)
(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
(c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity641)
(c/seq-c [(c/multi [(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{c/contents c/top-type
(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity641) 0)])
(c/param (c/tag 'fn-arity641) 1)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "get")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'get)
(c/list-c [(c/param (c/tag 'get) 0)
(c/param (c/tag 'get) 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag 'get) 0)
)))})

{})
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity641) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])])
(c/param (c/tag 'fn-arity641) 1)]
))})
 empty-list c/no-symbol ""))})}) 

 arg-cs [(c/vect-c [(c/IntegerConstraint 1 2147483647 -2147483648)
(c/IntegerConstraint 2 2147483647 -2147483648)
(c/IntegerConstraint 3 2147483647 -2147483648)]
c/no-tail), (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity729)
(c/seq-c [(c/multi [(c/sum-c [c/strbuff-constraint
c/substr-constraint])
(c/param (c/tag 'fn-arity729) 0)])]
c/no-tail)
;; returns
c/substr-constraint)})] 

 result-type (c/NoValues [c/strbuff-constraint
(c/IntegerConstraint 1 2147483647 -2147483648)]) 

 Conflicting assertions (1082)  at assertion-tests/bad-inner-1.toc: 3
Integer 1 from:    String from:
                   core: 333   
                   core: 336   
                   core: 22    
                               
                               


*** site 1076 assertion-tests/bad-function-returns-3.toc: 8 
 (new-se (fn  [s]
'Failure)) 

 target-c (c/ReifiedConstraint 99 (c/tag "* new-se constructor at assertion-tests/bad-function-returns-3.toc: 2 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag '* new-se constructor at assertion-tests/bad-function-returns-3.toc: 2 *)
(c/seq-c [c/top-type
(c/intersect c/fn-constraint
(c/coll-of-c (c/vect-c [] (c/coll-of-c c/top-type))))]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "new-se")
{}
{(c/Field (c/tag ".invoke-fn")) (c/multi [(c/intersect c/fn-constraint
(c/coll-of-c (c/vect-c [] (c/coll-of-c c/top-type))))
(c/param (c/tag '* new-se constructor at assertion-tests/bad-function-returns-3.toc: 2 *) 1)])
c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "") 

 arg-cs [(c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity744)
(c/seq-c [(c/param (c/tag 'fn-arity744) 0)]
c/no-tail)
;; returns
(c/SymbolConstraint 'Failure))})] 

 result-type (c/NoValues [(c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity744)
(c/seq-c [(c/param (c/tag 'fn-arity744) 0)]
c/no-tail)
;; returns
(c/SymbolConstraint 'Failure))})
(c/intersect c/fn-constraint
(c/coll-of-c (c/vect-c [] (c/coll-of-c c/top-type))))]) 

 Conflicting assertions (1082)  at assertion-tests/bad-function-returns-3.toc: 8
Function from    Function from
                              
                              


*** site 1076 assertion-tests/bad-inner-2.toc: 3 
 (map (list (inc 3)) (fn  [n]
(subs n 1))) 

 target-c (c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{6 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity164)
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity164) 0)
(c/seq-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity164) 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity164) 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity164) 1)
)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity164) 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity164) 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity164) 0)
)])]
)])))), 3 (c/fn-arity
(c/tag 'fn-arity163)
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity163) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity163) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity163) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity163) 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity163) 2)
[(c/list-c [] c/no-tail)]
)
(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'flat-map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])
0
))
(c/param (c/tag 'flat-map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity163) 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity163) 0)
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity183)
(c/seq-c [(c/param (c/tag 'fn-arity183) 0)]
c/no-tail)
;; returns
(c/coll-of-c (c/seq-c []
(c/coll-of-c c/top-type))))})]
)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity163) 2)
[(c/list-c [] c/no-tail)]
)])
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'flat-map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])
0
))
(c/param (c/tag 'flat-map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity163) 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity163) 0)
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity183)
(c/seq-c [(c/param (c/tag 'fn-arity183) 0)]
c/no-tail)
;; returns
(c/coll-of-c (c/seq-c []
(c/coll-of-c c/top-type))))})]
)]))}), 8 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity306)
(c/list-c [(c/multi [(c/param (c/tag 'fn-arity306) 0)
(c/vect-c [] (c/coll-of-c c/top-type))
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity306) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity306) 1)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity306) 1)
)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity306) 1)
[(c/type-op c/inner-type-of-op
(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity306) 0)])
)]
)])))), 3 (c/fn-arity
(c/tag 'fn-arity305)
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity305) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity305) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity305) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity305) 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'flat-map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])
0
))
(c/param (c/tag 'flat-map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity305) 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity305) 0)
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity329)
(c/seq-c [(c/param (c/tag 'fn-arity329) 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity305) 2)
[(c/vect-c [] c/no-tail)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity330)
(c/seq-c [(c/param (c/tag 'fn-arity330) 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "conj")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'conj)
(c/list-c [(c/param (c/tag 'conj) 0)
(c/param (c/tag 'conj) 1)]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/param (c/tag 'fn-arity330) 0)
(c/param (c/tag 'fn-arity329) 0)]
))})]
))})]
)
(c/ProtoImpls
(c/tag "reverse")
(c/fn-c []
{1 (c/fn-arity
(c/tag 'reverse)
(c/list-c [(c/param (c/tag 'reverse) 0)]
c/no-tail)
;; returns
c/top-type)})

{2 (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity241)
(c/list-c [(c/multi [c/strbuff-constraint
(c/param (c/tag 'fn-arity241) 0)])]
c/no-tail)
;; returns
(c/multi [c/strbuff-constraint
(c/coll-of-c (c/multi [(c/type-op c/inner-type-of-op
(c/multi [c/strbuff-constraint
(c/param (c/tag 'fn-arity241) 0)])
)
c/substr-constraint]))]))}), 5 (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity240)
(c/list-c [(c/multi [c/substr-constraint
(c/param (c/tag 'fn-arity240) 0)])]
c/no-tail)
;; returns
(c/multi [c/strbuff-constraint
(c/coll-of-c (c/multi [(c/type-op c/inner-type-of-op
(c/multi [c/substr-constraint
(c/param (c/tag 'fn-arity240) 0)])
)
c/substr-constraint]))]))}), 6 (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity82)
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity82) 0)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/type-op c/inner-type-of-op
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity82) 0)])
))))}), 8 (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity88)
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity88) 0)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/type-op c/inner-type-of-op
(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity88) 0)])
))))})})]
))}), 56 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity553)
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".x")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity553) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity553) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity553) 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents (c/type-op c/call-value-op
(c/param (c/tag 'fn-arity553) 1)
)
(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag 'fn-arity553) 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity554) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity554) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity553) 0)
[(c/Field (c/tag ".x"))]
)])]
)
}
c/fn-constraint
 empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag 'fn-arity552)
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".x")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity552) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity552) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity552) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity552) 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity552) 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity554) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity554) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity553) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity552) 0)
[(c/Field (c/tag ".x"))]
)])]
)
(c/ReifiedConstraint 59 (c/tag "* RecurseFinal constructor at core: 2559 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag '* RecurseFinal constructor at core: 2559 *)
(c/seq-c [c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "RecurseFinal")
{}
{c/contents c/top-type
(c/Field (c/tag ".x")) (c/param (c/tag '* RecurseFinal constructor at core: 2559 *) 1)
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")]
))}), 15 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity349)
(c/list-c [(c/multi [(c/param (c/tag 'fn-arity349) 0)
c/promise-constraint])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity349) 1)])]
c/no-tail)
;; returns
(c/multi [(c/param (c/tag 'new-p) 0)
c/promise-constraint]))}), 16 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity370)
(c/list-c [(c/multi [(c/param (c/tag 'fn-arity370) 0)
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity370) 1)])]
c/no-tail)
;; returns
(c/multi [(c/param (c/tag 'new-fut) 0)
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")]))}), 55 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity556)
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".x")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity556) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity556) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity556) 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents (c/type-op c/call-value-op
(c/param (c/tag 'fn-arity556) 1)
)
(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag 'fn-arity556) 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity557) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity557) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity556) 0)
[(c/Field (c/tag ".x"))]
)])]
)
}
c/fn-constraint
 empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag 'fn-arity555)
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".x")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity555) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity555) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity555) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity555) 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity555) 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity557) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity557) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity556) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity555) 0)
[(c/Field (c/tag ".x"))]
)])]
)
(c/ReifiedConstraint 60 (c/tag "* RecurseWith constructor at core: 2571 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag '* RecurseWith constructor at core: 2571 *)
(c/seq-c [c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "RecurseWith")
{}
{c/contents c/top-type
(c/Field (c/tag ".x")) (c/param (c/tag '* RecurseWith constructor at core: 2571 *) 1)
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")]
))}), 7 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity129)
(c/list-c [(c/multi [(c/param (c/tag 'fn-arity129) 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity129) 1)
0
))
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity129) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity129) 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity129) 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity129) 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity129) 0)
)])]
)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity129) 1)
)]))), 3 (c/fn-arity
(c/tag 'fn-arity128)
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag 'fn-arity128) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity128) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity128) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity128) 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/inner-type-of-op
(c/MaybeConstraint (c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity128) 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity128) 0)
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity3)
(c/seq-c [(c/param (c/tag 'fn-arity3) 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag 'fn-arity3) 0)))})]
))
)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity128) 2)
[c/maybe-constraint]
)]))}), 35 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity628)
(c/list-c [(c/multi [(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity641) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity640) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity639) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity638) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity637) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity636) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity635) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity634) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity633) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity632) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity631) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity630) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity629) 0)
[(c/Field (c/tag ".set-map"))]
)])
}
{c/contents c/top-type
(c/Field (c/tag ".set-map")) (c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity641) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity640) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity639) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity638) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity637) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity636) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity635) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity634) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity633) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity632) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity631) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity630) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity629) 0)
[(c/Field (c/tag ".set-map"))]
)])
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity628) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity628) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity628) 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{c/contents (c/type-op c/call-value-op
(c/param (c/tag 'fn-arity628) 1)
)
(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
(c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity641)
(c/seq-c [(c/multi [(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{c/contents c/top-type
(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity641) 0)])
(c/param (c/tag 'fn-arity641) 1)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "get")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'get)
(c/list-c [(c/param (c/tag 'get) 0)
(c/param (c/tag 'get) 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag 'get) 0)
)))})

{})
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity641) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])])
(c/param (c/tag 'fn-arity641) 1)]
))})
 empty-list c/no-symbol ""))})}) 

 arg-cs [(c/list-c [c/int-constraint]
c/no-tail), (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity732)
(c/seq-c [(c/multi [(c/sum-c [c/strbuff-constraint
c/substr-constraint])
(c/param (c/tag 'fn-arity732) 0)])]
c/no-tail)
;; returns
c/substr-constraint)})] 

 result-type (c/NoValues [c/strbuff-constraint
c/int-constraint]) 

 Conflicting assertions (1082)  at assertion-tests/bad-inner-2.toc: 3
Integer c/no-int from:    String from:
core: 95                  core: 333   
core: 98                  core: 336   
                          core: 22    
                                      
                                      


*** site 1076 assertion-tests/bad-let.toc: 9 
 (bad "99") 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity745)
(c/seq-c [(c/multi [c/int-constraint
(c/param (c/tag 'fn-arity745) 0)])]
c/no-tail)
;; returns
c/substr-constraint)}) 

 arg-cs [(c/StrBuffConstraint "99")] 

 result-type (c/NoValues [c/int-constraint
(c/StrBuffConstraint "99")]) 

 Conflicting assertions (1082)  at assertion-tests/bad-let.toc: 9
String from:    Integer c/no-int from:
                bad-let.toc: 3        
                core: 1202            
                core: 1204            
                core: 95              
                core: 97              
                                      
                                      


*** site 1076 assertion-tests/bad-inner-17.toc: 7 
 (f (vector (list 1 2) (vector 'x) (vector 3 6))) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity728)
(c/seq-c [(c/multi [(c/coll-of-c (c/seq-c [c/int-constraint
c/top-type]
c/no-tail))
(c/param (c/tag 'fn-arity728) 0)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "reduce")
(c/fn-c []
{3 (c/fn-arity
(c/tag 'reduce)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [2])
(c/param (c/tag 'reduce) 2)])
1
))
(c/param (c/tag 'reduce) 0)])
(c/param (c/tag 'reduce) 1)
(c/multi [(.required-arities c/fn-constraint [2])
(c/param (c/tag 'reduce) 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/param (c/tag 'reduce) 1)
(c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [2])
(c/param (c/tag 'reduce) 2)])
[(c/sum-c [(c/param (c/tag 'reduce) 1)
(c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [2])
(c/param (c/tag 'reduce) 2)])
)])
(c/type-op c/inner-type-of-op
(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [2])
(c/param (c/tag 'reduce) 2)])
1
))
(c/param (c/tag 'reduce) 0)])
)]
)]))})

{2 (c/fn-c []
{3 (c/fn-arity
(c/tag 'fn-arity211)
(c/list-c [(c/multi [c/strbuff-constraint
(c/param (c/tag 'fn-arity211) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity211) 2)
1
))])
(c/param (c/tag 'fn-arity211) 1)
(c/multi [(.required-arities c/fn-constraint [2])
(c/param (c/tag 'fn-arity211) 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/param (c/tag 'fn-arity211) 1)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity211) 2)
[(c/sum-c [(c/param (c/tag 'fn-arity211) 1)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity211) 2)
)])
(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity211) 2)
1
)
(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity211) 0)
)])]
)]))}), 5 (c/fn-c []
{3 (c/fn-arity
(c/tag 'fn-arity210)
(c/list-c [(c/multi [c/substr-constraint
(c/param (c/tag 'fn-arity210) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity210) 2)
1
))])
(c/param (c/tag 'fn-arity210) 1)
(c/multi [(.required-arities c/fn-constraint [2])
(c/param (c/tag 'fn-arity210) 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/param (c/tag 'fn-arity210) 1)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity210) 2)
[(c/sum-c [(c/param (c/tag 'fn-arity210) 1)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity210) 2)
)])
(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity210) 2)
1
)
(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity210) 0)
)])]
)]))}), 6 (c/fn-c []
{3 (c/fn-arity
(c/tag 'fn-arity160)
(c/list-c [(c/multi [(c/param (c/tag 'fn-arity160) 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity160) 2)
1
)))])
(c/param (c/tag 'fn-arity160) 1)
(c/multi [(.required-arities c/fn-constraint [2])
(c/param (c/tag 'fn-arity160) 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/param (c/tag 'fn-arity160) 1)
(c/multi [(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity160) 2)
[(c/sum-c [(c/param (c/tag 'fn-arity160) 1)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity160) 2)
)])
(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity160) 2)
1
)
(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity160) 0)
)])]
)
(c/param (c/tag 'fn-arity160) 1)])]))}), 8 (c/fn-c []
{3 (c/fn-arity
(c/tag 'fn-arity303)
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity303) 0)
(c/seq-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity303) 2)
1
)))])
(c/param (c/tag 'fn-arity303) 1)
(c/multi [(.required-arities c/fn-constraint [2])
(c/param (c/tag 'fn-arity303) 2)])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity303) 2)
[(c/param (c/tag 'fn-arity303) 1)
(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity303) 2)
1
)
(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity303) 0)
)])]
)
(c/sum-c [(c/param (c/tag 'fn-arity303) 1)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity303) 2)
[(c/sum-c [(c/param (c/tag 'fn-arity303) 1)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity303) 2)
)])
(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity303) 2)
1
)
(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity303) 0)
)])]
)])]))}), 35 (c/fn-c []
{3 (c/fn-arity
(c/tag 'fn-arity636)
(c/list-c [(c/multi [(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity641) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity640) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity639) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity638) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity637) 0)
[(c/Field (c/tag ".set-map"))]
)])
}
{c/contents c/top-type
(c/Field (c/tag ".set-map")) (c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity641) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity640) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity639) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity638) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity637) 0)
[(c/Field (c/tag ".set-map"))]
)])
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity636) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity636) 2)
1
))])
(c/param (c/tag 'fn-arity636) 1)
(c/multi [(.required-arities c/fn-constraint [2])
(c/param (c/tag 'fn-arity636) 2)])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/fn-c []
{3 (c/fn-arity
(c/tag 'fn-arity160)
(c/list-c [(c/multi [(c/param (c/tag 'fn-arity160) 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity160) 2)
1
)))])
(c/param (c/tag 'fn-arity160) 1)
(c/multi [(.required-arities c/fn-constraint [2])
(c/param (c/tag 'fn-arity160) 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/param (c/tag 'fn-arity160) 1)
(c/multi [(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity160) 2)
[(c/sum-c [(c/param (c/tag 'fn-arity160) 1)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity160) 2)
)])
(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity160) 2)
1
)
(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity160) 0)
)])]
)
(c/param (c/tag 'fn-arity160) 1)])]))})
[(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "vals")
(c/fn-c []
{1 (c/fn-arity
(c/tag 'vals)
(c/list-c [(c/param (c/tag 'vals) 0)]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c c/top-type)))})

{})
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity641) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity640) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity639) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity638) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity637) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity636) 0)
[(c/Field (c/tag ".set-map"))]
)])]
)
(c/param (c/tag 'fn-arity636) 1)
(c/param (c/tag 'fn-arity636) 2)]
)
(c/sum-c [(c/param (c/tag 'fn-arity636) 1)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity636) 2)
[(c/sum-c [(c/param (c/tag 'fn-arity636) 1)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity636) 2)
)])
(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity636) 2)
1
)
(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity636) 0)
)])]
)])]))})})
[(c/param (c/tag 'fn-arity728) 0)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
(c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity733)
(c/seq-c [(c/param (c/tag 'fn-arity733) 0)
(c/seq-c [c/int-constraint
c/top-type]
c/no-tail)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "assoc")
(c/fn-c []
{3 (c/fn-arity
(c/tag 'assoc)
(c/list-c [(c/param (c/tag 'assoc) 0)
(c/param (c/tag 'assoc) 1)
(c/param (c/tag 'assoc) 2)]
c/no-tail)
;; returns
c/top-type)})

{12 (c/fn-c []
{3 (c/fn-arity
(c/tag 'fn-arity486)
(c/list-c [(c/multi [(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity486) 0)])
(c/param (c/tag 'fn-arity486) 1)
(c/param (c/tag 'fn-arity486) 2)]
c/no-tail)
;; returns
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")]))}), 13 (c/fn-c []
{3 (c/fn-arity
(c/tag 'fn-arity485)
(c/list-c [(c/multi [(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity485) 0)])
(c/param (c/tag 'fn-arity485) 1)
(c/param (c/tag 'fn-arity485) 2)]
c/no-tail)
;; returns
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")]))}), 11 (c/fn-c []
{3 (c/fn-arity
(c/tag 'fn-arity487)
(c/list-c [(c/multi [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity487) 0)])
(c/param (c/tag 'fn-arity487) 1)
(c/param (c/tag 'fn-arity487) 2)]
c/no-tail)
;; returns
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")]))}), 7 (c/fn-c []
{3 (c/fn-arity
(c/tag 'fn-arity135)
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag 'fn-arity135) 0)])
(c/param (c/tag 'fn-arity135) 1)
(c/param (c/tag 'fn-arity135) 2)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag 'fn-arity135) 2)))})})
[(c/param (c/tag 'fn-arity733) 0)
c/top-type
(c/vect-c [c/int-constraint
c/top-type]
c/no-tail)]
))})]
))}) 

 arg-cs [(c/vect-c [(c/list-c [(c/IntegerConstraint 1 2147483647 -2147483648)
(c/IntegerConstraint 2 2147483647 -2147483648)]
c/no-tail)
(c/vect-c [(c/SymbolConstraint 'x)]
c/no-tail)
(c/vect-c [(c/IntegerConstraint 3 2147483647 -2147483648)
(c/IntegerConstraint 6 2147483647 -2147483648)]
c/no-tail)]
c/no-tail)] 

 result-type (c/NoValues [c/int-constraint
(c/SymbolConstraint 'x)]) 

 Conflicting assertions (1082)  at assertion-tests/bad-inner-17.toc: 7
Symbol 'x from:    Integer c/no-int from:
                   bad-inner-17.toc: 3   
                   bad-inner-17.toc: 4   
                   core: 1202            
                   core: 1204            
                   core: 95              
                   core: 97              
                                         
                                         


*** Conflicting assertions (706)  at assertion-tests/bad-or-2.toc: 5
Maybe from:    ArrayNode from:
               core: 2492     
               core: 2497     
                              
                              


*** Conflicting assertions (706)  at assertion-tests/bad-or-1.toc: 8
Maybe from:    ArrayNode from:
               core: 2501     
               core: 2492     
               core: 2497     
                              
                              


*** site 1076 assertion-tests/bad-inner-or.toc: 9 
 (map (or (f )
(g )) inc) 

 target-c (c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{6 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity164)
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity164) 0)
(c/seq-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity164) 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity164) 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity164) 1)
)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity164) 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity164) 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity164) 0)
)])]
)])))), 3 (c/fn-arity
(c/tag 'fn-arity163)
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity163) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity163) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity163) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity163) 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity163) 2)
[(c/list-c [] c/no-tail)]
)
(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'flat-map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])
0
))
(c/param (c/tag 'flat-map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity163) 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity163) 0)
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity183)
(c/seq-c [(c/param (c/tag 'fn-arity183) 0)]
c/no-tail)
;; returns
(c/coll-of-c (c/seq-c []
(c/coll-of-c c/top-type))))})]
)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity163) 2)
[(c/list-c [] c/no-tail)]
)])
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'flat-map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])
0
))
(c/param (c/tag 'flat-map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity163) 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity163) 0)
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity183)
(c/seq-c [(c/param (c/tag 'fn-arity183) 0)]
c/no-tail)
;; returns
(c/coll-of-c (c/seq-c []
(c/coll-of-c c/top-type))))})]
)]))}), 8 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity306)
(c/list-c [(c/multi [(c/param (c/tag 'fn-arity306) 0)
(c/vect-c [] (c/coll-of-c c/top-type))
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity306) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity306) 1)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity306) 1)
)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity306) 1)
[(c/type-op c/inner-type-of-op
(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity306) 0)])
)]
)])))), 3 (c/fn-arity
(c/tag 'fn-arity305)
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity305) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity305) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity305) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity305) 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'flat-map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])
0
))
(c/param (c/tag 'flat-map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity305) 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity305) 0)
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity329)
(c/seq-c [(c/param (c/tag 'fn-arity329) 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity305) 2)
[(c/vect-c [] c/no-tail)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity330)
(c/seq-c [(c/param (c/tag 'fn-arity330) 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "conj")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'conj)
(c/list-c [(c/param (c/tag 'conj) 0)
(c/param (c/tag 'conj) 1)]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/param (c/tag 'fn-arity330) 0)
(c/param (c/tag 'fn-arity329) 0)]
))})]
))})]
)
(c/ProtoImpls
(c/tag "reverse")
(c/fn-c []
{1 (c/fn-arity
(c/tag 'reverse)
(c/list-c [(c/param (c/tag 'reverse) 0)]
c/no-tail)
;; returns
c/top-type)})

{2 (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity241)
(c/list-c [(c/multi [c/strbuff-constraint
(c/param (c/tag 'fn-arity241) 0)])]
c/no-tail)
;; returns
(c/multi [c/strbuff-constraint
(c/coll-of-c (c/multi [(c/type-op c/inner-type-of-op
(c/multi [c/strbuff-constraint
(c/param (c/tag 'fn-arity241) 0)])
)
c/substr-constraint]))]))}), 5 (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity240)
(c/list-c [(c/multi [c/substr-constraint
(c/param (c/tag 'fn-arity240) 0)])]
c/no-tail)
;; returns
(c/multi [c/strbuff-constraint
(c/coll-of-c (c/multi [(c/type-op c/inner-type-of-op
(c/multi [c/substr-constraint
(c/param (c/tag 'fn-arity240) 0)])
)
c/substr-constraint]))]))}), 6 (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity82)
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity82) 0)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/type-op c/inner-type-of-op
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity82) 0)])
))))}), 8 (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity88)
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity88) 0)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/type-op c/inner-type-of-op
(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity88) 0)])
))))})})]
))}), 56 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity553)
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".x")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity553) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity553) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity553) 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents (c/type-op c/call-value-op
(c/param (c/tag 'fn-arity553) 1)
)
(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag 'fn-arity553) 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity554) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity554) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity553) 0)
[(c/Field (c/tag ".x"))]
)])]
)
}
c/fn-constraint
 empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag 'fn-arity552)
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".x")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity552) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity552) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity552) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity552) 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity552) 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity554) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity554) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity553) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity552) 0)
[(c/Field (c/tag ".x"))]
)])]
)
(c/ReifiedConstraint 59 (c/tag "* RecurseFinal constructor at core: 2559 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag '* RecurseFinal constructor at core: 2559 *)
(c/seq-c [c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "RecurseFinal")
{}
{c/contents c/top-type
(c/Field (c/tag ".x")) (c/param (c/tag '* RecurseFinal constructor at core: 2559 *) 1)
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")]
))}), 15 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity349)
(c/list-c [(c/multi [(c/param (c/tag 'fn-arity349) 0)
c/promise-constraint])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity349) 1)])]
c/no-tail)
;; returns
(c/multi [(c/param (c/tag 'new-p) 0)
c/promise-constraint]))}), 16 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity370)
(c/list-c [(c/multi [(c/param (c/tag 'fn-arity370) 0)
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity370) 1)])]
c/no-tail)
;; returns
(c/multi [(c/param (c/tag 'new-fut) 0)
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")]))}), 55 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity556)
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".x")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity556) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity556) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity556) 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents (c/type-op c/call-value-op
(c/param (c/tag 'fn-arity556) 1)
)
(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag 'fn-arity556) 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity557) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity557) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity556) 0)
[(c/Field (c/tag ".x"))]
)])]
)
}
c/fn-constraint
 empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag 'fn-arity555)
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".x")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity555) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity555) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity555) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity555) 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity555) 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity557) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity557) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity556) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity555) 0)
[(c/Field (c/tag ".x"))]
)])]
)
(c/ReifiedConstraint 60 (c/tag "* RecurseWith constructor at core: 2571 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag '* RecurseWith constructor at core: 2571 *)
(c/seq-c [c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "RecurseWith")
{}
{c/contents c/top-type
(c/Field (c/tag ".x")) (c/param (c/tag '* RecurseWith constructor at core: 2571 *) 1)
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")]
))}), 7 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity129)
(c/list-c [(c/multi [(c/param (c/tag 'fn-arity129) 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity129) 1)
0
))
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity129) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity129) 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity129) 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity129) 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity129) 0)
)])]
)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity129) 1)
)]))), 3 (c/fn-arity
(c/tag 'fn-arity128)
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag 'fn-arity128) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity128) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity128) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity128) 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/inner-type-of-op
(c/MaybeConstraint (c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity128) 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity128) 0)
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity3)
(c/seq-c [(c/param (c/tag 'fn-arity3) 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag 'fn-arity3) 0)))})]
))
)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity128) 2)
[c/maybe-constraint]
)]))}), 35 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity628)
(c/list-c [(c/multi [(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity641) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity640) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity639) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity638) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity637) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity636) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity635) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity634) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity633) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity632) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity631) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity630) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity629) 0)
[(c/Field (c/tag ".set-map"))]
)])
}
{c/contents c/top-type
(c/Field (c/tag ".set-map")) (c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity641) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity640) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity639) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity638) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity637) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity636) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity635) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity634) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity633) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity632) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity631) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity630) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity629) 0)
[(c/Field (c/tag ".set-map"))]
)])
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity628) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity628) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity628) 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{c/contents (c/type-op c/call-value-op
(c/param (c/tag 'fn-arity628) 1)
)
(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
(c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity641)
(c/seq-c [(c/multi [(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{c/contents c/top-type
(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity641) 0)])
(c/param (c/tag 'fn-arity641) 1)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "get")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'get)
(c/list-c [(c/param (c/tag 'get) 0)
(c/param (c/tag 'get) 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag 'get) 0)
)))})

{})
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity641) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])])
(c/param (c/tag 'fn-arity641) 1)]
))})
 empty-list c/no-symbol ""))})}) 

 arg-cs [(c/sum-c [(c/MaybeConstraint (c/StrBuffConstraint "9"))
(c/MaybeConstraint (c/StrBuffConstraint "88"))]), (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity120)
(c/seq-c [(c/multi [c/int-constraint
(c/param (c/tag 'fn-arity120) 0)])]
c/no-tail)
;; returns
c/int-constraint)})] 

 result-type (c/NoValues [(c/StrBuffConstraint "88")
c/int-constraint]) 

 Conflicting assertions (1082)  at assertion-tests/bad-inner-or.toc: 9
Integer c/no-int from:    String from:       
core: 1204                bad-inner-or.toc: 5
core: 95                                     
core: 97                                     
                                             
                                             


*** Loaded assertion-tests/bad-inner-8.toc

*** site 1076 assertion-tests/bad-inner-9.toc: 8 
 (f (vector (list 1 2) (vector ) (vector 3 6))) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity747)
(c/seq-c [(c/multi [(c/seq-c [] (c/coll-of-c (c/sum-c [(c/list-c [c/int-constraint
c/top-type]
c/no-tail)
(c/vect-c [c/int-constraint
c/top-type]
c/no-tail)])))
(c/param (c/tag 'fn-arity747) 0)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{6 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity164)
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity164) 0)
(c/seq-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity164) 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity164) 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity164) 1)
)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity164) 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity164) 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity164) 0)
)])]
)])))), 3 (c/fn-arity
(c/tag 'fn-arity163)
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity163) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity163) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity163) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity163) 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity163) 2)
[(c/list-c [] c/no-tail)]
)
(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'flat-map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])
0
))
(c/param (c/tag 'flat-map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity163) 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity163) 0)
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity183)
(c/seq-c [(c/param (c/tag 'fn-arity183) 0)]
c/no-tail)
;; returns
(c/coll-of-c (c/seq-c []
(c/coll-of-c c/top-type))))})]
)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity163) 2)
[(c/list-c [] c/no-tail)]
)])
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'flat-map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])
0
))
(c/param (c/tag 'flat-map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity163) 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity163) 0)
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity183)
(c/seq-c [(c/param (c/tag 'fn-arity183) 0)]
c/no-tail)
;; returns
(c/coll-of-c (c/seq-c []
(c/coll-of-c c/top-type))))})]
)]))}), 8 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity306)
(c/list-c [(c/multi [(c/param (c/tag 'fn-arity306) 0)
(c/vect-c [] (c/coll-of-c c/top-type))
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity306) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity306) 1)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity306) 1)
)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity306) 1)
[(c/type-op c/inner-type-of-op
(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity306) 0)])
)]
)])))), 3 (c/fn-arity
(c/tag 'fn-arity305)
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity305) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity305) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity305) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity305) 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'flat-map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])
0
))
(c/param (c/tag 'flat-map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity305) 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity305) 0)
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity329)
(c/seq-c [(c/param (c/tag 'fn-arity329) 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity305) 2)
[(c/vect-c [] c/no-tail)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity330)
(c/seq-c [(c/param (c/tag 'fn-arity330) 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "conj")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'conj)
(c/list-c [(c/param (c/tag 'conj) 0)
(c/param (c/tag 'conj) 1)]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/param (c/tag 'fn-arity330) 0)
(c/param (c/tag 'fn-arity329) 0)]
))})]
))})]
)
(c/ProtoImpls
(c/tag "reverse")
(c/fn-c []
{1 (c/fn-arity
(c/tag 'reverse)
(c/list-c [(c/param (c/tag 'reverse) 0)]
c/no-tail)
;; returns
c/top-type)})

{2 (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity241)
(c/list-c [(c/multi [c/strbuff-constraint
(c/param (c/tag 'fn-arity241) 0)])]
c/no-tail)
;; returns
(c/multi [c/strbuff-constraint
(c/coll-of-c (c/multi [(c/type-op c/inner-type-of-op
(c/multi [c/strbuff-constraint
(c/param (c/tag 'fn-arity241) 0)])
)
c/substr-constraint]))]))}), 5 (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity240)
(c/list-c [(c/multi [c/substr-constraint
(c/param (c/tag 'fn-arity240) 0)])]
c/no-tail)
;; returns
(c/multi [c/strbuff-constraint
(c/coll-of-c (c/multi [(c/type-op c/inner-type-of-op
(c/multi [c/substr-constraint
(c/param (c/tag 'fn-arity240) 0)])
)
c/substr-constraint]))]))}), 6 (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity82)
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity82) 0)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/type-op c/inner-type-of-op
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity82) 0)])
))))}), 8 (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity88)
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity88) 0)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/type-op c/inner-type-of-op
(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity88) 0)])
))))})})]
))}), 56 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity553)
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".x")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity553) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity553) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity553) 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents (c/type-op c/call-value-op
(c/param (c/tag 'fn-arity553) 1)
)
(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag 'fn-arity553) 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity554) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity554) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity553) 0)
[(c/Field (c/tag ".x"))]
)])]
)
}
c/fn-constraint
 empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag 'fn-arity552)
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".x")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity552) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity552) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity552) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity552) 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity552) 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity554) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity554) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity553) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity552) 0)
[(c/Field (c/tag ".x"))]
)])]
)
(c/ReifiedConstraint 59 (c/tag "* RecurseFinal constructor at core: 2559 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag '* RecurseFinal constructor at core: 2559 *)
(c/seq-c [c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "RecurseFinal")
{}
{c/contents c/top-type
(c/Field (c/tag ".x")) (c/param (c/tag '* RecurseFinal constructor at core: 2559 *) 1)
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")]
))}), 15 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity349)
(c/list-c [(c/multi [(c/param (c/tag 'fn-arity349) 0)
c/promise-constraint])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity349) 1)])]
c/no-tail)
;; returns
(c/multi [(c/param (c/tag 'new-p) 0)
c/promise-constraint]))}), 16 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity370)
(c/list-c [(c/multi [(c/param (c/tag 'fn-arity370) 0)
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity370) 1)])]
c/no-tail)
;; returns
(c/multi [(c/param (c/tag 'new-fut) 0)
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")]))}), 55 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity556)
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".x")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity556) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity556) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity556) 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents (c/type-op c/call-value-op
(c/param (c/tag 'fn-arity556) 1)
)
(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag 'fn-arity556) 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity557) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity557) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity556) 0)
[(c/Field (c/tag ".x"))]
)])]
)
}
c/fn-constraint
 empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag 'fn-arity555)
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".x")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity555) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity555) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity555) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity555) 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity555) 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity557) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity557) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity556) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity555) 0)
[(c/Field (c/tag ".x"))]
)])]
)
(c/ReifiedConstraint 60 (c/tag "* RecurseWith constructor at core: 2571 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag '* RecurseWith constructor at core: 2571 *)
(c/seq-c [c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "RecurseWith")
{}
{c/contents c/top-type
(c/Field (c/tag ".x")) (c/param (c/tag '* RecurseWith constructor at core: 2571 *) 1)
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")]
))}), 7 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity129)
(c/list-c [(c/multi [(c/param (c/tag 'fn-arity129) 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity129) 1)
0
))
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity129) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity129) 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity129) 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity129) 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity129) 0)
)])]
)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity129) 1)
)]))), 3 (c/fn-arity
(c/tag 'fn-arity128)
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag 'fn-arity128) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity128) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity128) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity128) 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/inner-type-of-op
(c/MaybeConstraint (c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity128) 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity128) 0)
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity3)
(c/seq-c [(c/param (c/tag 'fn-arity3) 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag 'fn-arity3) 0)))})]
))
)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity128) 2)
[c/maybe-constraint]
)]))}), 35 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity628)
(c/list-c [(c/multi [(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity641) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity640) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity639) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity638) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity637) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity636) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity635) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity634) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity633) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity632) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity631) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity630) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity629) 0)
[(c/Field (c/tag ".set-map"))]
)])
}
{c/contents c/top-type
(c/Field (c/tag ".set-map")) (c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity641) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity640) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity639) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity638) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity637) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity636) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity635) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity634) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity633) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity632) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity631) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity630) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity629) 0)
[(c/Field (c/tag ".set-map"))]
)])
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity628) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity628) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity628) 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{c/contents (c/type-op c/call-value-op
(c/param (c/tag 'fn-arity628) 1)
)
(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
(c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity641)
(c/seq-c [(c/multi [(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{c/contents c/top-type
(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity641) 0)])
(c/param (c/tag 'fn-arity641) 1)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "get")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'get)
(c/list-c [(c/param (c/tag 'get) 0)
(c/param (c/tag 'get) 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag 'get) 0)
)))})

{})
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity641) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])])
(c/param (c/tag 'fn-arity641) 1)]
))})
 empty-list c/no-symbol ""))})})
[(c/multi [(c/seq-c [] (c/coll-of-c (c/sum-c [(c/list-c [] (c/coll-of-c c/top-type))
(c/vect-c [] (c/coll-of-c c/top-type))])))
(c/param (c/tag 'fn-arity747) 0)])
(c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity748)
(c/seq-c [(c/seq-c [c/int-constraint
c/top-type]
c/no-tail)]
c/no-tail)
;; returns
(c/vect-c [c/int-constraint
c/top-type]
c/no-tail))})]
))}) 

 arg-cs [(c/vect-c [(c/list-c [(c/IntegerConstraint 1 2147483647 -2147483648)
(c/IntegerConstraint 2 2147483647 -2147483648)]
c/no-tail)
(c/vect-c [] c/no-tail)
(c/vect-c [(c/IntegerConstraint 3 2147483647 -2147483648)
(c/IntegerConstraint 6 2147483647 -2147483648)]
c/no-tail)]
c/no-tail)] 

 result-type (c/NoValues [c/no-tail
(c/ReifiedConstraint 0 (c/tag "Can not contain other values")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")]) 

 Conflicting assertions (1082)  at assertion-tests/bad-inner-9.toc: 8
Can not contain other values from:    No Tail for sequence


*** site 1076 assertion-tests/bad-nested-let.toc: 10 
 (bad "99") 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity753)
(c/seq-c [(c/multi [c/int-constraint
(c/param (c/tag 'fn-arity753) 0)])]
c/no-tail)
;; returns
c/substr-constraint)}) 

 arg-cs [(c/StrBuffConstraint "99")] 

 result-type (c/NoValues [c/int-constraint
(c/StrBuffConstraint "99")]) 

 Conflicting assertions (1082)  at assertion-tests/bad-nested-let.toc: 10
String from:    Integer c/no-int from:
                bad-nested-let.toc: 4 
                core: 1202            
                core: 1204            
                core: 95              
                core: 97              
                                      
                                      


*** site 1076 assertion-tests/bad-field-3.toc: 15 
 (g z) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity752)
(c/seq-c [(c/multi [(c/ReifiedConstraint 102 (c/tag "Bogus")
{(c/Field (c/tag ".x-field")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".x-field")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity752) 0)])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity752) 0)
[(c/Field (c/tag ".x-field"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity752) 0)
[(c/Field (c/tag ".x-field"))]
)]))}) 

 arg-cs [(c/multi [(c/ReifiedConstraint 0 (c/tag "field 'not-there' required")
{}
{(c/Field (c/tag ".not-there")) c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity754) 0)])] 

 result-type (c/NoValues [(c/ReifiedConstraint 0 (c/tag "field 'not-there' required")
{}
{(c/Field (c/tag ".not-there")) c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 102 (c/tag "Bogus")
{(c/Field (c/tag ".x-field")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".x-field")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")]) 

 Conflicting assertions (1082)  at assertion-tests/bad-field-3.toc: 15
Bogus from:            field 'not-there' required from:
bad-field-3.toc: 11    bad-field-3.toc: 6              
bad-field-3.toc: 10    bad-field-3.toc: 7              
bad-field-3.toc: 4                                     
                                                       
                                                       


*** site 1076 assertion-tests/butlast-inner-list.toc: 7 
 (map init-ints (fn  [s]
(subs s 1))) 

 target-c (c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{6 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity164)
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity164) 0)
(c/seq-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity164) 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity164) 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity164) 1)
)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity164) 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity164) 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity164) 0)
)])]
)])))), 3 (c/fn-arity
(c/tag 'fn-arity163)
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity163) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity163) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity163) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity163) 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity163) 2)
[(c/list-c [] c/no-tail)]
)
(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'flat-map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])
0
))
(c/param (c/tag 'flat-map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity163) 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity163) 0)
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity183)
(c/seq-c [(c/param (c/tag 'fn-arity183) 0)]
c/no-tail)
;; returns
(c/coll-of-c (c/seq-c []
(c/coll-of-c c/top-type))))})]
)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity163) 2)
[(c/list-c [] c/no-tail)]
)])
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'flat-map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])
0
))
(c/param (c/tag 'flat-map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity163) 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity163) 0)
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity183)
(c/seq-c [(c/param (c/tag 'fn-arity183) 0)]
c/no-tail)
;; returns
(c/coll-of-c (c/seq-c []
(c/coll-of-c c/top-type))))})]
)]))}), 8 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity306)
(c/list-c [(c/multi [(c/param (c/tag 'fn-arity306) 0)
(c/vect-c [] (c/coll-of-c c/top-type))
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity306) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity306) 1)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity306) 1)
)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity306) 1)
[(c/type-op c/inner-type-of-op
(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity306) 0)])
)]
)])))), 3 (c/fn-arity
(c/tag 'fn-arity305)
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity305) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity305) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity305) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity305) 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'flat-map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])
0
))
(c/param (c/tag 'flat-map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity305) 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity305) 0)
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity329)
(c/seq-c [(c/param (c/tag 'fn-arity329) 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity305) 2)
[(c/vect-c [] c/no-tail)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity330)
(c/seq-c [(c/param (c/tag 'fn-arity330) 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "conj")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'conj)
(c/list-c [(c/param (c/tag 'conj) 0)
(c/param (c/tag 'conj) 1)]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/param (c/tag 'fn-arity330) 0)
(c/param (c/tag 'fn-arity329) 0)]
))})]
))})]
)
(c/ProtoImpls
(c/tag "reverse")
(c/fn-c []
{1 (c/fn-arity
(c/tag 'reverse)
(c/list-c [(c/param (c/tag 'reverse) 0)]
c/no-tail)
;; returns
c/top-type)})

{2 (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity241)
(c/list-c [(c/multi [c/strbuff-constraint
(c/param (c/tag 'fn-arity241) 0)])]
c/no-tail)
;; returns
(c/multi [c/strbuff-constraint
(c/coll-of-c (c/multi [(c/type-op c/inner-type-of-op
(c/multi [c/strbuff-constraint
(c/param (c/tag 'fn-arity241) 0)])
)
c/substr-constraint]))]))}), 5 (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity240)
(c/list-c [(c/multi [c/substr-constraint
(c/param (c/tag 'fn-arity240) 0)])]
c/no-tail)
;; returns
(c/multi [c/strbuff-constraint
(c/coll-of-c (c/multi [(c/type-op c/inner-type-of-op
(c/multi [c/substr-constraint
(c/param (c/tag 'fn-arity240) 0)])
)
c/substr-constraint]))]))}), 6 (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity82)
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity82) 0)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/type-op c/inner-type-of-op
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity82) 0)])
))))}), 8 (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity88)
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity88) 0)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/type-op c/inner-type-of-op
(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity88) 0)])
))))})})]
))}), 56 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity553)
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".x")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity553) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity553) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity553) 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents (c/type-op c/call-value-op
(c/param (c/tag 'fn-arity553) 1)
)
(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag 'fn-arity553) 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity554) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity554) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity553) 0)
[(c/Field (c/tag ".x"))]
)])]
)
}
c/fn-constraint
 empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag 'fn-arity552)
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".x")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity552) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity552) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity552) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity552) 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity552) 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity554) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity554) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity553) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity552) 0)
[(c/Field (c/tag ".x"))]
)])]
)
(c/ReifiedConstraint 59 (c/tag "* RecurseFinal constructor at core: 2559 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag '* RecurseFinal constructor at core: 2559 *)
(c/seq-c [c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "RecurseFinal")
{}
{c/contents c/top-type
(c/Field (c/tag ".x")) (c/param (c/tag '* RecurseFinal constructor at core: 2559 *) 1)
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")]
))}), 15 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity349)
(c/list-c [(c/multi [(c/param (c/tag 'fn-arity349) 0)
c/promise-constraint])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity349) 1)])]
c/no-tail)
;; returns
(c/multi [(c/param (c/tag 'new-p) 0)
c/promise-constraint]))}), 16 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity370)
(c/list-c [(c/multi [(c/param (c/tag 'fn-arity370) 0)
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity370) 1)])]
c/no-tail)
;; returns
(c/multi [(c/param (c/tag 'new-fut) 0)
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")]))}), 55 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity556)
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".x")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity556) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity556) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity556) 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents (c/type-op c/call-value-op
(c/param (c/tag 'fn-arity556) 1)
)
(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag 'fn-arity556) 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity557) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity557) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity556) 0)
[(c/Field (c/tag ".x"))]
)])]
)
}
c/fn-constraint
 empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag 'fn-arity555)
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".x")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity555) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity555) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity555) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity555) 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity555) 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity557) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity557) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity556) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity555) 0)
[(c/Field (c/tag ".x"))]
)])]
)
(c/ReifiedConstraint 60 (c/tag "* RecurseWith constructor at core: 2571 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag '* RecurseWith constructor at core: 2571 *)
(c/seq-c [c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "RecurseWith")
{}
{c/contents c/top-type
(c/Field (c/tag ".x")) (c/param (c/tag '* RecurseWith constructor at core: 2571 *) 1)
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")]
))}), 7 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity129)
(c/list-c [(c/multi [(c/param (c/tag 'fn-arity129) 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity129) 1)
0
))
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity129) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity129) 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity129) 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity129) 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity129) 0)
)])]
)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity129) 1)
)]))), 3 (c/fn-arity
(c/tag 'fn-arity128)
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag 'fn-arity128) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity128) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity128) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity128) 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/inner-type-of-op
(c/MaybeConstraint (c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity128) 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity128) 0)
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity3)
(c/seq-c [(c/param (c/tag 'fn-arity3) 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag 'fn-arity3) 0)))})]
))
)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity128) 2)
[c/maybe-constraint]
)]))}), 35 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity628)
(c/list-c [(c/multi [(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity641) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity640) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity639) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity638) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity637) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity636) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity635) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity634) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity633) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity632) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity631) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity630) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity629) 0)
[(c/Field (c/tag ".set-map"))]
)])
}
{c/contents c/top-type
(c/Field (c/tag ".set-map")) (c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity641) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity640) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity639) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity638) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity637) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity636) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity635) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity634) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity633) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity632) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity631) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity630) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity629) 0)
[(c/Field (c/tag ".set-map"))]
)])
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity628) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity628) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity628) 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{c/contents (c/type-op c/call-value-op
(c/param (c/tag 'fn-arity628) 1)
)
(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
(c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity641)
(c/seq-c [(c/multi [(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{c/contents c/top-type
(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity641) 0)])
(c/param (c/tag 'fn-arity641) 1)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "get")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'get)
(c/list-c [(c/param (c/tag 'get) 0)
(c/param (c/tag 'get) 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag 'get) 0)
)))})

{})
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity641) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])])
(c/param (c/tag 'fn-arity641) 1)]
))})
 empty-list c/no-symbol ""))})}) 

 arg-cs [(c/list-c [(c/IntegerConstraint 1 2147483647 -2147483648)
(c/IntegerConstraint 2 2147483647 -2147483648)]
c/no-tail), (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity755)
(c/seq-c [(c/multi [(c/sum-c [c/strbuff-constraint
c/substr-constraint])
(c/param (c/tag 'fn-arity755) 0)])]
c/no-tail)
;; returns
c/substr-constraint)})] 

 result-type (c/NoValues [c/strbuff-constraint
(c/IntegerConstraint 1 2147483647 -2147483648)]) 

 Conflicting assertions (1082)  at assertion-tests/butlast-inner-list.toc: 7
Integer 1 from:    String from:
                   core: 333   
                   core: 336   
                   core: 22    
                               
                               


*** site 1076 assertion-tests/bad-inner-6.toc: 8 
 (f (vector (vector 1 2) (vector 3 5 "bogus") (vector 3 6))) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity735)
(c/seq-c [(c/multi [(c/seq-c [] (c/coll-of-c (c/sum-c [(c/list-c [] (c/coll-of-c c/int-constraint))
(c/vect-c [] (c/coll-of-c c/int-constraint))])))
(c/param (c/tag 'fn-arity735) 0)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{6 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity164)
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity164) 0)
(c/seq-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity164) 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity164) 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity164) 1)
)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity164) 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity164) 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity164) 0)
)])]
)])))), 3 (c/fn-arity
(c/tag 'fn-arity163)
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity163) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity163) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity163) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity163) 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity163) 2)
[(c/list-c [] c/no-tail)]
)
(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'flat-map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])
0
))
(c/param (c/tag 'flat-map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity163) 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity163) 0)
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity183)
(c/seq-c [(c/param (c/tag 'fn-arity183) 0)]
c/no-tail)
;; returns
(c/coll-of-c (c/seq-c []
(c/coll-of-c c/top-type))))})]
)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity163) 2)
[(c/list-c [] c/no-tail)]
)])
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'flat-map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])
0
))
(c/param (c/tag 'flat-map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity163) 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity163) 0)
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity183)
(c/seq-c [(c/param (c/tag 'fn-arity183) 0)]
c/no-tail)
;; returns
(c/coll-of-c (c/seq-c []
(c/coll-of-c c/top-type))))})]
)]))}), 8 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity306)
(c/list-c [(c/multi [(c/param (c/tag 'fn-arity306) 0)
(c/vect-c [] (c/coll-of-c c/top-type))
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity306) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity306) 1)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity306) 1)
)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity306) 1)
[(c/type-op c/inner-type-of-op
(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity306) 0)])
)]
)])))), 3 (c/fn-arity
(c/tag 'fn-arity305)
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity305) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity305) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity305) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity305) 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'flat-map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])
0
))
(c/param (c/tag 'flat-map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity305) 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity305) 0)
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity329)
(c/seq-c [(c/param (c/tag 'fn-arity329) 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity305) 2)
[(c/vect-c [] c/no-tail)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity330)
(c/seq-c [(c/param (c/tag 'fn-arity330) 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "conj")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'conj)
(c/list-c [(c/param (c/tag 'conj) 0)
(c/param (c/tag 'conj) 1)]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/param (c/tag 'fn-arity330) 0)
(c/param (c/tag 'fn-arity329) 0)]
))})]
))})]
)
(c/ProtoImpls
(c/tag "reverse")
(c/fn-c []
{1 (c/fn-arity
(c/tag 'reverse)
(c/list-c [(c/param (c/tag 'reverse) 0)]
c/no-tail)
;; returns
c/top-type)})

{2 (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity241)
(c/list-c [(c/multi [c/strbuff-constraint
(c/param (c/tag 'fn-arity241) 0)])]
c/no-tail)
;; returns
(c/multi [c/strbuff-constraint
(c/coll-of-c (c/multi [(c/type-op c/inner-type-of-op
(c/multi [c/strbuff-constraint
(c/param (c/tag 'fn-arity241) 0)])
)
c/substr-constraint]))]))}), 5 (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity240)
(c/list-c [(c/multi [c/substr-constraint
(c/param (c/tag 'fn-arity240) 0)])]
c/no-tail)
;; returns
(c/multi [c/strbuff-constraint
(c/coll-of-c (c/multi [(c/type-op c/inner-type-of-op
(c/multi [c/substr-constraint
(c/param (c/tag 'fn-arity240) 0)])
)
c/substr-constraint]))]))}), 6 (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity82)
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity82) 0)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/type-op c/inner-type-of-op
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity82) 0)])
))))}), 8 (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity88)
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity88) 0)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/type-op c/inner-type-of-op
(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity88) 0)])
))))})})]
))}), 56 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity553)
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".x")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity553) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity553) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity553) 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents (c/type-op c/call-value-op
(c/param (c/tag 'fn-arity553) 1)
)
(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag 'fn-arity553) 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity554) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity554) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity553) 0)
[(c/Field (c/tag ".x"))]
)])]
)
}
c/fn-constraint
 empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag 'fn-arity552)
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".x")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity552) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity552) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity552) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity552) 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity552) 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity554) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity554) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity553) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity552) 0)
[(c/Field (c/tag ".x"))]
)])]
)
(c/ReifiedConstraint 59 (c/tag "* RecurseFinal constructor at core: 2559 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag '* RecurseFinal constructor at core: 2559 *)
(c/seq-c [c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "RecurseFinal")
{}
{c/contents c/top-type
(c/Field (c/tag ".x")) (c/param (c/tag '* RecurseFinal constructor at core: 2559 *) 1)
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")]
))}), 15 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity349)
(c/list-c [(c/multi [(c/param (c/tag 'fn-arity349) 0)
c/promise-constraint])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity349) 1)])]
c/no-tail)
;; returns
(c/multi [(c/param (c/tag 'new-p) 0)
c/promise-constraint]))}), 16 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity370)
(c/list-c [(c/multi [(c/param (c/tag 'fn-arity370) 0)
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity370) 1)])]
c/no-tail)
;; returns
(c/multi [(c/param (c/tag 'new-fut) 0)
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")]))}), 55 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity556)
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".x")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity556) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity556) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity556) 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents (c/type-op c/call-value-op
(c/param (c/tag 'fn-arity556) 1)
)
(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag 'fn-arity556) 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity557) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity557) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity556) 0)
[(c/Field (c/tag ".x"))]
)])]
)
}
c/fn-constraint
 empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag 'fn-arity555)
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".x")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity555) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity555) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity555) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity555) 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity555) 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity557) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity557) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity556) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity555) 0)
[(c/Field (c/tag ".x"))]
)])]
)
(c/ReifiedConstraint 60 (c/tag "* RecurseWith constructor at core: 2571 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag '* RecurseWith constructor at core: 2571 *)
(c/seq-c [c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "RecurseWith")
{}
{c/contents c/top-type
(c/Field (c/tag ".x")) (c/param (c/tag '* RecurseWith constructor at core: 2571 *) 1)
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")]
))}), 7 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity129)
(c/list-c [(c/multi [(c/param (c/tag 'fn-arity129) 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity129) 1)
0
))
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity129) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity129) 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity129) 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity129) 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity129) 0)
)])]
)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity129) 1)
)]))), 3 (c/fn-arity
(c/tag 'fn-arity128)
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag 'fn-arity128) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity128) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity128) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity128) 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/inner-type-of-op
(c/MaybeConstraint (c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity128) 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity128) 0)
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity3)
(c/seq-c [(c/param (c/tag 'fn-arity3) 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag 'fn-arity3) 0)))})]
))
)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity128) 2)
[c/maybe-constraint]
)]))}), 35 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity628)
(c/list-c [(c/multi [(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity641) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity640) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity639) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity638) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity637) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity636) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity635) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity634) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity633) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity632) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity631) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity630) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity629) 0)
[(c/Field (c/tag ".set-map"))]
)])
}
{c/contents c/top-type
(c/Field (c/tag ".set-map")) (c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity641) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity640) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity639) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity638) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity637) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity636) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity635) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity634) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity633) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity632) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity631) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity630) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity629) 0)
[(c/Field (c/tag ".set-map"))]
)])
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity628) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity628) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity628) 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{c/contents (c/type-op c/call-value-op
(c/param (c/tag 'fn-arity628) 1)
)
(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
(c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity641)
(c/seq-c [(c/multi [(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{c/contents c/top-type
(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity641) 0)])
(c/param (c/tag 'fn-arity641) 1)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "get")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'get)
(c/list-c [(c/param (c/tag 'get) 0)
(c/param (c/tag 'get) 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag 'get) 0)
)))})

{})
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity641) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])])
(c/param (c/tag 'fn-arity641) 1)]
))})
 empty-list c/no-symbol ""))})})
[(c/multi [(c/seq-c [] (c/coll-of-c (c/sum-c [(c/list-c [] (c/coll-of-c c/top-type))
(c/vect-c [] (c/coll-of-c c/top-type))])))
(c/param (c/tag 'fn-arity735) 0)])
(c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity736)
(c/seq-c [(c/multi [(c/coll-of-c c/int-constraint)
(c/param (c/tag 'fn-arity736) 0)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{6 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity164)
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity164) 0)
(c/seq-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity164) 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity164) 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity164) 1)
)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity164) 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity164) 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity164) 0)
)])]
)])))), 3 (c/fn-arity
(c/tag 'fn-arity163)
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity163) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity163) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity163) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity163) 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity163) 2)
[(c/list-c [] c/no-tail)]
)
(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'flat-map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])
0
))
(c/param (c/tag 'flat-map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity163) 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity163) 0)
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity183)
(c/seq-c [(c/param (c/tag 'fn-arity183) 0)]
c/no-tail)
;; returns
(c/coll-of-c (c/seq-c []
(c/coll-of-c c/top-type))))})]
)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity163) 2)
[(c/list-c [] c/no-tail)]
)])
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'flat-map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])
0
))
(c/param (c/tag 'flat-map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity163) 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity163) 0)
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity183)
(c/seq-c [(c/param (c/tag 'fn-arity183) 0)]
c/no-tail)
;; returns
(c/coll-of-c (c/seq-c []
(c/coll-of-c c/top-type))))})]
)]))}), 8 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity306)
(c/list-c [(c/multi [(c/param (c/tag 'fn-arity306) 0)
(c/vect-c [] (c/coll-of-c c/top-type))
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity306) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity306) 1)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity306) 1)
)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity306) 1)
[(c/type-op c/inner-type-of-op
(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity306) 0)])
)]
)])))), 3 (c/fn-arity
(c/tag 'fn-arity305)
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity305) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity305) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity305) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity305) 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'flat-map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])
0
))
(c/param (c/tag 'flat-map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity305) 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity305) 0)
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity329)
(c/seq-c [(c/param (c/tag 'fn-arity329) 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity305) 2)
[(c/vect-c [] c/no-tail)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity330)
(c/seq-c [(c/param (c/tag 'fn-arity330) 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "conj")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'conj)
(c/list-c [(c/param (c/tag 'conj) 0)
(c/param (c/tag 'conj) 1)]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/param (c/tag 'fn-arity330) 0)
(c/param (c/tag 'fn-arity329) 0)]
))})]
))})]
)
(c/ProtoImpls
(c/tag "reverse")
(c/fn-c []
{1 (c/fn-arity
(c/tag 'reverse)
(c/list-c [(c/param (c/tag 'reverse) 0)]
c/no-tail)
;; returns
c/top-type)})

{2 (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity241)
(c/list-c [(c/multi [c/strbuff-constraint
(c/param (c/tag 'fn-arity241) 0)])]
c/no-tail)
;; returns
(c/multi [c/strbuff-constraint
(c/coll-of-c (c/multi [(c/type-op c/inner-type-of-op
(c/multi [c/strbuff-constraint
(c/param (c/tag 'fn-arity241) 0)])
)
c/substr-constraint]))]))}), 5 (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity240)
(c/list-c [(c/multi [c/substr-constraint
(c/param (c/tag 'fn-arity240) 0)])]
c/no-tail)
;; returns
(c/multi [c/strbuff-constraint
(c/coll-of-c (c/multi [(c/type-op c/inner-type-of-op
(c/multi [c/substr-constraint
(c/param (c/tag 'fn-arity240) 0)])
)
c/substr-constraint]))]))}), 6 (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity82)
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity82) 0)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/type-op c/inner-type-of-op
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity82) 0)])
))))}), 8 (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity88)
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity88) 0)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/type-op c/inner-type-of-op
(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity88) 0)])
))))})})]
))}), 56 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity553)
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".x")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity553) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity553) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity553) 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents (c/type-op c/call-value-op
(c/param (c/tag 'fn-arity553) 1)
)
(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag 'fn-arity553) 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity554) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity554) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity553) 0)
[(c/Field (c/tag ".x"))]
)])]
)
}
c/fn-constraint
 empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag 'fn-arity552)
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".x")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity552) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity552) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity552) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity552) 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity552) 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity554) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity554) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity553) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity552) 0)
[(c/Field (c/tag ".x"))]
)])]
)
(c/ReifiedConstraint 59 (c/tag "* RecurseFinal constructor at core: 2559 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag '* RecurseFinal constructor at core: 2559 *)
(c/seq-c [c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "RecurseFinal")
{}
{c/contents c/top-type
(c/Field (c/tag ".x")) (c/param (c/tag '* RecurseFinal constructor at core: 2559 *) 1)
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")]
))}), 15 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity349)
(c/list-c [(c/multi [(c/param (c/tag 'fn-arity349) 0)
c/promise-constraint])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity349) 1)])]
c/no-tail)
;; returns
(c/multi [(c/param (c/tag 'new-p) 0)
c/promise-constraint]))}), 16 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity370)
(c/list-c [(c/multi [(c/param (c/tag 'fn-arity370) 0)
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity370) 1)])]
c/no-tail)
;; returns
(c/multi [(c/param (c/tag 'new-fut) 0)
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")]))}), 55 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity556)
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".x")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity556) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity556) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity556) 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents (c/type-op c/call-value-op
(c/param (c/tag 'fn-arity556) 1)
)
(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag 'fn-arity556) 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity557) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity557) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity556) 0)
[(c/Field (c/tag ".x"))]
)])]
)
}
c/fn-constraint
 empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag 'fn-arity555)
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".x")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity555) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity555) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity555) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity555) 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity555) 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity557) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity557) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity556) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity555) 0)
[(c/Field (c/tag ".x"))]
)])]
)
(c/ReifiedConstraint 60 (c/tag "* RecurseWith constructor at core: 2571 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag '* RecurseWith constructor at core: 2571 *)
(c/seq-c [c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "RecurseWith")
{}
{c/contents c/top-type
(c/Field (c/tag ".x")) (c/param (c/tag '* RecurseWith constructor at core: 2571 *) 1)
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")]
))}), 7 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity129)
(c/list-c [(c/multi [(c/param (c/tag 'fn-arity129) 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity129) 1)
0
))
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity129) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity129) 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity129) 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity129) 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity129) 0)
)])]
)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity129) 1)
)]))), 3 (c/fn-arity
(c/tag 'fn-arity128)
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag 'fn-arity128) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity128) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity128) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity128) 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/inner-type-of-op
(c/MaybeConstraint (c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity128) 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity128) 0)
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity3)
(c/seq-c [(c/param (c/tag 'fn-arity3) 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag 'fn-arity3) 0)))})]
))
)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity128) 2)
[c/maybe-constraint]
)]))}), 35 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity628)
(c/list-c [(c/multi [(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity641) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity640) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity639) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity638) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity637) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity636) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity635) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity634) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity633) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity632) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity631) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity630) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity629) 0)
[(c/Field (c/tag ".set-map"))]
)])
}
{c/contents c/top-type
(c/Field (c/tag ".set-map")) (c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity641) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity640) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity639) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity638) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity637) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity636) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity635) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity634) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity633) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity632) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity631) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity630) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity629) 0)
[(c/Field (c/tag ".set-map"))]
)])
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity628) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity628) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity628) 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{c/contents (c/type-op c/call-value-op
(c/param (c/tag 'fn-arity628) 1)
)
(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
(c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity641)
(c/seq-c [(c/multi [(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{c/contents c/top-type
(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity641) 0)])
(c/param (c/tag 'fn-arity641) 1)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "get")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'get)
(c/list-c [(c/param (c/tag 'get) 0)
(c/param (c/tag 'get) 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag 'get) 0)
)))})

{})
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity641) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])])
(c/param (c/tag 'fn-arity641) 1)]
))})
 empty-list c/no-symbol ""))})})
[(c/param (c/tag 'fn-arity736) 0)
(c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity120)
(c/seq-c [(c/multi [c/int-constraint
(c/param (c/tag 'fn-arity120) 0)])]
c/no-tail)
;; returns
c/int-constraint)})]
))})]
))}) 

 arg-cs [(c/vect-c [(c/vect-c [(c/IntegerConstraint 1 2147483647 -2147483648)
(c/IntegerConstraint 2 2147483647 -2147483648)]
c/no-tail)
(c/vect-c [(c/IntegerConstraint 3 2147483647 -2147483648)
(c/IntegerConstraint 5 2147483647 -2147483648)
(c/StrBuffConstraint "bogus")]
c/no-tail)
(c/vect-c [(c/IntegerConstraint 3 2147483647 -2147483648)
(c/IntegerConstraint 6 2147483647 -2147483648)]
c/no-tail)]
c/no-tail)] 

 result-type (c/NoValues [c/int-constraint
(c/StrBuffConstraint "bogus")]) 

 Conflicting assertions (1082)  at assertion-tests/bad-inner-6.toc: 8
String from:    Integer c/no-int from:
                bad-inner-6.toc: 4    
                bad-inner-6.toc: 5    
                core: 1202            
                core: 1204            
                core: 95              
                core: 97              
                                      
                                      


*** site 1076 assertion-tests/bad-function-returns-2.toc: 7 
 (new-se (fn  [s]
'Failure)) 

 target-c (c/ReifiedConstraint 107 (c/tag "* new-se constructor at assertion-tests/bad-function-returns-2.toc: 2 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag '* new-se constructor at assertion-tests/bad-function-returns-2.toc: 2 *)
(c/seq-c [c/top-type
(c/intersect c/fn-constraint
(c/coll-of-c (c/vect-c [] (c/coll-of-c c/top-type))))]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "new-se")
{}
{(c/Field (c/tag ".invoke-fn")) (c/multi [(c/intersect c/fn-constraint
(c/coll-of-c (c/vect-c [] (c/coll-of-c c/top-type))))
(c/param (c/tag '* new-se constructor at assertion-tests/bad-function-returns-2.toc: 2 *) 1)])
c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "") 

 arg-cs [(c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity759)
(c/seq-c [(c/param (c/tag 'fn-arity759) 0)]
c/no-tail)
;; returns
(c/SymbolConstraint 'Failure))})] 

 result-type (c/NoValues [(c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity759)
(c/seq-c [(c/param (c/tag 'fn-arity759) 0)]
c/no-tail)
;; returns
(c/SymbolConstraint 'Failure))})
(c/intersect c/fn-constraint
(c/coll-of-c (c/vect-c [] (c/coll-of-c c/top-type))))]) 

 Conflicting assertions (1082)  at assertion-tests/bad-function-returns-2.toc: 7
Function from    Function from
                              
                              


*** site 1076 assertion-tests/bad-vect-wrap.toc: 4 
 (map (wrap (vector ) 'bogus) inc) 

 target-c (c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{6 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity164)
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity164) 0)
(c/seq-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity164) 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity164) 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity164) 1)
)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity164) 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity164) 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity164) 0)
)])]
)])))), 3 (c/fn-arity
(c/tag 'fn-arity163)
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity163) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity163) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity163) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity163) 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity163) 2)
[(c/list-c [] c/no-tail)]
)
(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'flat-map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])
0
))
(c/param (c/tag 'flat-map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity163) 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity163) 0)
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity183)
(c/seq-c [(c/param (c/tag 'fn-arity183) 0)]
c/no-tail)
;; returns
(c/coll-of-c (c/seq-c []
(c/coll-of-c c/top-type))))})]
)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity163) 2)
[(c/list-c [] c/no-tail)]
)])
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'flat-map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])
0
))
(c/param (c/tag 'flat-map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity163) 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity163) 0)
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity183)
(c/seq-c [(c/param (c/tag 'fn-arity183) 0)]
c/no-tail)
;; returns
(c/coll-of-c (c/seq-c []
(c/coll-of-c c/top-type))))})]
)]))}), 8 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity306)
(c/list-c [(c/multi [(c/param (c/tag 'fn-arity306) 0)
(c/vect-c [] (c/coll-of-c c/top-type))
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity306) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity306) 1)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity306) 1)
)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity306) 1)
[(c/type-op c/inner-type-of-op
(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity306) 0)])
)]
)])))), 3 (c/fn-arity
(c/tag 'fn-arity305)
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity305) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity305) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity305) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity305) 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'flat-map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])
0
))
(c/param (c/tag 'flat-map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity305) 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity305) 0)
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity329)
(c/seq-c [(c/param (c/tag 'fn-arity329) 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity305) 2)
[(c/vect-c [] c/no-tail)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity330)
(c/seq-c [(c/param (c/tag 'fn-arity330) 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "conj")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'conj)
(c/list-c [(c/param (c/tag 'conj) 0)
(c/param (c/tag 'conj) 1)]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/param (c/tag 'fn-arity330) 0)
(c/param (c/tag 'fn-arity329) 0)]
))})]
))})]
)
(c/ProtoImpls
(c/tag "reverse")
(c/fn-c []
{1 (c/fn-arity
(c/tag 'reverse)
(c/list-c [(c/param (c/tag 'reverse) 0)]
c/no-tail)
;; returns
c/top-type)})

{2 (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity241)
(c/list-c [(c/multi [c/strbuff-constraint
(c/param (c/tag 'fn-arity241) 0)])]
c/no-tail)
;; returns
(c/multi [c/strbuff-constraint
(c/coll-of-c (c/multi [(c/type-op c/inner-type-of-op
(c/multi [c/strbuff-constraint
(c/param (c/tag 'fn-arity241) 0)])
)
c/substr-constraint]))]))}), 5 (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity240)
(c/list-c [(c/multi [c/substr-constraint
(c/param (c/tag 'fn-arity240) 0)])]
c/no-tail)
;; returns
(c/multi [c/strbuff-constraint
(c/coll-of-c (c/multi [(c/type-op c/inner-type-of-op
(c/multi [c/substr-constraint
(c/param (c/tag 'fn-arity240) 0)])
)
c/substr-constraint]))]))}), 6 (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity82)
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity82) 0)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/type-op c/inner-type-of-op
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity82) 0)])
))))}), 8 (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity88)
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity88) 0)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/type-op c/inner-type-of-op
(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity88) 0)])
))))})})]
))}), 56 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity553)
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".x")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity553) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity553) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity553) 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents (c/type-op c/call-value-op
(c/param (c/tag 'fn-arity553) 1)
)
(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag 'fn-arity553) 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity554) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity554) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity553) 0)
[(c/Field (c/tag ".x"))]
)])]
)
}
c/fn-constraint
 empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag 'fn-arity552)
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".x")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity552) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity552) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity552) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity552) 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity552) 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity554) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity554) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity553) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity552) 0)
[(c/Field (c/tag ".x"))]
)])]
)
(c/ReifiedConstraint 59 (c/tag "* RecurseFinal constructor at core: 2559 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag '* RecurseFinal constructor at core: 2559 *)
(c/seq-c [c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "RecurseFinal")
{}
{c/contents c/top-type
(c/Field (c/tag ".x")) (c/param (c/tag '* RecurseFinal constructor at core: 2559 *) 1)
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")]
))}), 15 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity349)
(c/list-c [(c/multi [(c/param (c/tag 'fn-arity349) 0)
c/promise-constraint])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity349) 1)])]
c/no-tail)
;; returns
(c/multi [(c/param (c/tag 'new-p) 0)
c/promise-constraint]))}), 16 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity370)
(c/list-c [(c/multi [(c/param (c/tag 'fn-arity370) 0)
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity370) 1)])]
c/no-tail)
;; returns
(c/multi [(c/param (c/tag 'new-fut) 0)
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")]))}), 55 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity556)
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".x")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity556) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity556) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity556) 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents (c/type-op c/call-value-op
(c/param (c/tag 'fn-arity556) 1)
)
(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag 'fn-arity556) 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity557) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity557) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity556) 0)
[(c/Field (c/tag ".x"))]
)])]
)
}
c/fn-constraint
 empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag 'fn-arity555)
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".x")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity555) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity555) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity555) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity555) 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity555) 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity557) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity557) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity556) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity555) 0)
[(c/Field (c/tag ".x"))]
)])]
)
(c/ReifiedConstraint 60 (c/tag "* RecurseWith constructor at core: 2571 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag '* RecurseWith constructor at core: 2571 *)
(c/seq-c [c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "RecurseWith")
{}
{c/contents c/top-type
(c/Field (c/tag ".x")) (c/param (c/tag '* RecurseWith constructor at core: 2571 *) 1)
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")]
))}), 7 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity129)
(c/list-c [(c/multi [(c/param (c/tag 'fn-arity129) 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity129) 1)
0
))
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity129) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity129) 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity129) 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity129) 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity129) 0)
)])]
)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity129) 1)
)]))), 3 (c/fn-arity
(c/tag 'fn-arity128)
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag 'fn-arity128) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity128) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity128) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity128) 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/inner-type-of-op
(c/MaybeConstraint (c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity128) 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity128) 0)
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity3)
(c/seq-c [(c/param (c/tag 'fn-arity3) 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag 'fn-arity3) 0)))})]
))
)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity128) 2)
[c/maybe-constraint]
)]))}), 35 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity628)
(c/list-c [(c/multi [(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity641) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity640) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity639) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity638) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity637) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity636) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity635) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity634) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity633) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity632) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity631) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity630) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity629) 0)
[(c/Field (c/tag ".set-map"))]
)])
}
{c/contents c/top-type
(c/Field (c/tag ".set-map")) (c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity641) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity640) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity639) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity638) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity637) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity636) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity635) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity634) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity633) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity632) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity631) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity630) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity629) 0)
[(c/Field (c/tag ".set-map"))]
)])
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity628) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity628) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity628) 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{c/contents (c/type-op c/call-value-op
(c/param (c/tag 'fn-arity628) 1)
)
(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
(c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity641)
(c/seq-c [(c/multi [(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{c/contents c/top-type
(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity641) 0)])
(c/param (c/tag 'fn-arity641) 1)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "get")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'get)
(c/list-c [(c/param (c/tag 'get) 0)
(c/param (c/tag 'get) 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag 'get) 0)
)))})

{})
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity641) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])])
(c/param (c/tag 'fn-arity641) 1)]
))})
 empty-list c/no-symbol ""))})}) 

 arg-cs [(c/vect-c [(c/SymbolConstraint 'bogus)]
c/no-tail), (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity120)
(c/seq-c [(c/multi [c/int-constraint
(c/param (c/tag 'fn-arity120) 0)])]
c/no-tail)
;; returns
c/int-constraint)})] 

 result-type (c/NoValues [c/int-constraint
(c/SymbolConstraint 'bogus)]) 

 Conflicting assertions (1082)  at assertion-tests/bad-vect-wrap.toc: 4
Symbol 'bogus from:    Integer c/no-int from:
                       core: 1204            
                       core: 95              
                       core: 97              
                                             
                                             


*** arity 1266 assertion-tests/bad-vector-of-1.toc: 2 g fn-arity761 

 pts (c/seq-c [(c/multi [(c/seq-c [] (c/coll-of-c c/int-constraint))
(c/param (c/tag 'fn-arity761) 0)])]
c/no-tail) 

 result-c c/top-type 

 body-c (c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/multi [(c/seq-c [] (c/coll-of-c c/int-constraint))
(c/param (c/tag 'fn-arity761) 0)])
(c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity762)
(c/seq-c [(c/multi [(c/sum-c [c/strbuff-constraint
c/substr-constraint])
(c/param (c/tag 'fn-arity762) 0)])]
c/no-tail)
;; returns
c/substr-constraint)})]
) 

 final-c (c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/multi [(c/seq-c [] (c/coll-of-c c/int-constraint))
(c/param (c/tag 'fn-arity761) 0)])
(c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity762)
(c/seq-c [(c/multi [(c/sum-c [c/strbuff-constraint
c/substr-constraint])
(c/param (c/tag 'fn-arity762) 0)])]
c/no-tail)
;; returns
c/substr-constraint)})]
) 

 failure-c (c/NoValues [c/strbuff-constraint
c/int-constraint]) 

 Conflicting assertions (1276)  at assertion-tests/bad-vector-of-1.toc: 2
Integer c/no-int from:    String from:
                          core: 333   
                          core: 336   
                          core: 22    
                                      
                                      


*** Could not find type constraint for 'Attr' at assertion-tests/check-trans-proto-call.toc: 3

*** site 1076 assertion-tests/butlast-inner.toc: 7 
 (map init-ints (fn  [s]
(subs s 1))) 

 target-c (c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{6 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity164)
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity164) 0)
(c/seq-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity164) 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity164) 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity164) 1)
)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity164) 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity164) 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity164) 0)
)])]
)])))), 3 (c/fn-arity
(c/tag 'fn-arity163)
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity163) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity163) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity163) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity163) 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity163) 2)
[(c/list-c [] c/no-tail)]
)
(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'flat-map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])
0
))
(c/param (c/tag 'flat-map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity163) 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity163) 0)
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity183)
(c/seq-c [(c/param (c/tag 'fn-arity183) 0)]
c/no-tail)
;; returns
(c/coll-of-c (c/seq-c []
(c/coll-of-c c/top-type))))})]
)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity163) 2)
[(c/list-c [] c/no-tail)]
)])
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'flat-map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])
0
))
(c/param (c/tag 'flat-map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity163) 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity163) 0)
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity183)
(c/seq-c [(c/param (c/tag 'fn-arity183) 0)]
c/no-tail)
;; returns
(c/coll-of-c (c/seq-c []
(c/coll-of-c c/top-type))))})]
)]))}), 8 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity306)
(c/list-c [(c/multi [(c/param (c/tag 'fn-arity306) 0)
(c/vect-c [] (c/coll-of-c c/top-type))
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity306) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity306) 1)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity306) 1)
)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity306) 1)
[(c/type-op c/inner-type-of-op
(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity306) 0)])
)]
)])))), 3 (c/fn-arity
(c/tag 'fn-arity305)
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity305) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity305) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity305) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity305) 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'flat-map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])
0
))
(c/param (c/tag 'flat-map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity305) 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity305) 0)
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity329)
(c/seq-c [(c/param (c/tag 'fn-arity329) 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity305) 2)
[(c/vect-c [] c/no-tail)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity330)
(c/seq-c [(c/param (c/tag 'fn-arity330) 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "conj")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'conj)
(c/list-c [(c/param (c/tag 'conj) 0)
(c/param (c/tag 'conj) 1)]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/param (c/tag 'fn-arity330) 0)
(c/param (c/tag 'fn-arity329) 0)]
))})]
))})]
)
(c/ProtoImpls
(c/tag "reverse")
(c/fn-c []
{1 (c/fn-arity
(c/tag 'reverse)
(c/list-c [(c/param (c/tag 'reverse) 0)]
c/no-tail)
;; returns
c/top-type)})

{2 (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity241)
(c/list-c [(c/multi [c/strbuff-constraint
(c/param (c/tag 'fn-arity241) 0)])]
c/no-tail)
;; returns
(c/multi [c/strbuff-constraint
(c/coll-of-c (c/multi [(c/type-op c/inner-type-of-op
(c/multi [c/strbuff-constraint
(c/param (c/tag 'fn-arity241) 0)])
)
c/substr-constraint]))]))}), 5 (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity240)
(c/list-c [(c/multi [c/substr-constraint
(c/param (c/tag 'fn-arity240) 0)])]
c/no-tail)
;; returns
(c/multi [c/strbuff-constraint
(c/coll-of-c (c/multi [(c/type-op c/inner-type-of-op
(c/multi [c/substr-constraint
(c/param (c/tag 'fn-arity240) 0)])
)
c/substr-constraint]))]))}), 6 (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity82)
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity82) 0)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/type-op c/inner-type-of-op
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity82) 0)])
))))}), 8 (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity88)
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity88) 0)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/type-op c/inner-type-of-op
(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity88) 0)])
))))})})]
))}), 56 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity553)
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".x")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity553) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity553) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity553) 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents (c/type-op c/call-value-op
(c/param (c/tag 'fn-arity553) 1)
)
(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag 'fn-arity553) 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity554) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity554) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity553) 0)
[(c/Field (c/tag ".x"))]
)])]
)
}
c/fn-constraint
 empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag 'fn-arity552)
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".x")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity552) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity552) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity552) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity552) 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity552) 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity554) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity554) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity553) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity552) 0)
[(c/Field (c/tag ".x"))]
)])]
)
(c/ReifiedConstraint 59 (c/tag "* RecurseFinal constructor at core: 2559 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag '* RecurseFinal constructor at core: 2559 *)
(c/seq-c [c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "RecurseFinal")
{}
{c/contents c/top-type
(c/Field (c/tag ".x")) (c/param (c/tag '* RecurseFinal constructor at core: 2559 *) 1)
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")]
))}), 15 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity349)
(c/list-c [(c/multi [(c/param (c/tag 'fn-arity349) 0)
c/promise-constraint])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity349) 1)])]
c/no-tail)
;; returns
(c/multi [(c/param (c/tag 'new-p) 0)
c/promise-constraint]))}), 16 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity370)
(c/list-c [(c/multi [(c/param (c/tag 'fn-arity370) 0)
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity370) 1)])]
c/no-tail)
;; returns
(c/multi [(c/param (c/tag 'new-fut) 0)
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")]))}), 55 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity556)
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".x")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity556) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity556) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity556) 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents (c/type-op c/call-value-op
(c/param (c/tag 'fn-arity556) 1)
)
(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag 'fn-arity556) 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity557) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity557) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity556) 0)
[(c/Field (c/tag ".x"))]
)])]
)
}
c/fn-constraint
 empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag 'fn-arity555)
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".x")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity555) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity555) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity555) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity555) 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity555) 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity557) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity557) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity556) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity555) 0)
[(c/Field (c/tag ".x"))]
)])]
)
(c/ReifiedConstraint 60 (c/tag "* RecurseWith constructor at core: 2571 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag '* RecurseWith constructor at core: 2571 *)
(c/seq-c [c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "RecurseWith")
{}
{c/contents c/top-type
(c/Field (c/tag ".x")) (c/param (c/tag '* RecurseWith constructor at core: 2571 *) 1)
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")]
))}), 7 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity129)
(c/list-c [(c/multi [(c/param (c/tag 'fn-arity129) 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity129) 1)
0
))
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity129) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity129) 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity129) 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity129) 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity129) 0)
)])]
)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity129) 1)
)]))), 3 (c/fn-arity
(c/tag 'fn-arity128)
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag 'fn-arity128) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity128) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity128) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity128) 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/inner-type-of-op
(c/MaybeConstraint (c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity128) 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity128) 0)
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity3)
(c/seq-c [(c/param (c/tag 'fn-arity3) 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag 'fn-arity3) 0)))})]
))
)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity128) 2)
[c/maybe-constraint]
)]))}), 35 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity628)
(c/list-c [(c/multi [(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity641) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity640) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity639) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity638) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity637) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity636) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity635) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity634) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity633) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity632) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity631) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity630) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity629) 0)
[(c/Field (c/tag ".set-map"))]
)])
}
{c/contents c/top-type
(c/Field (c/tag ".set-map")) (c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity641) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity640) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity639) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity638) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity637) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity636) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity635) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity634) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity633) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity632) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity631) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity630) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity629) 0)
[(c/Field (c/tag ".set-map"))]
)])
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity628) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity628) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity628) 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{c/contents (c/type-op c/call-value-op
(c/param (c/tag 'fn-arity628) 1)
)
(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
(c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity641)
(c/seq-c [(c/multi [(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{c/contents c/top-type
(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity641) 0)])
(c/param (c/tag 'fn-arity641) 1)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "get")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'get)
(c/list-c [(c/param (c/tag 'get) 0)
(c/param (c/tag 'get) 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag 'get) 0)
)))})

{})
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity641) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])])
(c/param (c/tag 'fn-arity641) 1)]
))})
 empty-list c/no-symbol ""))})}) 

 arg-cs [(c/vect-c [(c/IntegerConstraint 1 2147483647 -2147483648)
(c/IntegerConstraint 2 2147483647 -2147483648)]
c/no-tail), (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity760)
(c/seq-c [(c/multi [(c/sum-c [c/strbuff-constraint
c/substr-constraint])
(c/param (c/tag 'fn-arity760) 0)])]
c/no-tail)
;; returns
c/substr-constraint)})] 

 result-type (c/NoValues [c/strbuff-constraint
(c/IntegerConstraint 1 2147483647 -2147483648)]) 

 Conflicting assertions (1082)  at assertion-tests/butlast-inner.toc: 7
Integer 1 from:    String from:
                   core: 333   
                   core: 336   
                   core: 22    
                               
                               


*** site 1076 assertion-tests/closure-2.toc: 8 
 (foo (vector "xx") "p") 

 target-c (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity763)
(c/seq-c [(c/param (c/tag 'fn-arity763) 0)
(c/multi [c/int-constraint
(c/param (c/tag 'fn-arity763) 1)])]
c/no-tail)
;; returns
(c/seq-c [] (c/coll-of-c c/int-constraint)))}) 

 arg-cs [(c/vect-c [(c/StrBuffConstraint "xx")]
c/no-tail), (c/StrBuffConstraint "p")] 

 result-type (c/NoValues [c/int-constraint
(c/StrBuffConstraint "p")]) 

 Conflicting assertions (1082)  at assertion-tests/closure-2.toc: 8
String from:    Integer c/no-int from:
                closure-2.toc: 5      
                core: 1202            
                core: 1204            
                core: 95              
                core: 97              
                                      
                                      


*** No type named 'NoType' was found. Used at assertion-tests/comp-bad-type-1.toc: 2

*** site 1076 assertion-tests/bad-field-5.toc: 13 
 (f (Bogus 99)) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity765)
(c/seq-c [(c/multi [(c/ReifiedConstraint 0 (c/tag "field 'x-field' required")
{}
{(c/Field (c/tag ".x-field")) c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity765) 0)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag ".not-there")
(c/fn-c []
{2 (c/fn-arity
(c/tag '.not-there_setter)
(c/seq-c [(c/multi [(c/param (c/tag '.not-there_setter) 0)
(c/ReifiedConstraint 0 (c/tag "field 'not-there' required")
{}
{(c/Field (c/tag ".not-there")) c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
(c/param (c/tag '.not-there_setter) 1)]
c/no-tail)
;; returns
(c/type-op c/set-to-op
(c/param (c/tag '.not-there_setter) 0)
[[(c/Field (c/tag ".not-there"))]
(c/param (c/tag '.not-there_setter) 1)]
)), 1 (c/fn-arity
(c/tag '.not-there_getter)
(c/seq-c [(c/multi [(c/param (c/tag '.not-there_getter) 0)
(c/ReifiedConstraint 0 (c/tag "field 'not-there' required")
{}
{(c/Field (c/tag ".not-there")) c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])]
c/no-tail)
;; returns
(c/type-op c/get-from-op
(c/param (c/tag '.not-there_getter) 0)
[(c/Field (c/tag ".not-there"))]
))})

{88 (c/fn-c []
{2 (c/fn-arity
(c/tag 'Ooops-.not-there-setter)
(c/seq-c [(c/multi [(c/param (c/tag 'Ooops-.not-there-setter) 0)
(c/ReifiedConstraint 88 (c/tag "Ooops")
{(c/Field (c/tag ".not-there")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".not-there")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")])
(c/multi [(c/param (c/tag 'Ooops-.not-there-setter) 1)
c/top-type])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/set-to-op
(c/param (c/tag 'Ooops-.not-there-setter) 0)
[[(c/Field (c/tag ".not-there"))]
(c/param (c/tag 'Ooops-.not-there-setter) 1)]
)
(c/type-op c/set-to-op
(c/param (c/tag 'Ooops-.not-there-setter) 0)
[[(c/Field (c/tag ".not-there"))]
(c/param (c/tag 'Ooops-.not-there-setter) 1)]
)])), 1 (c/fn-arity
(c/tag 'Ooops-.not-there-getter)
(c/seq-c [(c/multi [(c/param (c/tag 'Ooops-.not-there-getter) 0)
(c/ReifiedConstraint 88 (c/tag "Ooops")
{(c/Field (c/tag ".not-there")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".not-there")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'Ooops-.not-there-getter) 0)
[(c/Field (c/tag ".not-there"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'Ooops-.not-there-getter) 0)
[(c/Field (c/tag ".not-there"))]
)]))})})
[(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag ".x-field")
(c/fn-c []
{2 (c/fn-arity
(c/tag '.x-field_setter)
(c/seq-c [(c/multi [(c/param (c/tag '.x-field_setter) 0)
(c/ReifiedConstraint 0 (c/tag "field 'x-field' required")
{}
{(c/Field (c/tag ".x-field")) c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
(c/param (c/tag '.x-field_setter) 1)]
c/no-tail)
;; returns
(c/type-op c/set-to-op
(c/param (c/tag '.x-field_setter) 0)
[[(c/Field (c/tag ".x-field"))]
(c/param (c/tag '.x-field_setter) 1)]
)), 1 (c/fn-arity
(c/tag '.x-field_getter)
(c/seq-c [(c/multi [(c/param (c/tag '.x-field_getter) 0)
(c/ReifiedConstraint 0 (c/tag "field 'x-field' required")
{}
{(c/Field (c/tag ".x-field")) c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])]
c/no-tail)
;; returns
(c/type-op c/get-from-op
(c/param (c/tag '.x-field_getter) 0)
[(c/Field (c/tag ".x-field"))]
))})

{100 (c/fn-c []
{2 (c/fn-arity
(c/tag 'Bogus-.x-field-setter)
(c/seq-c [(c/multi [(c/param (c/tag 'Bogus-.x-field-setter) 0)
(c/ReifiedConstraint 100 (c/tag "Bogus")
{(c/Field (c/tag ".x-field")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".x-field")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")])
(c/multi [(c/param (c/tag 'Bogus-.x-field-setter) 1)
c/top-type])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/set-to-op
(c/param (c/tag 'Bogus-.x-field-setter) 0)
[[(c/Field (c/tag ".x-field"))]
(c/param (c/tag 'Bogus-.x-field-setter) 1)]
)
(c/type-op c/set-to-op
(c/param (c/tag 'Bogus-.x-field-setter) 0)
[[(c/Field (c/tag ".x-field"))]
(c/param (c/tag 'Bogus-.x-field-setter) 1)]
)])), 1 (c/fn-arity
(c/tag 'Bogus-.x-field-getter)
(c/seq-c [(c/multi [(c/param (c/tag 'Bogus-.x-field-getter) 0)
(c/ReifiedConstraint 100 (c/tag "Bogus")
{(c/Field (c/tag ".x-field")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".x-field")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'Bogus-.x-field-getter) 0)
[(c/Field (c/tag ".x-field"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'Bogus-.x-field-getter) 0)
[(c/Field (c/tag ".x-field"))]
)]))})})
[(c/param (c/tag 'fn-arity765) 0)
(c/IntegerConstraint 3 2147483647 -2147483648)]
)]
))}) 

 arg-cs [(c/ReifiedConstraint 100 (c/tag "Bogus")
{(c/Field (c/tag ".x-field")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".x-field")) (c/IntegerConstraint 99 2147483647 -2147483648)
}
c/fn-constraint
 empty-list c/no-symbol "")] 

 result-type (c/NoValues [(c/ReifiedConstraint 0 (c/tag "field 'not-there' required")
{}
{(c/Field (c/tag ".not-there")) c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 100 (c/tag "Bogus")
{(c/Field (c/tag ".x-field")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".x-field")) (c/IntegerConstraint 3 2147483647 -2147483648)
}
c/fn-constraint
 empty-list c/no-symbol "")]) 

 Conflicting assertions (1082)  at assertion-tests/bad-field-5.toc: 13
Bogus from:    field 'not-there' required from:
                                               
                                               


*** Conflicting assertions (1570)  at assertion-tests/closure-param.toc: 4
String from:    Integer c/no-int from:
                closure-param.toc: 5  
                core: 2132            
                core: 2135            
                core: 95              
                core: 97              
                                      
                                      


*** Loaded assertion-tests/bad-function-returns-1.toc

*** site 1076 assertion-tests/closure-1.toc: 8 
 (inc p) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity120)
(c/seq-c [(c/multi [c/int-constraint
(c/param (c/tag 'fn-arity120) 0)])]
c/no-tail)
;; returns
c/int-constraint)}) 

 arg-cs [(c/multi [(c/sum-c [c/strbuff-constraint
c/substr-constraint])
(c/param (c/tag 'fn-arity770) 1)])] 

 result-type (c/NoValues [c/strbuff-constraint
c/int-constraint]) 

 Conflicting assertions (1082)  at assertion-tests/closure-1.toc: 8
Integer c/no-int from:    String from:
core: 1204                core: 333   
core: 95                  core: 336   
core: 97                  core: 22    
                                      
                                      


*** No type named 'NoType' was found. Used at assertion-tests/comp-bad-type-2.toc: 3

*** Conflicting assertions (510)  at assertion-tests/bad-list-of-1.toc: 10
Integer c/no-int from:    String from:        
bad-list-of-1.toc: 7      bad-list-of-1.toc: 4
                          core: 22            
                                              
                                              


*** arity 1266 assertion-tests/deeply-nested-vector-1.toc: 5 f fn-arity776 

 pts (c/seq-c [(c/multi [c/int-constraint
(c/param (c/tag 'fn-arity776) 0)])]
c/no-tail) 

 result-c (c/seq-c [] (c/coll-of-c (c/sum-c [c/strbuff-constraint
c/substr-constraint]))) 

 body-c (c/vect-c [] c/no-tail) 

 final-c (c/NoValues [c/strbuff-constraint
(c/vect-c [(c/StrBuffConstraint "str")]
c/no-tail)]) 

 failure-c (c/NoValues [c/strbuff-constraint
(c/vect-c [(c/StrBuffConstraint "str")]
c/no-tail)]) 

 Conflicting assertions (1276)  at assertion-tests/deeply-nested-vector-1.toc: 5
Vector from:    String from:
                core: 22    
                            
                            


*** site 1076 assertion-tests/contents-2.toc: 10 
 (g (f empty-list)) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity779)
(c/seq-c [(c/multi [(c/coll-of-c c/int-constraint)
(c/param (c/tag 'fn-arity779) 0)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{6 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity164)
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity164) 0)
(c/seq-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity164) 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity164) 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity164) 1)
)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity164) 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity164) 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity164) 0)
)])]
)])))), 3 (c/fn-arity
(c/tag 'fn-arity163)
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity163) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity163) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity163) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity163) 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity163) 2)
[(c/list-c [] c/no-tail)]
)
(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'flat-map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])
0
))
(c/param (c/tag 'flat-map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity163) 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity163) 0)
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity183)
(c/seq-c [(c/param (c/tag 'fn-arity183) 0)]
c/no-tail)
;; returns
(c/coll-of-c (c/seq-c []
(c/coll-of-c c/top-type))))})]
)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity163) 2)
[(c/list-c [] c/no-tail)]
)])
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'flat-map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])
0
))
(c/param (c/tag 'flat-map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity163) 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity163) 0)
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity183)
(c/seq-c [(c/param (c/tag 'fn-arity183) 0)]
c/no-tail)
;; returns
(c/coll-of-c (c/seq-c []
(c/coll-of-c c/top-type))))})]
)]))}), 8 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity306)
(c/list-c [(c/multi [(c/param (c/tag 'fn-arity306) 0)
(c/vect-c [] (c/coll-of-c c/top-type))
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity306) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity306) 1)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity306) 1)
)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity306) 1)
[(c/type-op c/inner-type-of-op
(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity306) 0)])
)]
)])))), 3 (c/fn-arity
(c/tag 'fn-arity305)
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity305) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity305) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity305) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity305) 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'flat-map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])
0
))
(c/param (c/tag 'flat-map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity305) 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity305) 0)
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity329)
(c/seq-c [(c/param (c/tag 'fn-arity329) 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity305) 2)
[(c/vect-c [] c/no-tail)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity330)
(c/seq-c [(c/param (c/tag 'fn-arity330) 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "conj")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'conj)
(c/list-c [(c/param (c/tag 'conj) 0)
(c/param (c/tag 'conj) 1)]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/param (c/tag 'fn-arity330) 0)
(c/param (c/tag 'fn-arity329) 0)]
))})]
))})]
)
(c/ProtoImpls
(c/tag "reverse")
(c/fn-c []
{1 (c/fn-arity
(c/tag 'reverse)
(c/list-c [(c/param (c/tag 'reverse) 0)]
c/no-tail)
;; returns
c/top-type)})

{2 (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity241)
(c/list-c [(c/multi [c/strbuff-constraint
(c/param (c/tag 'fn-arity241) 0)])]
c/no-tail)
;; returns
(c/multi [c/strbuff-constraint
(c/coll-of-c (c/multi [(c/type-op c/inner-type-of-op
(c/multi [c/strbuff-constraint
(c/param (c/tag 'fn-arity241) 0)])
)
c/substr-constraint]))]))}), 5 (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity240)
(c/list-c [(c/multi [c/substr-constraint
(c/param (c/tag 'fn-arity240) 0)])]
c/no-tail)
;; returns
(c/multi [c/strbuff-constraint
(c/coll-of-c (c/multi [(c/type-op c/inner-type-of-op
(c/multi [c/substr-constraint
(c/param (c/tag 'fn-arity240) 0)])
)
c/substr-constraint]))]))}), 6 (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity82)
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity82) 0)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/type-op c/inner-type-of-op
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity82) 0)])
))))}), 8 (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity88)
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity88) 0)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/type-op c/inner-type-of-op
(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity88) 0)])
))))})})]
))}), 56 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity553)
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".x")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity553) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity553) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity553) 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents (c/type-op c/call-value-op
(c/param (c/tag 'fn-arity553) 1)
)
(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag 'fn-arity553) 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity554) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity554) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity553) 0)
[(c/Field (c/tag ".x"))]
)])]
)
}
c/fn-constraint
 empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag 'fn-arity552)
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".x")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity552) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity552) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity552) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity552) 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity552) 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity554) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity554) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity553) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity552) 0)
[(c/Field (c/tag ".x"))]
)])]
)
(c/ReifiedConstraint 59 (c/tag "* RecurseFinal constructor at core: 2559 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag '* RecurseFinal constructor at core: 2559 *)
(c/seq-c [c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "RecurseFinal")
{}
{c/contents c/top-type
(c/Field (c/tag ".x")) (c/param (c/tag '* RecurseFinal constructor at core: 2559 *) 1)
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")]
))}), 15 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity349)
(c/list-c [(c/multi [(c/param (c/tag 'fn-arity349) 0)
c/promise-constraint])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity349) 1)])]
c/no-tail)
;; returns
(c/multi [(c/param (c/tag 'new-p) 0)
c/promise-constraint]))}), 16 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity370)
(c/list-c [(c/multi [(c/param (c/tag 'fn-arity370) 0)
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity370) 1)])]
c/no-tail)
;; returns
(c/multi [(c/param (c/tag 'new-fut) 0)
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")]))}), 55 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity556)
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".x")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity556) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity556) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity556) 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents (c/type-op c/call-value-op
(c/param (c/tag 'fn-arity556) 1)
)
(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag 'fn-arity556) 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity557) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity557) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity556) 0)
[(c/Field (c/tag ".x"))]
)])]
)
}
c/fn-constraint
 empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag 'fn-arity555)
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".x")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity555) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity555) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity555) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity555) 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity555) 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity557) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity557) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity556) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity555) 0)
[(c/Field (c/tag ".x"))]
)])]
)
(c/ReifiedConstraint 60 (c/tag "* RecurseWith constructor at core: 2571 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag '* RecurseWith constructor at core: 2571 *)
(c/seq-c [c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "RecurseWith")
{}
{c/contents c/top-type
(c/Field (c/tag ".x")) (c/param (c/tag '* RecurseWith constructor at core: 2571 *) 1)
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")]
))}), 7 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity129)
(c/list-c [(c/multi [(c/param (c/tag 'fn-arity129) 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity129) 1)
0
))
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity129) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity129) 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity129) 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity129) 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity129) 0)
)])]
)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity129) 1)
)]))), 3 (c/fn-arity
(c/tag 'fn-arity128)
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag 'fn-arity128) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity128) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity128) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity128) 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/inner-type-of-op
(c/MaybeConstraint (c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity128) 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity128) 0)
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity3)
(c/seq-c [(c/param (c/tag 'fn-arity3) 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag 'fn-arity3) 0)))})]
))
)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity128) 2)
[c/maybe-constraint]
)]))}), 35 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity628)
(c/list-c [(c/multi [(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity641) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity640) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity639) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity638) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity637) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity636) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity635) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity634) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity633) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity632) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity631) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity630) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity629) 0)
[(c/Field (c/tag ".set-map"))]
)])
}
{c/contents c/top-type
(c/Field (c/tag ".set-map")) (c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity641) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity640) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity639) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity638) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity637) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity636) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity635) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity634) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity633) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity632) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity631) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity630) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity629) 0)
[(c/Field (c/tag ".set-map"))]
)])
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity628) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity628) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity628) 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{c/contents (c/type-op c/call-value-op
(c/param (c/tag 'fn-arity628) 1)
)
(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
(c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity641)
(c/seq-c [(c/multi [(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{c/contents c/top-type
(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity641) 0)])
(c/param (c/tag 'fn-arity641) 1)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "get")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'get)
(c/list-c [(c/param (c/tag 'get) 0)
(c/param (c/tag 'get) 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag 'get) 0)
)))})

{})
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity641) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])])
(c/param (c/tag 'fn-arity641) 1)]
))})
 empty-list c/no-symbol ""))})})
[(c/param (c/tag 'fn-arity779) 0)
(c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity120)
(c/seq-c [(c/multi [c/int-constraint
(c/param (c/tag 'fn-arity120) 0)])]
c/no-tail)
;; returns
c/int-constraint)})]
))}) 

 arg-cs [(c/seq-c []
c/no-tail)] 

 result-type (c/NoValues [c/int-constraint
(c/SymbolConstraint 'bogus)]) 

 Conflicting assertions (1082)  at assertion-tests/contents-2.toc: 10
Symbol 'bogus from:    Integer c/no-int from:
contents-2.toc: 4      contents-2.toc: 7     
                       core: 1202            
                       core: 1204            
                       core: 95              
                       core: 97              
                                             
                                             


*** site 1076 assertion-tests/destruct-variadic-tail-2.toc: 14 
 (g ) 

 target-c (c/fn-c []
{c/variadic (c/fn-arity
(c/tag 'fn-arity781)
(c/seq-c [] (c/multi [(c/list-c [c/int-constraint]
(c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity781) 0)]))
;; returns
c/strbuff-constraint)}) 

 arg-cs [] 

 result-type (c/NoValues [c/no-tail
(c/ReifiedConstraint 0 (c/tag "Can not contain other values")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")]) 

 Conflicting assertions (1082)  at assertion-tests/destruct-variadic-tail-2.toc: 14
Can not contain other values from:    No Tail for sequence


*** Conflicting assertions (510)  at assertion-tests/bad-result-sum-type.toc: 8
Integer c/no-int from:        String from:
bad-result-sum-type.toc: 4                
                                          
                                          


*** Conflicting assertions (510)  at assertion-tests/bad-proto-impl.toc: 3
Maybe from:    Bog from:
core: 819               
                        
                        


*** site 1076 assertion-tests/dynamic-call-3.toc: 12 
 (inc (g f)) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity120)
(c/seq-c [(c/multi [c/int-constraint
(c/param (c/tag 'fn-arity120) 0)])]
c/no-tail)
;; returns
c/int-constraint)}) 

 arg-cs [c/strbuff-constraint] 

 result-type (c/NoValues [c/int-constraint
c/strbuff-constraint]) 

 Conflicting assertions (1082)  at assertion-tests/dynamic-call-3.toc: 12
String from:    Integer c/no-int from:
core: 1712      core: 1204            
core: 22        core: 95              
                core: 97              
                                      
                                      


*** site 1076 assertion-tests/dup-protocol-name.toc: 8 
 (pf 'x 3 3) 

 target-c (c/ProtoImpls
(c/tag "pf")
(c/fn-c []
{3 (c/fn-arity
(c/tag 'pf)
(c/list-c [(c/param (c/tag 'pf) 0)
(c/multi [c/int-constraint
(c/param (c/tag 'pf) 1)])
(c/multi [(c/sum-c [c/strbuff-constraint
c/substr-constraint])
(c/param (c/tag 'pf) 2)])]
c/no-tail)
;; returns
c/top-type)})

{}) 

 arg-cs [(c/SymbolConstraint 'x), (c/IntegerConstraint 3 2147483647 -2147483648), (c/IntegerConstraint 3 2147483647 -2147483648)] 

 result-type (c/NoValues [c/strbuff-constraint
(c/IntegerConstraint 3 2147483647 -2147483648)]) 

 Conflicting assertions (1082)  at assertion-tests/dup-protocol-name.toc: 8
Integer 3 from:    String from:
                   core: 333   
                   core: 336   
                   core: 22    
                               
                               


*** site 1076 assertion-tests/dynamic-call-2.toc: 13 
 (inc (g f)) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity120)
(c/seq-c [(c/multi [c/int-constraint
(c/param (c/tag 'fn-arity120) 0)])]
c/no-tail)
;; returns
c/int-constraint)}) 

 arg-cs [c/strbuff-constraint] 

 result-type (c/NoValues [c/int-constraint
c/strbuff-constraint]) 

 Conflicting assertions (1082)  at assertion-tests/dynamic-call-2.toc: 13
String from:    Integer c/no-int from:
core: 1709      core: 1204            
core: 1712      core: 95              
core: 22        core: 97              
                                      
                                      


*** site 1076 assertion-tests/dynamic-call-5.toc: 11 
 (map (g f) inc) 

 target-c (c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{6 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity164)
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity164) 0)
(c/seq-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity164) 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity164) 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity164) 1)
)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity164) 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity164) 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity164) 0)
)])]
)])))), 3 (c/fn-arity
(c/tag 'fn-arity163)
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity163) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity163) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity163) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity163) 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity163) 2)
[(c/list-c [] c/no-tail)]
)
(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'flat-map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])
0
))
(c/param (c/tag 'flat-map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity163) 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity163) 0)
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity183)
(c/seq-c [(c/param (c/tag 'fn-arity183) 0)]
c/no-tail)
;; returns
(c/coll-of-c (c/seq-c []
(c/coll-of-c c/top-type))))})]
)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity163) 2)
[(c/list-c [] c/no-tail)]
)])
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'flat-map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])
0
))
(c/param (c/tag 'flat-map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity163) 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity163) 0)
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity183)
(c/seq-c [(c/param (c/tag 'fn-arity183) 0)]
c/no-tail)
;; returns
(c/coll-of-c (c/seq-c []
(c/coll-of-c c/top-type))))})]
)]))}), 8 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity306)
(c/list-c [(c/multi [(c/param (c/tag 'fn-arity306) 0)
(c/vect-c [] (c/coll-of-c c/top-type))
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity306) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity306) 1)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity306) 1)
)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity306) 1)
[(c/type-op c/inner-type-of-op
(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity306) 0)])
)]
)])))), 3 (c/fn-arity
(c/tag 'fn-arity305)
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity305) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity305) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity305) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity305) 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'flat-map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])
0
))
(c/param (c/tag 'flat-map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity305) 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity305) 0)
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity329)
(c/seq-c [(c/param (c/tag 'fn-arity329) 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity305) 2)
[(c/vect-c [] c/no-tail)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity330)
(c/seq-c [(c/param (c/tag 'fn-arity330) 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "conj")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'conj)
(c/list-c [(c/param (c/tag 'conj) 0)
(c/param (c/tag 'conj) 1)]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/param (c/tag 'fn-arity330) 0)
(c/param (c/tag 'fn-arity329) 0)]
))})]
))})]
)
(c/ProtoImpls
(c/tag "reverse")
(c/fn-c []
{1 (c/fn-arity
(c/tag 'reverse)
(c/list-c [(c/param (c/tag 'reverse) 0)]
c/no-tail)
;; returns
c/top-type)})

{2 (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity241)
(c/list-c [(c/multi [c/strbuff-constraint
(c/param (c/tag 'fn-arity241) 0)])]
c/no-tail)
;; returns
(c/multi [c/strbuff-constraint
(c/coll-of-c (c/multi [(c/type-op c/inner-type-of-op
(c/multi [c/strbuff-constraint
(c/param (c/tag 'fn-arity241) 0)])
)
c/substr-constraint]))]))}), 5 (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity240)
(c/list-c [(c/multi [c/substr-constraint
(c/param (c/tag 'fn-arity240) 0)])]
c/no-tail)
;; returns
(c/multi [c/strbuff-constraint
(c/coll-of-c (c/multi [(c/type-op c/inner-type-of-op
(c/multi [c/substr-constraint
(c/param (c/tag 'fn-arity240) 0)])
)
c/substr-constraint]))]))}), 6 (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity82)
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity82) 0)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/type-op c/inner-type-of-op
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity82) 0)])
))))}), 8 (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity88)
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity88) 0)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/type-op c/inner-type-of-op
(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity88) 0)])
))))})})]
))}), 56 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity553)
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".x")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity553) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity553) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity553) 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents (c/type-op c/call-value-op
(c/param (c/tag 'fn-arity553) 1)
)
(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag 'fn-arity553) 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity554) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity554) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity553) 0)
[(c/Field (c/tag ".x"))]
)])]
)
}
c/fn-constraint
 empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag 'fn-arity552)
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".x")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity552) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity552) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity552) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity552) 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity552) 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity554) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity554) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity553) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity552) 0)
[(c/Field (c/tag ".x"))]
)])]
)
(c/ReifiedConstraint 59 (c/tag "* RecurseFinal constructor at core: 2559 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag '* RecurseFinal constructor at core: 2559 *)
(c/seq-c [c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "RecurseFinal")
{}
{c/contents c/top-type
(c/Field (c/tag ".x")) (c/param (c/tag '* RecurseFinal constructor at core: 2559 *) 1)
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")]
))}), 15 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity349)
(c/list-c [(c/multi [(c/param (c/tag 'fn-arity349) 0)
c/promise-constraint])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity349) 1)])]
c/no-tail)
;; returns
(c/multi [(c/param (c/tag 'new-p) 0)
c/promise-constraint]))}), 16 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity370)
(c/list-c [(c/multi [(c/param (c/tag 'fn-arity370) 0)
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity370) 1)])]
c/no-tail)
;; returns
(c/multi [(c/param (c/tag 'new-fut) 0)
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")]))}), 55 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity556)
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".x")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity556) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity556) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity556) 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents (c/type-op c/call-value-op
(c/param (c/tag 'fn-arity556) 1)
)
(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag 'fn-arity556) 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity557) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity557) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity556) 0)
[(c/Field (c/tag ".x"))]
)])]
)
}
c/fn-constraint
 empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag 'fn-arity555)
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".x")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity555) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity555) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity555) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity555) 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity555) 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity557) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity557) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity556) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity555) 0)
[(c/Field (c/tag ".x"))]
)])]
)
(c/ReifiedConstraint 60 (c/tag "* RecurseWith constructor at core: 2571 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag '* RecurseWith constructor at core: 2571 *)
(c/seq-c [c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "RecurseWith")
{}
{c/contents c/top-type
(c/Field (c/tag ".x")) (c/param (c/tag '* RecurseWith constructor at core: 2571 *) 1)
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")]
))}), 7 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity129)
(c/list-c [(c/multi [(c/param (c/tag 'fn-arity129) 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity129) 1)
0
))
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity129) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity129) 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity129) 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity129) 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity129) 0)
)])]
)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity129) 1)
)]))), 3 (c/fn-arity
(c/tag 'fn-arity128)
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag 'fn-arity128) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity128) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity128) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity128) 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/inner-type-of-op
(c/MaybeConstraint (c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity128) 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity128) 0)
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity3)
(c/seq-c [(c/param (c/tag 'fn-arity3) 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag 'fn-arity3) 0)))})]
))
)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity128) 2)
[c/maybe-constraint]
)]))}), 35 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity628)
(c/list-c [(c/multi [(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity641) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity640) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity639) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity638) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity637) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity636) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity635) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity634) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity633) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity632) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity631) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity630) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity629) 0)
[(c/Field (c/tag ".set-map"))]
)])
}
{c/contents c/top-type
(c/Field (c/tag ".set-map")) (c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity641) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity640) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity639) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity638) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity637) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity636) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity635) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity634) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity633) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity632) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity631) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity630) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity629) 0)
[(c/Field (c/tag ".set-map"))]
)])
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity628) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity628) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity628) 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{c/contents (c/type-op c/call-value-op
(c/param (c/tag 'fn-arity628) 1)
)
(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
(c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity641)
(c/seq-c [(c/multi [(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{c/contents c/top-type
(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity641) 0)])
(c/param (c/tag 'fn-arity641) 1)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "get")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'get)
(c/list-c [(c/param (c/tag 'get) 0)
(c/param (c/tag 'get) 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag 'get) 0)
)))})

{})
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity641) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])])
(c/param (c/tag 'fn-arity641) 1)]
))})
 empty-list c/no-symbol ""))})}) 

 arg-cs [(c/vect-c [(c/SymbolConstraint 'a)]
c/no-tail), (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity120)
(c/seq-c [(c/multi [c/int-constraint
(c/param (c/tag 'fn-arity120) 0)])]
c/no-tail)
;; returns
c/int-constraint)})] 

 result-type (c/NoValues [c/int-constraint
(c/SymbolConstraint 'a)]) 

 Conflicting assertions (1082)  at assertion-tests/dynamic-call-5.toc: 11
Symbol 'a from:          Integer c/no-int from:
dynamic-call-5.toc: 5    core: 1204            
                         core: 95              
                         core: 97              
                                               
                                               


*** site 1076 assertion-tests/dynamic-call-7.toc: 12 
 (inc (g (f 77))) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity120)
(c/seq-c [(c/multi [c/int-constraint
(c/param (c/tag 'fn-arity120) 0)])]
c/no-tail)
;; returns
c/int-constraint)}) 

 arg-cs [c/strbuff-constraint] 

 result-type (c/NoValues [c/int-constraint
c/strbuff-constraint]) 

 Conflicting assertions (1082)  at assertion-tests/dynamic-call-7.toc: 12
String from:    Integer c/no-int from:
core: 1709      core: 1204            
core: 1712      core: 95              
core: 22        core: 97              
                                      
                                      


*** site 1076 assertion-tests/dynamic-call-6.toc: 12 
 (map (g f) inc) 

 target-c (c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{6 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity164)
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity164) 0)
(c/seq-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity164) 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity164) 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity164) 1)
)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity164) 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity164) 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity164) 0)
)])]
)])))), 3 (c/fn-arity
(c/tag 'fn-arity163)
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity163) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity163) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity163) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity163) 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity163) 2)
[(c/list-c [] c/no-tail)]
)
(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'flat-map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])
0
))
(c/param (c/tag 'flat-map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity163) 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity163) 0)
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity183)
(c/seq-c [(c/param (c/tag 'fn-arity183) 0)]
c/no-tail)
;; returns
(c/coll-of-c (c/seq-c []
(c/coll-of-c c/top-type))))})]
)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity163) 2)
[(c/list-c [] c/no-tail)]
)])
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'flat-map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])
0
))
(c/param (c/tag 'flat-map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity163) 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity163) 0)
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity183)
(c/seq-c [(c/param (c/tag 'fn-arity183) 0)]
c/no-tail)
;; returns
(c/coll-of-c (c/seq-c []
(c/coll-of-c c/top-type))))})]
)]))}), 8 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity306)
(c/list-c [(c/multi [(c/param (c/tag 'fn-arity306) 0)
(c/vect-c [] (c/coll-of-c c/top-type))
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity306) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity306) 1)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity306) 1)
)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity306) 1)
[(c/type-op c/inner-type-of-op
(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity306) 0)])
)]
)])))), 3 (c/fn-arity
(c/tag 'fn-arity305)
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity305) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity305) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity305) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity305) 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'flat-map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])
0
))
(c/param (c/tag 'flat-map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity305) 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity305) 0)
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity329)
(c/seq-c [(c/param (c/tag 'fn-arity329) 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity305) 2)
[(c/vect-c [] c/no-tail)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity330)
(c/seq-c [(c/param (c/tag 'fn-arity330) 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "conj")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'conj)
(c/list-c [(c/param (c/tag 'conj) 0)
(c/param (c/tag 'conj) 1)]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/param (c/tag 'fn-arity330) 0)
(c/param (c/tag 'fn-arity329) 0)]
))})]
))})]
)
(c/ProtoImpls
(c/tag "reverse")
(c/fn-c []
{1 (c/fn-arity
(c/tag 'reverse)
(c/list-c [(c/param (c/tag 'reverse) 0)]
c/no-tail)
;; returns
c/top-type)})

{2 (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity241)
(c/list-c [(c/multi [c/strbuff-constraint
(c/param (c/tag 'fn-arity241) 0)])]
c/no-tail)
;; returns
(c/multi [c/strbuff-constraint
(c/coll-of-c (c/multi [(c/type-op c/inner-type-of-op
(c/multi [c/strbuff-constraint
(c/param (c/tag 'fn-arity241) 0)])
)
c/substr-constraint]))]))}), 5 (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity240)
(c/list-c [(c/multi [c/substr-constraint
(c/param (c/tag 'fn-arity240) 0)])]
c/no-tail)
;; returns
(c/multi [c/strbuff-constraint
(c/coll-of-c (c/multi [(c/type-op c/inner-type-of-op
(c/multi [c/substr-constraint
(c/param (c/tag 'fn-arity240) 0)])
)
c/substr-constraint]))]))}), 6 (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity82)
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity82) 0)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/type-op c/inner-type-of-op
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity82) 0)])
))))}), 8 (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity88)
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity88) 0)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/type-op c/inner-type-of-op
(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity88) 0)])
))))})})]
))}), 56 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity553)
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".x")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity553) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity553) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity553) 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents (c/type-op c/call-value-op
(c/param (c/tag 'fn-arity553) 1)
)
(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag 'fn-arity553) 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity554) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity554) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity553) 0)
[(c/Field (c/tag ".x"))]
)])]
)
}
c/fn-constraint
 empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag 'fn-arity552)
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".x")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity552) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity552) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity552) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity552) 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity552) 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity554) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity554) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity553) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity552) 0)
[(c/Field (c/tag ".x"))]
)])]
)
(c/ReifiedConstraint 59 (c/tag "* RecurseFinal constructor at core: 2559 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag '* RecurseFinal constructor at core: 2559 *)
(c/seq-c [c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "RecurseFinal")
{}
{c/contents c/top-type
(c/Field (c/tag ".x")) (c/param (c/tag '* RecurseFinal constructor at core: 2559 *) 1)
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")]
))}), 15 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity349)
(c/list-c [(c/multi [(c/param (c/tag 'fn-arity349) 0)
c/promise-constraint])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity349) 1)])]
c/no-tail)
;; returns
(c/multi [(c/param (c/tag 'new-p) 0)
c/promise-constraint]))}), 16 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity370)
(c/list-c [(c/multi [(c/param (c/tag 'fn-arity370) 0)
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity370) 1)])]
c/no-tail)
;; returns
(c/multi [(c/param (c/tag 'new-fut) 0)
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")]))}), 55 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity556)
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".x")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity556) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity556) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity556) 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents (c/type-op c/call-value-op
(c/param (c/tag 'fn-arity556) 1)
)
(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag 'fn-arity556) 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity557) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity557) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity556) 0)
[(c/Field (c/tag ".x"))]
)])]
)
}
c/fn-constraint
 empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag 'fn-arity555)
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".x")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity555) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity555) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity555) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity555) 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity555) 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity557) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity557) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity556) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity555) 0)
[(c/Field (c/tag ".x"))]
)])]
)
(c/ReifiedConstraint 60 (c/tag "* RecurseWith constructor at core: 2571 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag '* RecurseWith constructor at core: 2571 *)
(c/seq-c [c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "RecurseWith")
{}
{c/contents c/top-type
(c/Field (c/tag ".x")) (c/param (c/tag '* RecurseWith constructor at core: 2571 *) 1)
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")]
))}), 7 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity129)
(c/list-c [(c/multi [(c/param (c/tag 'fn-arity129) 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity129) 1)
0
))
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity129) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity129) 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity129) 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity129) 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity129) 0)
)])]
)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity129) 1)
)]))), 3 (c/fn-arity
(c/tag 'fn-arity128)
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag 'fn-arity128) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity128) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity128) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity128) 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/inner-type-of-op
(c/MaybeConstraint (c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity128) 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity128) 0)
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity3)
(c/seq-c [(c/param (c/tag 'fn-arity3) 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag 'fn-arity3) 0)))})]
))
)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity128) 2)
[c/maybe-constraint]
)]))}), 35 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity628)
(c/list-c [(c/multi [(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity641) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity640) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity639) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity638) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity637) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity636) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity635) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity634) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity633) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity632) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity631) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity630) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity629) 0)
[(c/Field (c/tag ".set-map"))]
)])
}
{c/contents c/top-type
(c/Field (c/tag ".set-map")) (c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity641) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity640) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity639) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity638) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity637) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity636) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity635) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity634) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity633) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity632) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity631) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity630) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity629) 0)
[(c/Field (c/tag ".set-map"))]
)])
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity628) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity628) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity628) 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{c/contents (c/type-op c/call-value-op
(c/param (c/tag 'fn-arity628) 1)
)
(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
(c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity641)
(c/seq-c [(c/multi [(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{c/contents c/top-type
(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity641) 0)])
(c/param (c/tag 'fn-arity641) 1)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "get")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'get)
(c/list-c [(c/param (c/tag 'get) 0)
(c/param (c/tag 'get) 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag 'get) 0)
)))})

{})
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity641) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])])
(c/param (c/tag 'fn-arity641) 1)]
))})
 empty-list c/no-symbol ""))})}) 

 arg-cs [(c/vect-c [(c/SymbolConstraint 'a)]
c/no-tail), (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity120)
(c/seq-c [(c/multi [c/int-constraint
(c/param (c/tag 'fn-arity120) 0)])]
c/no-tail)
;; returns
c/int-constraint)})] 

 result-type (c/NoValues [c/int-constraint
(c/SymbolConstraint 'a)]) 

 Conflicting assertions (1082)  at assertion-tests/dynamic-call-6.toc: 12
Symbol 'a from:          Integer c/no-int from:
dynamic-call-6.toc: 3    core: 1204            
                         core: 95              
                         core: 97              
                                               
                                               


*** site 1076 assertion-tests/dynamic-call-9.toc: 6 
 (f (reify c/no-int 
{Function {invoke [invoke [x y]
(inc y)]}})) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity796)
(c/seq-c [(c/param (c/tag 'fn-arity796) 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity796) 0)
[(c/SymbolConstraint 'a)]
))}) 

 arg-cs [(c/ReifiedConstraint 142 (c/tag "reified value at assertion-tests/dynamic-call-9.toc: 7")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity797)
(c/seq-c [(c/param (c/tag 'fn-arity797) 0)
(c/multi [c/int-constraint
(c/param (c/tag 'fn-arity797) 1)])]
c/no-tail)
;; returns
c/int-constraint)})
 empty-list c/no-symbol "")] 

 result-type (c/NoValues [c/int-constraint
(c/SymbolConstraint 'a)]) 

 Conflicting assertions (1082)  at assertion-tests/dynamic-call-9.toc: 6
Symbol 'a from:          Integer c/no-int from:
dynamic-call-9.toc: 3    core: 1202            
                         core: 1204            
                         core: 95              
                         core: 97              
                                               
                                               


*** site 1076 assertion-tests/dynamic-field-type-12.toc: 8 
 (inc (.x (f (RecurseFinal 'a)))) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity120)
(c/seq-c [(c/multi [c/int-constraint
(c/param (c/tag 'fn-arity120) 0)])]
c/no-tail)
;; returns
c/int-constraint)}) 

 arg-cs [(c/StrBuffConstraint "string")] 

 result-type (c/NoValues [c/int-constraint
(c/StrBuffConstraint "string")]) 

 Conflicting assertions (1082)  at assertion-tests/dynamic-field-type-12.toc: 8
String from:    Integer c/no-int from:
                core: 1204            
                core: 95              
                core: 97              
                                      
                                      


*** No type named 'not-type' was found. Used at assertion-tests/bad-type-comp.toc: 14

*** site 1076 assertion-tests/closure-constraint.toc: 21 
 (f (Slider ) 1) 

 target-c (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity803)
(c/seq-c [(c/multi [(c/ReifiedConstraint 140 (c/tag "Slider")
{}
{c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity803) 0)])
(c/multi [(c/ReifiedConstraint 0 (c/tag "field 'nope' required")
{}
{(c/Field (c/tag ".nope")) c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity803) 1)])]
c/no-tail)
;; returns
(c/fn-c []
{0 (c/fn-arity
(c/tag 'fn-arity804)
(c/seq-c [] c/no-tail)
;; returns
c/int-constraint)}))}) 

 arg-cs [(c/ReifiedConstraint 140 (c/tag "Slider")
{}
{c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol ""), (c/IntegerConstraint 1 2147483647 -2147483648)] 

 result-type (c/NoValues [(c/ReifiedConstraint 0 (c/tag "field 'nope' required")
{}
{(c/Field (c/tag ".nope")) c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/IntegerConstraint 1 2147483647 -2147483648)]) 

 Conflicting assertions (1082)  at assertion-tests/closure-constraint.toc: 21
Integer 1 from:    field 'nope' required from:
                   closure-constraint.toc: 18 
                   closure-constraint.toc: 12 
                                              
                                              


*** site 1076 assertion-tests/bad-setter-call-1.toc: 15 
 (.xs (Boogie (vector 1 2 3)) (vector 1 2 'plop)) 

 target-c (c/ProtoImpls
(c/tag ".xs")
(c/fn-c []
{2 (c/fn-arity
(c/tag '.xs_setter)
(c/seq-c [(c/multi [(c/param (c/tag '.xs_setter) 0)
(c/ReifiedConstraint 0 (c/tag "field 'xs' required")
{}
{(c/Field (c/tag ".xs")) c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
(c/param (c/tag '.xs_setter) 1)]
c/no-tail)
;; returns
(c/type-op c/set-to-op
(c/param (c/tag '.xs_setter) 0)
[[(c/Field (c/tag ".xs"))]
(c/param (c/tag '.xs_setter) 1)]
)), 1 (c/fn-arity
(c/tag '.xs_getter)
(c/seq-c [(c/multi [(c/param (c/tag '.xs_getter) 0)
(c/ReifiedConstraint 0 (c/tag "field 'xs' required")
{}
{(c/Field (c/tag ".xs")) c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])]
c/no-tail)
;; returns
(c/type-op c/get-from-op
(c/param (c/tag '.xs_getter) 0)
[(c/Field (c/tag ".xs"))]
))})

{135 (c/fn-c []
{2 (c/fn-arity
(c/tag 'Boogie-.xs-setter)
(c/seq-c [(c/multi [(c/param (c/tag 'Boogie-.xs-setter) 0)
(c/ReifiedConstraint 135 (c/tag "Boogie")
{(c/Field (c/tag ".xs")) (c/seq-c [] (c/coll-of-c c/int-constraint))
}
{c/contents c/top-type
(c/Field (c/tag ".xs")) (c/seq-c [] (c/coll-of-c c/int-constraint))
}
c/fn-constraint
 empty-list c/no-symbol "")])
(c/multi [(c/param (c/tag 'Boogie-.xs-setter) 1)
(c/seq-c [] (c/coll-of-c c/int-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/set-to-op
(c/param (c/tag 'Boogie-.xs-setter) 0)
[[(c/Field (c/tag ".xs"))]
(c/param (c/tag 'Boogie-.xs-setter) 1)]
)
(c/type-op c/set-to-op
(c/param (c/tag 'Boogie-.xs-setter) 0)
[[(c/Field (c/tag ".xs"))]
(c/param (c/tag 'Boogie-.xs-setter) 1)]
)])), 1 (c/fn-arity
(c/tag 'Boogie-.xs-getter)
(c/seq-c [(c/multi [(c/param (c/tag 'Boogie-.xs-getter) 0)
(c/ReifiedConstraint 135 (c/tag "Boogie")
{(c/Field (c/tag ".xs")) (c/seq-c [] (c/coll-of-c c/int-constraint))
}
{c/contents c/top-type
(c/Field (c/tag ".xs")) (c/seq-c [] (c/coll-of-c c/int-constraint))
}
c/fn-constraint
 empty-list c/no-symbol "")])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'Boogie-.xs-getter) 0)
[(c/Field (c/tag ".xs"))]
)
(c/seq-c [] (c/coll-of-c c/int-constraint))]))})}) 

 arg-cs [(c/ReifiedConstraint 135 (c/tag "Boogie")
{(c/Field (c/tag ".xs")) (c/seq-c [] (c/coll-of-c c/int-constraint))
}
{c/contents c/top-type
(c/Field (c/tag ".xs")) (c/vect-c [(c/IntegerConstraint 1 2147483647 -2147483648)
(c/IntegerConstraint 2 2147483647 -2147483648)
(c/IntegerConstraint 3 2147483647 -2147483648)]
c/no-tail)
}
c/fn-constraint
 empty-list c/no-symbol ""), (c/vect-c [(c/IntegerConstraint 1 2147483647 -2147483648)
(c/IntegerConstraint 2 2147483647 -2147483648)
(c/SymbolConstraint 'plop)]
c/no-tail)] 

 result-type (c/NoValues [c/int-constraint
(c/SymbolConstraint 'plop)]) 

 Conflicting assertions (1082)  at assertion-tests/bad-setter-call-1.toc: 15
Symbol 'plop from:    Integer c/no-int from:
                                            
                                            


*** site 1076 assertion-tests/constructor-param-2.toc: 10 
 (f (str 'symbol)) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity806)
(c/seq-c [(c/multi [c/sym-constraint
(c/param (c/tag 'fn-arity806) 0)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 124 (c/tag "SomeType")
{(c/Field (c/tag ".a")) c/sym-constraint
(c/Field (c/tag ".b")) (c/sum-c [c/strbuff-constraint
c/substr-constraint])
}
{c/contents c/top-type
(c/Field (c/tag ".a")) (c/multi [c/sym-constraint
(c/param (c/tag 'fn-arity806) 0)])
(c/Field (c/tag ".b")) (c/StrBuffConstraint "9")
}
c/fn-constraint
 empty-list c/no-symbol ""))}) 

 arg-cs [c/strbuff-constraint] 

 result-type (c/NoValues [c/sym-constraint
c/strbuff-constraint]) 

 Conflicting assertions (1082)  at assertion-tests/constructor-param-2.toc: 10
String from:    Symbol c/no-symbol from:  
core: 1712      constructor-param-2.toc: 7
core: 22        constructor-param-2.toc: 3
                                          
                                          


*** site 1076 assertion-tests/constructor-param-1.toc: 7 
 (SomeType (str 'symbol) "9") 

 target-c (c/ReifiedConstraint 127 (c/tag "* SomeType constructor at assertion-tests/constructor-param-1.toc: 2 *")
{}
{}
(c/fn-c []
{3 (c/fn-arity
(c/tag '* SomeType constructor at assertion-tests/constructor-param-1.toc: 2 *)
(c/seq-c [c/top-type
c/sym-constraint
(c/sum-c [c/strbuff-constraint
c/substr-constraint])]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "SomeType")
{}
{c/contents c/top-type
(c/Field (c/tag ".a")) (c/multi [c/sym-constraint
(c/param (c/tag '* SomeType constructor at assertion-tests/constructor-param-1.toc: 2 *) 1)])
(c/Field (c/tag ".b")) (c/multi [(c/sum-c [c/strbuff-constraint
c/substr-constraint])
(c/param (c/tag '* SomeType constructor at assertion-tests/constructor-param-1.toc: 2 *) 2)])
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "") 

 arg-cs [c/strbuff-constraint, (c/StrBuffConstraint "9")] 

 result-type (c/NoValues [c/sym-constraint
c/strbuff-constraint]) 

 Conflicting assertions (1082)  at assertion-tests/constructor-param-1.toc: 7
String from:    Symbol c/no-symbol from:
core: 1712                              
core: 22                                
                                        
                                        


*** site 1076 assertion-tests/constructor-param-3.toc: 10 
 (f (vector )) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity808)
(c/seq-c [(c/multi [(c/seq-c [c/top-type]
(c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity808) 0)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 129 (c/tag "SomeType")
{(c/Field (c/tag ".a")) (c/seq-c [c/top-type]
(c/coll-of-c c/top-type))
(c/Field (c/tag ".b")) (c/sum-c [c/strbuff-constraint
c/substr-constraint])
}
{c/contents c/top-type
(c/Field (c/tag ".a")) (c/multi [(c/seq-c [c/top-type]
(c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity808) 0)])
(c/Field (c/tag ".b")) (c/StrBuffConstraint "9")
}
c/fn-constraint
 empty-list c/no-symbol ""))}) 

 arg-cs [(c/vect-c [] c/no-tail)] 

 result-type (c/NoValues [c/no-tail
(c/ReifiedConstraint 0 (c/tag "Can not contain other values")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")]) 

 Conflicting assertions (1082)  at assertion-tests/constructor-param-3.toc: 10
Can not contain other values from:    No Tail for sequence


*** arity 1266 assertion-tests/bad-return-value.toc: 21 b fn-arity807 

 pts (c/seq-c [(c/param (c/tag 'fn-arity807) 0)]
c/no-tail) 

 result-c (c/vect-c [] (c/coll-of-c c/top-type)) 

 body-c (c/sum-c [(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'flat-map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])
0
))
(c/param (c/tag 'flat-map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/param (c/tag 'wrap334) 0)
(c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity416)
(c/seq-c [(c/param (c/tag 'fn-arity416) 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag 'fn-arity416) 0)))})]
)
(c/MaybeConstraint (c/sum-c [(c/IntegerConstraint 1 2147483647 -2147483648)
(c/IntegerConstraint 2 2147483647 -2147483648)
(c/IntegerConstraint 4 2147483647 -2147483648)]))])
(c/MaybeConstraint (c/sum-c [(c/IntegerConstraint 1 2147483647 -2147483648)
(c/IntegerConstraint 2 2147483647 -2147483648)
(c/IntegerConstraint 4 2147483647 -2147483648)]))]) 

 final-c (c/NoValues [(c/MaybeConstraint (c/sum-c [(c/IntegerConstraint 1 2147483647 -2147483648)
(c/IntegerConstraint 2 2147483647 -2147483648)
(c/IntegerConstraint 4 2147483647 -2147483648)]))
(c/vect-c [] (c/coll-of-c c/top-type))]) 

 failure-c (c/NoValues [(c/MaybeConstraint (c/sum-c [(c/IntegerConstraint 1 2147483647 -2147483648)
(c/IntegerConstraint 2 2147483647 -2147483648)
(c/IntegerConstraint 4 2147483647 -2147483648)]))
(c/vect-c [] (c/coll-of-c c/top-type))]) 

 Conflicting assertions (1276)  at assertion-tests/bad-return-value.toc: 21
Vector from:    Maybe from:
                core: 2188 
                core: 2189 
                           
                           


*** site 1076 assertion-tests/dynamic-field-type-5.toc: 9 
 (inc (.x (f (RecurseWith 9) 'q))) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity120)
(c/seq-c [(c/multi [c/int-constraint
(c/param (c/tag 'fn-arity120) 0)])]
c/no-tail)
;; returns
c/int-constraint)}) 

 arg-cs [(c/SymbolConstraint 'q)] 

 result-type (c/NoValues [c/int-constraint
(c/SymbolConstraint 'q)]) 

 Conflicting assertions (1082)  at assertion-tests/dynamic-field-type-5.toc: 9
Symbol 'q from:    Integer c/no-int from:
                   core: 1204            
                   core: 95              
                   core: 97              
                                         
                                         


*** site 1076 assertion-tests/dynamic-field-type-6.toc: 8 
 (inc (.x (f 'q (RecurseWith 9)))) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity120)
(c/seq-c [(c/multi [c/int-constraint
(c/param (c/tag 'fn-arity120) 0)])]
c/no-tail)
;; returns
c/int-constraint)}) 

 arg-cs [(c/SymbolConstraint 'q)] 

 result-type (c/NoValues [c/int-constraint
(c/SymbolConstraint 'q)]) 

 Conflicting assertions (1082)  at assertion-tests/dynamic-field-type-6.toc: 8
Symbol 'q from:    Integer c/no-int from:
                   core: 1204            
                   core: 95              
                   core: 97              
                                         
                                         


*** site 1076 assertion-tests/dynamic-field-type-1.toc: 5 
 (inc (.x (AType 'x))) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity120)
(c/seq-c [(c/multi [c/int-constraint
(c/param (c/tag 'fn-arity120) 0)])]
c/no-tail)
;; returns
c/int-constraint)}) 

 arg-cs [(c/SymbolConstraint 'x)] 

 result-type (c/NoValues [c/int-constraint
(c/SymbolConstraint 'x)]) 

 Conflicting assertions (1082)  at assertion-tests/dynamic-field-type-1.toc: 5
Symbol 'x from:    Integer c/no-int from:
                   core: 1204            
                   core: 95              
                   core: 97              
                                         
                                         


*** site 1076 assertion-tests/dynamic-field-type-4.toc: 11 
 (inc (.x (f (AType 9)))) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity120)
(c/seq-c [(c/multi [c/int-constraint
(c/param (c/tag 'fn-arity120) 0)])]
c/no-tail)
;; returns
c/int-constraint)}) 

 arg-cs [(c/SymbolConstraint 'x)] 

 result-type (c/NoValues [c/int-constraint
(c/SymbolConstraint 'x)]) 

 Conflicting assertions (1082)  at assertion-tests/dynamic-field-type-4.toc: 11
Symbol 'x from:                Integer c/no-int from:
dynamic-field-type-4.toc: 5    core: 1204            
                               core: 95              
                               core: 97              
                                                     
                                                     


*** site 1076 assertion-tests/dynamic-field-type-15.toc: 13 
 (inc (.y (f (AType 'a 'b)))) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity120)
(c/seq-c [(c/multi [c/int-constraint
(c/param (c/tag 'fn-arity120) 0)])]
c/no-tail)
;; returns
c/int-constraint)}) 

 arg-cs [(c/StrBuffConstraint "string")] 

 result-type (c/NoValues [c/int-constraint
(c/StrBuffConstraint "string")]) 

 Conflicting assertions (1082)  at assertion-tests/dynamic-field-type-15.toc: 13
String from:    Integer c/no-int from:
                core: 1204            
                core: 95              
                core: 97              
                                      
                                      


*** site 1076 assertion-tests/dynamic-field-type-2.toc: 8 
 (inc (.x (.x (AType 9) 'x))) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity120)
(c/seq-c [(c/multi [c/int-constraint
(c/param (c/tag 'fn-arity120) 0)])]
c/no-tail)
;; returns
c/int-constraint)}) 

 arg-cs [(c/SymbolConstraint 'x)] 

 result-type (c/NoValues [c/int-constraint
(c/SymbolConstraint 'x)]) 

 Conflicting assertions (1082)  at assertion-tests/dynamic-field-type-2.toc: 8
Symbol 'x from:    Integer c/no-int from:
                   core: 1204            
                   core: 95              
                   core: 97              
                                         
                                         


*** site 1076 assertion-tests/dynamic-field-type-3.toc: 8 
 (inc (.x (.x (apply AType (vector 9)) 'x))) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity120)
(c/seq-c [(c/multi [c/int-constraint
(c/param (c/tag 'fn-arity120) 0)])]
c/no-tail)
;; returns
c/int-constraint)}) 

 arg-cs [(c/SymbolConstraint 'x)] 

 result-type (c/NoValues [c/int-constraint
(c/SymbolConstraint 'x)]) 

 Conflicting assertions (1082)  at assertion-tests/dynamic-field-type-3.toc: 8
Symbol 'x from:    Integer c/no-int from:
                   core: 1204            
                   core: 95              
                   core: 97              
                                         
                                         


*** site 1076 assertion-tests/dynamic-field-type-19.toc: 13 
 (inc (.x (f (AType 'a 'b)))) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity120)
(c/seq-c [(c/multi [c/int-constraint
(c/param (c/tag 'fn-arity120) 0)])]
c/no-tail)
;; returns
c/int-constraint)}) 

 arg-cs [(c/SymbolConstraint 'bogus)] 

 result-type (c/NoValues [c/int-constraint
(c/SymbolConstraint 'bogus)]) 

 Conflicting assertions (1082)  at assertion-tests/dynamic-field-type-19.toc: 13
Symbol 'bogus from:             Integer c/no-int from:
dynamic-field-type-19.toc: 9    core: 1204            
                                core: 95              
                                core: 97              
                                                      
                                                      


*** site 1076 assertion-tests/dynamic-field-type-17.toc: 11 
 (inc (.x (f (AType 'a 'b)))) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity120)
(c/seq-c [(c/multi [c/int-constraint
(c/param (c/tag 'fn-arity120) 0)])]
c/no-tail)
;; returns
c/int-constraint)}) 

 arg-cs [(c/SymbolConstraint 'bogus)] 

 result-type (c/NoValues [c/int-constraint
(c/SymbolConstraint 'bogus)]) 

 Conflicting assertions (1082)  at assertion-tests/dynamic-field-type-17.toc: 11
Symbol 'bogus from:             Integer c/no-int from:
dynamic-field-type-17.toc: 7    core: 1204            
                                core: 95              
                                core: 97              
                                                      
                                                      


*** Loaded assertion-tests/extract-type-failure.toc

*** site 1076 assertion-tests/dynamic-proto-param-1.toc: 11 
 (inc (dorf (AType 99) 'nope)) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity120)
(c/seq-c [(c/multi [c/int-constraint
(c/param (c/tag 'fn-arity120) 0)])]
c/no-tail)
;; returns
c/int-constraint)}) 

 arg-cs [(c/SymbolConstraint 'nope)] 

 result-type (c/NoValues [c/int-constraint
(c/SymbolConstraint 'nope)]) 

 Conflicting assertions (1082)  at assertion-tests/dynamic-proto-param-1.toc: 11
Symbol 'nope from:    Integer c/no-int from:
                      core: 1204            
                      core: 95              
                      core: 97              
                                            
                                            


*** site 1076 assertion-tests/incompatible-tails.toc: 17 
 (g ys) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity818)
(c/seq-c [(c/multi [(c/seq-c [c/int-constraint
(c/sum-c [c/strbuff-constraint
c/substr-constraint])
c/top-type]
(c/coll-of-c (c/sum-c [c/strbuff-constraint
c/substr-constraint])))
(c/param (c/tag 'fn-arity818) 0)])]
c/no-tail)
;; returns
c/substr-constraint)}) 

 arg-cs [(c/multi [(c/seq-c [c/int-constraint
(c/sum-c [c/strbuff-constraint
c/substr-constraint])
c/top-type]
(c/coll-of-c c/int-constraint))
(c/param (c/tag 'fn-arity820) 0)])] 

 result-type (c/NoValues [c/strbuff-constraint
c/int-constraint]) 

 Conflicting assertions (1082)  at assertion-tests/incompatible-tails.toc: 17
Integer c/no-int from:       String from:              
incompatible-tails.toc: 2    incompatible-tails.toc: 9 
incompatible-tails.toc: 3    incompatible-tails.toc: 10
incompatible-tails.toc: 4    incompatible-tails.toc: 11
core: 1202                   core: 333                 
core: 1204                   core: 336                 
core: 95                     core: 22                  
core: 97                                               
                                                       
                                                       


*** Conflicting assertions (706)  at assertion-tests/insufficient-static-elements-1.toc: 6
Can not contain other values from:    No Tail for sequence


*** site 1076 assertion-tests/dynamic-field-type-18.toc: 28 
 (inc (.x (.z (f 'wur (Second 's (Third 9)) (Second 's (Third 9)) 'bogus)))) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity120)
(c/seq-c [(c/multi [c/int-constraint
(c/param (c/tag 'fn-arity120) 0)])]
c/no-tail)
;; returns
c/int-constraint)}) 

 arg-cs [(c/SymbolConstraint 'bogus)] 

 result-type (c/NoValues [c/int-constraint
(c/SymbolConstraint 'bogus)]) 

 Conflicting assertions (1082)  at assertion-tests/dynamic-field-type-18.toc: 28
Symbol 'bogus from:    Integer c/no-int from:
                       core: 1204            
                       core: 95              
                       core: 97              
                                             
                                             


*** showing assertion-tests/inner-drop.toc: 4 (vector 1 3 5 88 99) 
 (c/vect-c [(c/IntegerConstraint 1 2147483647 -2147483648)
(c/IntegerConstraint 3 2147483647 -2147483648)
(c/IntegerConstraint 5 2147483647 -2147483648)
(c/IntegerConstraint 88 2147483647 -2147483648)
(c/IntegerConstraint 99 2147483647 -2147483648)]
c/no-tail)

*** showing assertion-tests/inner-drop.toc: 6 (map (vector 1 3 5 88 99) str) 
 (c/vect-c [] (c/coll-of-c c/strbuff-constraint))

*** showing assertion-tests/inner-drop.toc: 8 (drop (map (vector 1 3 5 88 99) str) 2) 
 (c/coll-of-c c/strbuff-constraint)

*** site 1076 assertion-tests/inner-drop.toc: 9 
 (map (show-type (drop (show-type (map (show-type (vector 1 3 5 88 99)) str)) 2)) inc) 

 target-c (c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{6 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity164)
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity164) 0)
(c/seq-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity164) 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity164) 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity164) 1)
)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity164) 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity164) 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity164) 0)
)])]
)])))), 3 (c/fn-arity
(c/tag 'fn-arity163)
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity163) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity163) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity163) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity163) 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity163) 2)
[(c/list-c [] c/no-tail)]
)
(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'flat-map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])
0
))
(c/param (c/tag 'flat-map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity163) 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity163) 0)
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity183)
(c/seq-c [(c/param (c/tag 'fn-arity183) 0)]
c/no-tail)
;; returns
(c/coll-of-c (c/seq-c []
(c/coll-of-c c/top-type))))})]
)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity163) 2)
[(c/list-c [] c/no-tail)]
)])
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'flat-map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])
0
))
(c/param (c/tag 'flat-map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity163) 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity163) 0)
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity183)
(c/seq-c [(c/param (c/tag 'fn-arity183) 0)]
c/no-tail)
;; returns
(c/coll-of-c (c/seq-c []
(c/coll-of-c c/top-type))))})]
)]))}), 8 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity306)
(c/list-c [(c/multi [(c/param (c/tag 'fn-arity306) 0)
(c/vect-c [] (c/coll-of-c c/top-type))
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity306) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity306) 1)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity306) 1)
)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity306) 1)
[(c/type-op c/inner-type-of-op
(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity306) 0)])
)]
)])))), 3 (c/fn-arity
(c/tag 'fn-arity305)
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity305) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity305) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity305) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity305) 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'flat-map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])
0
))
(c/param (c/tag 'flat-map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity305) 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity305) 0)
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity329)
(c/seq-c [(c/param (c/tag 'fn-arity329) 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity305) 2)
[(c/vect-c [] c/no-tail)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity330)
(c/seq-c [(c/param (c/tag 'fn-arity330) 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "conj")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'conj)
(c/list-c [(c/param (c/tag 'conj) 0)
(c/param (c/tag 'conj) 1)]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/param (c/tag 'fn-arity330) 0)
(c/param (c/tag 'fn-arity329) 0)]
))})]
))})]
)
(c/ProtoImpls
(c/tag "reverse")
(c/fn-c []
{1 (c/fn-arity
(c/tag 'reverse)
(c/list-c [(c/param (c/tag 'reverse) 0)]
c/no-tail)
;; returns
c/top-type)})

{2 (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity241)
(c/list-c [(c/multi [c/strbuff-constraint
(c/param (c/tag 'fn-arity241) 0)])]
c/no-tail)
;; returns
(c/multi [c/strbuff-constraint
(c/coll-of-c (c/multi [(c/type-op c/inner-type-of-op
(c/multi [c/strbuff-constraint
(c/param (c/tag 'fn-arity241) 0)])
)
c/substr-constraint]))]))}), 5 (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity240)
(c/list-c [(c/multi [c/substr-constraint
(c/param (c/tag 'fn-arity240) 0)])]
c/no-tail)
;; returns
(c/multi [c/strbuff-constraint
(c/coll-of-c (c/multi [(c/type-op c/inner-type-of-op
(c/multi [c/substr-constraint
(c/param (c/tag 'fn-arity240) 0)])
)
c/substr-constraint]))]))}), 6 (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity82)
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity82) 0)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/type-op c/inner-type-of-op
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity82) 0)])
))))}), 8 (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity88)
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity88) 0)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/type-op c/inner-type-of-op
(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity88) 0)])
))))})})]
))}), 56 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity553)
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".x")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity553) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity553) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity553) 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents (c/type-op c/call-value-op
(c/param (c/tag 'fn-arity553) 1)
)
(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag 'fn-arity553) 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity554) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity554) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity553) 0)
[(c/Field (c/tag ".x"))]
)])]
)
}
c/fn-constraint
 empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag 'fn-arity552)
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".x")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity552) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity552) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity552) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity552) 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity552) 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity554) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity554) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity553) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity552) 0)
[(c/Field (c/tag ".x"))]
)])]
)
(c/ReifiedConstraint 59 (c/tag "* RecurseFinal constructor at core: 2559 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag '* RecurseFinal constructor at core: 2559 *)
(c/seq-c [c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "RecurseFinal")
{}
{c/contents c/top-type
(c/Field (c/tag ".x")) (c/param (c/tag '* RecurseFinal constructor at core: 2559 *) 1)
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")]
))}), 15 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity349)
(c/list-c [(c/multi [(c/param (c/tag 'fn-arity349) 0)
c/promise-constraint])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity349) 1)])]
c/no-tail)
;; returns
(c/multi [(c/param (c/tag 'new-p) 0)
c/promise-constraint]))}), 16 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity370)
(c/list-c [(c/multi [(c/param (c/tag 'fn-arity370) 0)
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity370) 1)])]
c/no-tail)
;; returns
(c/multi [(c/param (c/tag 'new-fut) 0)
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")]))}), 55 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity556)
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".x")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity556) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity556) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity556) 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents (c/type-op c/call-value-op
(c/param (c/tag 'fn-arity556) 1)
)
(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag 'fn-arity556) 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity557) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity557) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity556) 0)
[(c/Field (c/tag ".x"))]
)])]
)
}
c/fn-constraint
 empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag 'fn-arity555)
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".x")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity555) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity555) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity555) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity555) 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity555) 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity557) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity557) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity556) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity555) 0)
[(c/Field (c/tag ".x"))]
)])]
)
(c/ReifiedConstraint 60 (c/tag "* RecurseWith constructor at core: 2571 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag '* RecurseWith constructor at core: 2571 *)
(c/seq-c [c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "RecurseWith")
{}
{c/contents c/top-type
(c/Field (c/tag ".x")) (c/param (c/tag '* RecurseWith constructor at core: 2571 *) 1)
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")]
))}), 7 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity129)
(c/list-c [(c/multi [(c/param (c/tag 'fn-arity129) 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity129) 1)
0
))
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity129) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity129) 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity129) 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity129) 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity129) 0)
)])]
)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity129) 1)
)]))), 3 (c/fn-arity
(c/tag 'fn-arity128)
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag 'fn-arity128) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity128) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity128) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity128) 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/inner-type-of-op
(c/MaybeConstraint (c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity128) 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity128) 0)
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity3)
(c/seq-c [(c/param (c/tag 'fn-arity3) 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag 'fn-arity3) 0)))})]
))
)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity128) 2)
[c/maybe-constraint]
)]))}), 35 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity628)
(c/list-c [(c/multi [(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity641) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity640) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity639) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity638) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity637) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity636) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity635) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity634) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity633) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity632) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity631) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity630) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity629) 0)
[(c/Field (c/tag ".set-map"))]
)])
}
{c/contents c/top-type
(c/Field (c/tag ".set-map")) (c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity641) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity640) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity639) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity638) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity637) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity636) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity635) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity634) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity633) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity632) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity631) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity630) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity629) 0)
[(c/Field (c/tag ".set-map"))]
)])
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity628) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity628) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity628) 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{c/contents (c/type-op c/call-value-op
(c/param (c/tag 'fn-arity628) 1)
)
(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
(c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity641)
(c/seq-c [(c/multi [(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{c/contents c/top-type
(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity641) 0)])
(c/param (c/tag 'fn-arity641) 1)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "get")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'get)
(c/list-c [(c/param (c/tag 'get) 0)
(c/param (c/tag 'get) 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag 'get) 0)
)))})

{})
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity641) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])])
(c/param (c/tag 'fn-arity641) 1)]
))})
 empty-list c/no-symbol ""))})}) 

 arg-cs [(c/coll-of-c c/strbuff-constraint), (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity120)
(c/seq-c [(c/multi [c/int-constraint
(c/param (c/tag 'fn-arity120) 0)])]
c/no-tail)
;; returns
c/int-constraint)})] 

 result-type (c/NoValues [c/int-constraint
c/strbuff-constraint]) 

 Conflicting assertions (1082)  at assertion-tests/inner-drop.toc: 9
String from:    Integer c/no-int from:
core: 1712      core: 1204            
core: 22        core: 95              
                core: 97              
                                      
                                      


*** Conflicting assertions (706)  at assertion-tests/insufficient-static-elements-2.toc: 3
Integer c/no-int from:    Symbol 'a from:
core: 1202                               
core: 1204                               
core: 95                                 
core: 97                                 
                                         
                                         


*** Conflicting assertions (706)  at assertion-tests/insufficient-static-elements-3.toc: 3
Can not contain other values from:    No Tail for sequence


*** Conflicting assertions (706)  at assertion-tests/items-constraints-1.toc: 3
Integer c/no-int from:    Symbol 'a from:
core: 1202                               
core: 1204                               
core: 95                                 
core: 97                                 
                                         
                                         


*** site 1076 assertion-tests/int-too-large.toc: 7 
 (f 5) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity826)
(c/seq-c [(c/multi [(c/IntegerConstraint c/no-int 4 -2147483648)
(c/param (c/tag 'fn-arity826) 0)])]
c/no-tail)
;; returns
c/int-constraint)}) 

 arg-cs [(c/IntegerConstraint 5 2147483647 -2147483648)] 

 result-type (c/NoValues [(c/IntegerConstraint c/no-int 4 -2147483648)
(c/IntegerConstraint 5 2147483647 -2147483648)]) 

 Conflicting assertions (1082)  at assertion-tests/int-too-large.toc: 7
Integer 5 from:    Integer c/no-int from:
                   int-too-large.toc: 4  
                   int-too-large.toc: 3  
                                         
                                         


*** site 1076 assertion-tests/items-constraints-3.toc: 10 
 (f (vector 'a 9)) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity827)
(c/seq-c [(c/multi [(c/seq-c [c/int-constraint
c/top-type]
c/top-type)
(c/param (c/tag 'fn-arity827) 0)])]
c/no-tail)
;; returns
c/strbuff-constraint)}) 

 arg-cs [(c/vect-c [(c/SymbolConstraint 'a)
(c/IntegerConstraint 9 2147483647 -2147483648)]
c/no-tail)] 

 result-type (c/NoValues [c/int-constraint
(c/SymbolConstraint 'a)]) 

 Conflicting assertions (1082)  at assertion-tests/items-constraints-3.toc: 10
Symbol 'a from:    Integer c/no-int from:    
                   items-constraints-3.toc: 3
                   items-constraints-3.toc: 4
                   core: 1202                
                   core: 1204                
                   core: 95                  
                   core: 97                  
                                             
                                             


*** site 1076 assertion-tests/insufficient-static-elements-4.toc: 7 
 (f (vector 9)) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity829)
(c/seq-c [(c/multi [(c/seq-c [c/int-constraint
c/top-type]
c/top-type)
(c/param (c/tag 'fn-arity829) 0)])]
c/no-tail)
;; returns
c/int-constraint)}) 

 arg-cs [(c/vect-c [(c/IntegerConstraint 9 2147483647 -2147483648)]
c/no-tail)] 

 result-type (c/NoValues [(c/seq-c [c/top-type]
c/top-type)
c/no-tail]) 

 Conflicting assertions (1082)  at assertion-tests/insufficient-static-elements-4.toc: 7
No Tail for sequence    Sequence from:                       


*** Conflicting assertions (415)  at assertion-tests/items-constraints-4.toc: 3
Integer c/no-int from:        String from:              
items-constraints-4.toc: 5    items-constraints-4.toc: 6
core: 1202                    core: 333                 
core: 1204                    core: 336                 
core: 95                      core: 22                  
core: 97                                                
                                                        
                                                        


*** Conflicting assertions (706)  at assertion-tests/list-items-types.toc: 6
Integer c/no-int from:     Symbol 'b from:
list-items-types.toc: 3                   
core: 1202                                
core: 1204                                
core: 95                                  
core: 97                                  
                                          
                                          


*** Loaded assertion-tests/missing-namespaced-sym.toc

*** Conflicting assertions (706)  at assertion-tests/list-butlast.toc: 3
Can not contain other values from:    No Tail for sequence


*** site 1076 assertion-tests/min-count.toc: 7 
 (f (vector 1 2)) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity832)
(c/seq-c [(c/multi [(c/seq-c [c/top-type
c/top-type
c/top-type]
(c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity832) 0)])]
c/no-tail)
;; returns
(c/multi [(c/seq-c [c/top-type
c/top-type
c/top-type]
(c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity832) 0)]))}) 

 arg-cs [(c/vect-c [(c/IntegerConstraint 1 2147483647 -2147483648)
(c/IntegerConstraint 2 2147483647 -2147483648)]
c/no-tail)] 

 result-type (c/NoValues [(c/seq-c [c/top-type]
(c/coll-of-c c/top-type))
c/no-tail]) 

 Conflicting assertions (1082)  at assertion-tests/min-count.toc: 7
No Tail for sequence    Sequence from:  


*** Could not find type constraint for 'all-of' at assertion-tests/multi-constraint-violated.toc: 2

*** Conflicting assertions (415)  at assertion-tests/nested-items-conflict.toc: 10
Integer c/no-int from:          String from:                
nested-items-conflict.toc: 2    nested-items-conflict.toc: 5
nested-items-conflict.toc: 3    nested-items-conflict.toc: 6
core: 1202                      core: 333                   
core: 1204                      core: 336                   
core: 95                        core: 22                    
core: 97                                                    
                                                            
                                                            


*** site 1076 assertion-tests/nested-destruct.toc: 9 
 (f (vector (vector "2" 3) 4 6)) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity839)
(c/seq-c [(c/multi [(c/seq-c [(c/seq-c [c/int-constraint
c/top-type]
c/top-type)
c/top-type
c/top-type]
(c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity839) 0)])]
c/no-tail)
;; returns
c/nothing-constraint)}) 

 arg-cs [(c/vect-c [(c/vect-c [(c/StrBuffConstraint "2")
(c/IntegerConstraint 3 2147483647 -2147483648)]
c/no-tail)
(c/IntegerConstraint 4 2147483647 -2147483648)
(c/IntegerConstraint 6 2147483647 -2147483648)]
c/no-tail)] 

 result-type (c/NoValues [c/int-constraint
(c/StrBuffConstraint "2")]) 

 Conflicting assertions (1082)  at assertion-tests/nested-destruct.toc: 9
String from:    Integer c/no-int from:
                nested-destruct.toc: 3
                nested-destruct.toc: 5
                nested-destruct.toc: 4
                core: 1202            
                core: 1204            
                core: 95              
                core: 97              
                                      
                                      


*** site 1076 assertion-tests/param-in-and-1.toc: 8 
 (f 1) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity840)
(c/seq-c [(c/multi [c/maybe-constraint
(c/param (c/tag 'fn-arity840) 0)])]
c/no-tail)
;; returns
c/nothing-constraint)}) 

 arg-cs [(c/IntegerConstraint 1 2147483647 -2147483648)] 

 result-type (c/NoValues [c/maybe-constraint
(c/IntegerConstraint 1 2147483647 -2147483648)]) 

 Conflicting assertions (1082)  at assertion-tests/param-in-and-1.toc: 8
Integer 1 from:    Maybe from:          
                   param-in-and-1.toc: 3
                                        
                                        


*** site 1076 assertion-tests/param-in-and-2.toc: 8 
 (f 1) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity841)
(c/seq-c [(c/multi [c/maybe-constraint
(c/param (c/tag 'fn-arity841) 0)])]
c/no-tail)
;; returns
(c/multi [c/maybe-constraint
(c/param (c/tag 'fn-arity841) 0)]))}) 

 arg-cs [(c/IntegerConstraint 1 2147483647 -2147483648)] 

 result-type (c/NoValues [c/maybe-constraint
(c/IntegerConstraint 1 2147483647 -2147483648)]) 

 Conflicting assertions (1082)  at assertion-tests/param-in-and-2.toc: 8
Integer 1 from:    Maybe from:          
                   param-in-and-2.toc: 3
                                        
                                        


*** Loaded assertion-tests/get-field.toc

*** site 1076 assertion-tests/param-in-and-3.toc: 9 
 (f 1) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity842)
(c/seq-c [(c/multi [c/maybe-constraint
(c/param (c/tag 'fn-arity842) 0)])]
c/no-tail)
;; returns
c/int-constraint)}) 

 arg-cs [(c/IntegerConstraint 1 2147483647 -2147483648)] 

 result-type (c/NoValues [c/maybe-constraint
(c/IntegerConstraint 1 2147483647 -2147483648)]) 

 Conflicting assertions (1082)  at assertion-tests/param-in-and-3.toc: 9
Integer 1 from:    Maybe from:          
                   param-in-and-3.toc: 3
                                        
                                        


*** site 1076 assertion-tests/dynamic-field-type-16.toc: 27 
 (inc (.x (.z (f 'wur (Second 's (Third 9)) (Second 's (Third 9)))))) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity120)
(c/seq-c [(c/multi [c/int-constraint
(c/param (c/tag 'fn-arity120) 0)])]
c/no-tail)
;; returns
c/int-constraint)}) 

 arg-cs [(c/SymbolConstraint 'w)] 

 result-type (c/NoValues [c/int-constraint
(c/SymbolConstraint 'w)]) 

 Conflicting assertions (1082)  at assertion-tests/dynamic-field-type-16.toc: 27
Symbol 'w from:                  Integer c/no-int from:
dynamic-field-type-16.toc: 20    core: 1204            
                                 core: 95              
                                 core: 97              
                                                       
                                                       


*** Could not find type constraint for 'do' at assertion-tests/or-prop.toc: 8

*** site 1076 assertion-tests/param-in-either-1.toc: 8 
 (f 1) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity844)
(c/seq-c [(c/multi [c/maybe-constraint
(c/param (c/tag 'fn-arity844) 0)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity844) 0)
)
c/nothing-constraint]))}) 

 arg-cs [(c/IntegerConstraint 1 2147483647 -2147483648)] 

 result-type (c/NoValues [c/maybe-constraint
(c/IntegerConstraint 1 2147483647 -2147483648)]) 

 Conflicting assertions (1082)  at assertion-tests/param-in-either-1.toc: 8
Integer 1 from:    Maybe from:             
                   param-in-either-1.toc: 3
                                           
                                           


*** site 1076 assertion-tests/param-in-and-4.toc: 9 
 (f 1) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity845)
(c/seq-c [(c/multi [c/maybe-constraint
(c/param (c/tag 'fn-arity845) 0)])]
c/no-tail)
;; returns
c/int-constraint)}) 

 arg-cs [(c/IntegerConstraint 1 2147483647 -2147483648)] 

 result-type (c/NoValues [c/maybe-constraint
(c/IntegerConstraint 1 2147483647 -2147483648)]) 

 Conflicting assertions (1082)  at assertion-tests/param-in-and-4.toc: 9
Integer 1 from:    Maybe from:          
                   param-in-and-4.toc: 3
                                        
                                        


*** site 1076 assertion-tests/param-in-either-2.toc: 9 
 (f 1) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity846)
(c/seq-c [(c/multi [c/maybe-constraint
(c/param (c/tag 'fn-arity846) 0)])]
c/no-tail)
;; returns
(c/SymbolConstraint 'wut))}) 

 arg-cs [(c/IntegerConstraint 1 2147483647 -2147483648)] 

 result-type (c/NoValues [c/maybe-constraint
(c/IntegerConstraint 1 2147483647 -2147483648)]) 

 Conflicting assertions (1082)  at assertion-tests/param-in-either-2.toc: 9
Integer 1 from:    Maybe from:             
                   param-in-either-2.toc: 3
                                           
                                           


*** site 1076 assertion-tests/param-in-or-1.toc: 8 
 (f 1) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity847)
(c/seq-c [(c/multi [c/maybe-constraint
(c/param (c/tag 'fn-arity847) 0)])]
c/no-tail)
;; returns
(c/sum-c [c/nothing-constraint
(c/multi [c/maybe-constraint
(c/param (c/tag 'fn-arity847) 0)])]))}) 

 arg-cs [(c/IntegerConstraint 1 2147483647 -2147483648)] 

 result-type (c/NoValues [c/maybe-constraint
(c/IntegerConstraint 1 2147483647 -2147483648)]) 

 Conflicting assertions (1082)  at assertion-tests/param-in-or-1.toc: 8
Integer 1 from:    Maybe from:         
                   param-in-or-1.toc: 3
                                       
                                       


*** site 1076 assertion-tests/param-in-or-2.toc: 8 
 (f 1) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity848)
(c/seq-c [(c/multi [c/maybe-constraint
(c/param (c/tag 'fn-arity848) 0)])]
c/no-tail)
;; returns
(c/sum-c [(c/multi [c/maybe-constraint
(c/param (c/tag 'fn-arity848) 0)])
c/nothing-constraint]))}) 

 arg-cs [(c/IntegerConstraint 1 2147483647 -2147483648)] 

 result-type (c/NoValues [c/maybe-constraint
(c/IntegerConstraint 1 2147483647 -2147483648)]) 

 Conflicting assertions (1082)  at assertion-tests/param-in-or-2.toc: 8
Integer 1 from:    Maybe from:         
                   param-in-or-2.toc: 3
                                       
                                       


*** site 1076 assertion-tests/param-in-or-4.toc: 9 
 (f 1) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity850)
(c/seq-c [(c/multi [c/maybe-constraint
(c/param (c/tag 'fn-arity850) 0)])]
c/no-tail)
;; returns
c/int-constraint)}) 

 arg-cs [(c/IntegerConstraint 1 2147483647 -2147483648)] 

 result-type (c/NoValues [c/maybe-constraint
(c/IntegerConstraint 1 2147483647 -2147483648)]) 

 Conflicting assertions (1082)  at assertion-tests/param-in-or-4.toc: 9
Integer 1 from:    Maybe from:         
                   param-in-or-4.toc: 3
                                       
                                       


*** site 1076 assertion-tests/field-constraint.toc: 10 
 (subs x 1) 

 target-c (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity44)
(c/seq-c [(c/multi [(c/sum-c [c/strbuff-constraint
c/substr-constraint])
(c/param (c/tag 'fn-arity44) 0)])
(c/multi [(c/IntegerConstraint c/no-int 2147483647 0)
(c/param (c/tag 'fn-arity44) 1)])]
c/no-tail)
;; returns
c/substr-constraint), 3 (c/fn-arity
(c/tag 'fn-arity43)
(c/seq-c [(c/multi [(c/sum-c [c/strbuff-constraint
c/substr-constraint])
(c/param (c/tag 'fn-arity43) 0)])
(c/multi [(c/IntegerConstraint c/no-int 2147483647 0)
(c/param (c/tag 'fn-arity43) 1)])
(c/multi [(c/IntegerConstraint c/no-int 2147483647 0)
(c/param (c/tag 'fn-arity43) 2)])]
c/no-tail)
;; returns
c/substr-constraint)}) 

 arg-cs [(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity849) 0)
[(c/Field (c/tag ".x"))]
)
c/int-constraint]), (c/IntegerConstraint 1 2147483647 -2147483648)] 

 result-type (c/NoValues [c/strbuff-constraint
c/int-constraint]) 

 Conflicting assertions (1082)  at assertion-tests/field-constraint.toc: 10
Integer c/no-int from:     String from:
field-constraint.toc: 6    core: 336   
                           core: 22    
                                       
                                       


*** site 1076 assertion-tests/param-in-or-3.toc: 9 
 (f 1) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity851)
(c/seq-c [(c/multi [c/maybe-constraint
(c/param (c/tag 'fn-arity851) 0)])]
c/no-tail)
;; returns
c/int-constraint)}) 

 arg-cs [(c/IntegerConstraint 1 2147483647 -2147483648)] 

 result-type (c/NoValues [c/maybe-constraint
(c/IntegerConstraint 1 2147483647 -2147483648)]) 

 Conflicting assertions (1082)  at assertion-tests/param-in-or-3.toc: 9
Integer 1 from:    Maybe from:         
                   param-in-or-3.toc: 3
                                       
                                       


*** site 1076 assertion-tests/propogate-inner-3.toc: 7 
 (f 'a) 

 target-c (c/fn-c []
{c/variadic (c/fn-arity
(c/tag 'fn-arity853)
(c/seq-c [(c/param (c/tag 'fn-arity853) 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity853) 1)]))
;; returns
(c/seq-c [(c/multi [c/int-constraint
(c/param (c/tag 'fn-arity853) 0)])]
(c/multi [(c/list-c [] (c/coll-of-c c/int-constraint))
(c/param (c/tag 'fn-arity853) 1)])))}) 

 arg-cs [(c/SymbolConstraint 'a)] 

 result-type (c/NoValues [c/int-constraint
(c/SymbolConstraint 'a)]) 

 Conflicting assertions (1082)  at assertion-tests/propogate-inner-3.toc: 7
Symbol 'a from:    Integer c/no-int from:  
                   propogate-inner-3.toc: 3
                                           
                                           


*** site 1076 assertion-tests/param-in-tail-cond-3.toc: 9 
 (f 1) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity852)
(c/seq-c [(c/multi [c/maybe-constraint
(c/param (c/tag 'fn-arity852) 0)])]
c/no-tail)
;; returns
(c/sum-c [(c/MaybeConstraint (c/sum-c [(c/IntegerConstraint 0 2147483647 -2147483648)
(c/IntegerConstraint 1 2147483647 -2147483648)]))
c/nothing-constraint]))}) 

 arg-cs [(c/IntegerConstraint 1 2147483647 -2147483648)] 

 result-type (c/NoValues [c/maybe-constraint
(c/IntegerConstraint 1 2147483647 -2147483648)]) 

 Conflicting assertions (1082)  at assertion-tests/param-in-tail-cond-3.toc: 9
Integer 1 from:    Maybe from:                
                   param-in-tail-cond-3.toc: 3
                                              
                                              


*** Loaded assertion-tests/preserve-static-info-1.toc

*** Loaded assertion-tests/propogate-through-let.toc

*** Loaded assertion-tests/preserve-static-info-2.toc

*** site 1076 assertion-tests/propogate-inner-4.toc: 7 
 (f 'a 4) 

 target-c (c/fn-c []
{c/variadic (c/fn-arity
(c/tag 'fn-arity857)
(c/seq-c [(c/param (c/tag 'fn-arity857) 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity857) 1)]))
;; returns
(c/seq-c [(c/multi [c/int-constraint
(c/param (c/tag 'fn-arity857) 0)])]
(c/multi [(c/list-c [] (c/coll-of-c c/int-constraint))
(c/param (c/tag 'fn-arity857) 1)])))}) 

 arg-cs [(c/SymbolConstraint 'a), (c/IntegerConstraint 4 2147483647 -2147483648)] 

 result-type (c/NoValues [c/int-constraint
(c/SymbolConstraint 'a)]) 

 Conflicting assertions (1082)  at assertion-tests/propogate-inner-4.toc: 7
Symbol 'a from:    Integer c/no-int from:  
                   propogate-inner-4.toc: 3
                                           
                                           


*** Loaded assertion-tests/preserve-static-info-3.toc

*** site 1076 assertion-tests/field-and-seq-conflict.toc: 12 
 (f x) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity859)
(c/seq-c [(c/multi [(c/ReifiedConstraint 0 (c/tag "field 'boom' required")
{}
{(c/Field (c/tag ".boom")) c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity859) 0)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag ".boom")
(c/fn-c []
{2 (c/fn-arity
(c/tag '.boom_setter)
(c/seq-c [(c/multi [(c/param (c/tag '.boom_setter) 0)
(c/ReifiedConstraint 0 (c/tag "field 'boom' required")
{}
{(c/Field (c/tag ".boom")) c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
(c/param (c/tag '.boom_setter) 1)]
c/no-tail)
;; returns
(c/type-op c/set-to-op
(c/param (c/tag '.boom_setter) 0)
[[(c/Field (c/tag ".boom"))]
(c/param (c/tag '.boom_setter) 1)]
)), 1 (c/fn-arity
(c/tag '.boom_getter)
(c/seq-c [(c/multi [(c/param (c/tag '.boom_getter) 0)
(c/ReifiedConstraint 0 (c/tag "field 'boom' required")
{}
{(c/Field (c/tag ".boom")) c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])]
c/no-tail)
;; returns
(c/type-op c/get-from-op
(c/param (c/tag '.boom_getter) 0)
[(c/Field (c/tag ".boom"))]
))})

{175 (c/fn-c []
{2 (c/fn-arity
(c/tag 'Bogus-.boom-setter)
(c/seq-c [(c/multi [(c/param (c/tag 'Bogus-.boom-setter) 0)
(c/ReifiedConstraint 175 (c/tag "Bogus")
{(c/Field (c/tag ".boom")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".boom")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")])
(c/multi [(c/param (c/tag 'Bogus-.boom-setter) 1)
c/top-type])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/set-to-op
(c/param (c/tag 'Bogus-.boom-setter) 0)
[[(c/Field (c/tag ".boom"))]
(c/param (c/tag 'Bogus-.boom-setter) 1)]
)
(c/type-op c/set-to-op
(c/param (c/tag 'Bogus-.boom-setter) 0)
[[(c/Field (c/tag ".boom"))]
(c/param (c/tag 'Bogus-.boom-setter) 1)]
)])), 1 (c/fn-arity
(c/tag 'Bogus-.boom-getter)
(c/seq-c [(c/multi [(c/param (c/tag 'Bogus-.boom-getter) 0)
(c/ReifiedConstraint 175 (c/tag "Bogus")
{(c/Field (c/tag ".boom")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".boom")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'Bogus-.boom-getter) 0)
[(c/Field (c/tag ".boom"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'Bogus-.boom-getter) 0)
[(c/Field (c/tag ".boom"))]
)]))})})
[(c/param (c/tag 'fn-arity859) 0)]
))}) 

 arg-cs [(c/multi [(c/seq-c [c/top-type
c/top-type]
c/no-tail)
(c/param (c/tag 'fn-arity861) 0)])] 

 result-type (c/NoValues [(c/ReifiedConstraint 0 (c/tag "field 'boom' required")
{}
{(c/Field (c/tag ".boom")) c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/seq-c [c/top-type
c/top-type]
c/no-tail)]) 

 Conflicting assertions (1082)  at assertion-tests/field-and-seq-conflict.toc: 12
Sequence from:                   field 'boom' required from:  
field-and-seq-conflict.toc: 7    field-and-seq-conflict.toc: 5
                                                              
                                                              


*** site 1076 assertion-tests/propogate-through-seq.toc: 3 
 (map (seq (vector 'a 'b 2)) inc) 

 target-c (c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{6 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity164)
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity164) 0)
(c/seq-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity164) 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity164) 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity164) 1)
)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity164) 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity164) 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity164) 0)
)])]
)])))), 3 (c/fn-arity
(c/tag 'fn-arity163)
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity163) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity163) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity163) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity163) 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity163) 2)
[(c/list-c [] c/no-tail)]
)
(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'flat-map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])
0
))
(c/param (c/tag 'flat-map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity163) 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity163) 0)
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity183)
(c/seq-c [(c/param (c/tag 'fn-arity183) 0)]
c/no-tail)
;; returns
(c/coll-of-c (c/seq-c []
(c/coll-of-c c/top-type))))})]
)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity163) 2)
[(c/list-c [] c/no-tail)]
)])
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'flat-map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])
0
))
(c/param (c/tag 'flat-map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity163) 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity163) 0)
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity183)
(c/seq-c [(c/param (c/tag 'fn-arity183) 0)]
c/no-tail)
;; returns
(c/coll-of-c (c/seq-c []
(c/coll-of-c c/top-type))))})]
)]))}), 8 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity306)
(c/list-c [(c/multi [(c/param (c/tag 'fn-arity306) 0)
(c/vect-c [] (c/coll-of-c c/top-type))
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity306) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity306) 1)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity306) 1)
)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity306) 1)
[(c/type-op c/inner-type-of-op
(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity306) 0)])
)]
)])))), 3 (c/fn-arity
(c/tag 'fn-arity305)
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity305) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity305) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity305) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity305) 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'flat-map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])
0
))
(c/param (c/tag 'flat-map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity305) 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity305) 0)
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity329)
(c/seq-c [(c/param (c/tag 'fn-arity329) 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity305) 2)
[(c/vect-c [] c/no-tail)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity330)
(c/seq-c [(c/param (c/tag 'fn-arity330) 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "conj")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'conj)
(c/list-c [(c/param (c/tag 'conj) 0)
(c/param (c/tag 'conj) 1)]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/param (c/tag 'fn-arity330) 0)
(c/param (c/tag 'fn-arity329) 0)]
))})]
))})]
)
(c/ProtoImpls
(c/tag "reverse")
(c/fn-c []
{1 (c/fn-arity
(c/tag 'reverse)
(c/list-c [(c/param (c/tag 'reverse) 0)]
c/no-tail)
;; returns
c/top-type)})

{2 (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity241)
(c/list-c [(c/multi [c/strbuff-constraint
(c/param (c/tag 'fn-arity241) 0)])]
c/no-tail)
;; returns
(c/multi [c/strbuff-constraint
(c/coll-of-c (c/multi [(c/type-op c/inner-type-of-op
(c/multi [c/strbuff-constraint
(c/param (c/tag 'fn-arity241) 0)])
)
c/substr-constraint]))]))}), 5 (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity240)
(c/list-c [(c/multi [c/substr-constraint
(c/param (c/tag 'fn-arity240) 0)])]
c/no-tail)
;; returns
(c/multi [c/strbuff-constraint
(c/coll-of-c (c/multi [(c/type-op c/inner-type-of-op
(c/multi [c/substr-constraint
(c/param (c/tag 'fn-arity240) 0)])
)
c/substr-constraint]))]))}), 6 (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity82)
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity82) 0)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/type-op c/inner-type-of-op
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity82) 0)])
))))}), 8 (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity88)
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity88) 0)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/type-op c/inner-type-of-op
(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity88) 0)])
))))})})]
))}), 56 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity553)
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".x")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity553) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity553) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity553) 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents (c/type-op c/call-value-op
(c/param (c/tag 'fn-arity553) 1)
)
(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag 'fn-arity553) 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity554) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity554) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity553) 0)
[(c/Field (c/tag ".x"))]
)])]
)
}
c/fn-constraint
 empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag 'fn-arity552)
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".x")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity552) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity552) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity552) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity552) 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity552) 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity554) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity554) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity553) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity552) 0)
[(c/Field (c/tag ".x"))]
)])]
)
(c/ReifiedConstraint 59 (c/tag "* RecurseFinal constructor at core: 2559 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag '* RecurseFinal constructor at core: 2559 *)
(c/seq-c [c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "RecurseFinal")
{}
{c/contents c/top-type
(c/Field (c/tag ".x")) (c/param (c/tag '* RecurseFinal constructor at core: 2559 *) 1)
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")]
))}), 15 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity349)
(c/list-c [(c/multi [(c/param (c/tag 'fn-arity349) 0)
c/promise-constraint])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity349) 1)])]
c/no-tail)
;; returns
(c/multi [(c/param (c/tag 'new-p) 0)
c/promise-constraint]))}), 16 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity370)
(c/list-c [(c/multi [(c/param (c/tag 'fn-arity370) 0)
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity370) 1)])]
c/no-tail)
;; returns
(c/multi [(c/param (c/tag 'new-fut) 0)
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")]))}), 55 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity556)
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".x")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity556) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity556) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity556) 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents (c/type-op c/call-value-op
(c/param (c/tag 'fn-arity556) 1)
)
(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag 'fn-arity556) 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity557) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity557) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity556) 0)
[(c/Field (c/tag ".x"))]
)])]
)
}
c/fn-constraint
 empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag 'fn-arity555)
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".x")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity555) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity555) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity555) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity555) 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity555) 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity557) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity557) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity556) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity555) 0)
[(c/Field (c/tag ".x"))]
)])]
)
(c/ReifiedConstraint 60 (c/tag "* RecurseWith constructor at core: 2571 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag '* RecurseWith constructor at core: 2571 *)
(c/seq-c [c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "RecurseWith")
{}
{c/contents c/top-type
(c/Field (c/tag ".x")) (c/param (c/tag '* RecurseWith constructor at core: 2571 *) 1)
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")]
))}), 7 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity129)
(c/list-c [(c/multi [(c/param (c/tag 'fn-arity129) 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity129) 1)
0
))
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity129) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity129) 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity129) 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity129) 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity129) 0)
)])]
)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity129) 1)
)]))), 3 (c/fn-arity
(c/tag 'fn-arity128)
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag 'fn-arity128) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity128) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity128) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity128) 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/inner-type-of-op
(c/MaybeConstraint (c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity128) 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity128) 0)
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity3)
(c/seq-c [(c/param (c/tag 'fn-arity3) 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag 'fn-arity3) 0)))})]
))
)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity128) 2)
[c/maybe-constraint]
)]))}), 35 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity628)
(c/list-c [(c/multi [(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity641) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity640) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity639) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity638) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity637) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity636) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity635) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity634) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity633) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity632) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity631) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity630) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity629) 0)
[(c/Field (c/tag ".set-map"))]
)])
}
{c/contents c/top-type
(c/Field (c/tag ".set-map")) (c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity641) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity640) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity639) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity638) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity637) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity636) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity635) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity634) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity633) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity632) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity631) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity630) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity629) 0)
[(c/Field (c/tag ".set-map"))]
)])
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity628) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity628) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity628) 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{c/contents (c/type-op c/call-value-op
(c/param (c/tag 'fn-arity628) 1)
)
(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
(c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity641)
(c/seq-c [(c/multi [(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{c/contents c/top-type
(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity641) 0)])
(c/param (c/tag 'fn-arity641) 1)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "get")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'get)
(c/list-c [(c/param (c/tag 'get) 0)
(c/param (c/tag 'get) 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag 'get) 0)
)))})

{})
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity641) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])])
(c/param (c/tag 'fn-arity641) 1)]
))})
 empty-list c/no-symbol ""))})}) 

 arg-cs [(c/list-c [(c/SymbolConstraint 'a)
(c/SymbolConstraint 'b)
(c/IntegerConstraint 2 2147483647 -2147483648)]
c/no-tail), (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity120)
(c/seq-c [(c/multi [c/int-constraint
(c/param (c/tag 'fn-arity120) 0)])]
c/no-tail)
;; returns
c/int-constraint)})] 

 result-type (c/NoValues [c/int-constraint
(c/SymbolConstraint 'a)]) 

 Conflicting assertions (1082)  at assertion-tests/propogate-through-seq.toc: 3
Symbol 'a from:    Integer c/no-int from:
                   core: 1204            
                   core: 95              
                   core: 97              
                                         
                                         


*** site 1076 assertion-tests/propogate-through-vec.toc: 3 
 (map (vec (list 'a 'b 2)) inc) 

 target-c (c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{6 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity164)
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity164) 0)
(c/seq-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity164) 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity164) 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity164) 1)
)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity164) 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity164) 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity164) 0)
)])]
)])))), 3 (c/fn-arity
(c/tag 'fn-arity163)
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity163) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity163) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity163) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity163) 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity163) 2)
[(c/list-c [] c/no-tail)]
)
(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'flat-map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])
0
))
(c/param (c/tag 'flat-map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity163) 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity163) 0)
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity183)
(c/seq-c [(c/param (c/tag 'fn-arity183) 0)]
c/no-tail)
;; returns
(c/coll-of-c (c/seq-c []
(c/coll-of-c c/top-type))))})]
)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity163) 2)
[(c/list-c [] c/no-tail)]
)])
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'flat-map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])
0
))
(c/param (c/tag 'flat-map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity163) 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity163) 0)
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity183)
(c/seq-c [(c/param (c/tag 'fn-arity183) 0)]
c/no-tail)
;; returns
(c/coll-of-c (c/seq-c []
(c/coll-of-c c/top-type))))})]
)]))}), 8 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity306)
(c/list-c [(c/multi [(c/param (c/tag 'fn-arity306) 0)
(c/vect-c [] (c/coll-of-c c/top-type))
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity306) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity306) 1)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity306) 1)
)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity306) 1)
[(c/type-op c/inner-type-of-op
(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity306) 0)])
)]
)])))), 3 (c/fn-arity
(c/tag 'fn-arity305)
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity305) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity305) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity305) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity305) 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'flat-map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])
0
))
(c/param (c/tag 'flat-map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity305) 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity305) 0)
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity329)
(c/seq-c [(c/param (c/tag 'fn-arity329) 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity305) 2)
[(c/vect-c [] c/no-tail)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity330)
(c/seq-c [(c/param (c/tag 'fn-arity330) 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "conj")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'conj)
(c/list-c [(c/param (c/tag 'conj) 0)
(c/param (c/tag 'conj) 1)]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/param (c/tag 'fn-arity330) 0)
(c/param (c/tag 'fn-arity329) 0)]
))})]
))})]
)
(c/ProtoImpls
(c/tag "reverse")
(c/fn-c []
{1 (c/fn-arity
(c/tag 'reverse)
(c/list-c [(c/param (c/tag 'reverse) 0)]
c/no-tail)
;; returns
c/top-type)})

{2 (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity241)
(c/list-c [(c/multi [c/strbuff-constraint
(c/param (c/tag 'fn-arity241) 0)])]
c/no-tail)
;; returns
(c/multi [c/strbuff-constraint
(c/coll-of-c (c/multi [(c/type-op c/inner-type-of-op
(c/multi [c/strbuff-constraint
(c/param (c/tag 'fn-arity241) 0)])
)
c/substr-constraint]))]))}), 5 (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity240)
(c/list-c [(c/multi [c/substr-constraint
(c/param (c/tag 'fn-arity240) 0)])]
c/no-tail)
;; returns
(c/multi [c/strbuff-constraint
(c/coll-of-c (c/multi [(c/type-op c/inner-type-of-op
(c/multi [c/substr-constraint
(c/param (c/tag 'fn-arity240) 0)])
)
c/substr-constraint]))]))}), 6 (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity82)
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity82) 0)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/type-op c/inner-type-of-op
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity82) 0)])
))))}), 8 (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity88)
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity88) 0)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/type-op c/inner-type-of-op
(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity88) 0)])
))))})})]
))}), 56 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity553)
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".x")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity553) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity553) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity553) 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents (c/type-op c/call-value-op
(c/param (c/tag 'fn-arity553) 1)
)
(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag 'fn-arity553) 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity554) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity554) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity553) 0)
[(c/Field (c/tag ".x"))]
)])]
)
}
c/fn-constraint
 empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag 'fn-arity552)
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".x")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity552) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity552) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity552) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity552) 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity552) 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity554) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity554) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity553) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity552) 0)
[(c/Field (c/tag ".x"))]
)])]
)
(c/ReifiedConstraint 59 (c/tag "* RecurseFinal constructor at core: 2559 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag '* RecurseFinal constructor at core: 2559 *)
(c/seq-c [c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "RecurseFinal")
{}
{c/contents c/top-type
(c/Field (c/tag ".x")) (c/param (c/tag '* RecurseFinal constructor at core: 2559 *) 1)
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")]
))}), 15 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity349)
(c/list-c [(c/multi [(c/param (c/tag 'fn-arity349) 0)
c/promise-constraint])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity349) 1)])]
c/no-tail)
;; returns
(c/multi [(c/param (c/tag 'new-p) 0)
c/promise-constraint]))}), 16 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity370)
(c/list-c [(c/multi [(c/param (c/tag 'fn-arity370) 0)
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity370) 1)])]
c/no-tail)
;; returns
(c/multi [(c/param (c/tag 'new-fut) 0)
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")]))}), 55 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity556)
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".x")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity556) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity556) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity556) 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents (c/type-op c/call-value-op
(c/param (c/tag 'fn-arity556) 1)
)
(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag 'fn-arity556) 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity557) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity557) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity556) 0)
[(c/Field (c/tag ".x"))]
)])]
)
}
c/fn-constraint
 empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag 'fn-arity555)
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".x")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity555) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity555) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity555) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity555) 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity555) 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity557) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity557) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity556) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity555) 0)
[(c/Field (c/tag ".x"))]
)])]
)
(c/ReifiedConstraint 60 (c/tag "* RecurseWith constructor at core: 2571 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag '* RecurseWith constructor at core: 2571 *)
(c/seq-c [c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "RecurseWith")
{}
{c/contents c/top-type
(c/Field (c/tag ".x")) (c/param (c/tag '* RecurseWith constructor at core: 2571 *) 1)
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")]
))}), 7 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity129)
(c/list-c [(c/multi [(c/param (c/tag 'fn-arity129) 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity129) 1)
0
))
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity129) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity129) 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity129) 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity129) 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity129) 0)
)])]
)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity129) 1)
)]))), 3 (c/fn-arity
(c/tag 'fn-arity128)
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag 'fn-arity128) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity128) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity128) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity128) 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/inner-type-of-op
(c/MaybeConstraint (c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity128) 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity128) 0)
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity3)
(c/seq-c [(c/param (c/tag 'fn-arity3) 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag 'fn-arity3) 0)))})]
))
)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity128) 2)
[c/maybe-constraint]
)]))}), 35 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity628)
(c/list-c [(c/multi [(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity641) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity640) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity639) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity638) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity637) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity636) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity635) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity634) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity633) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity632) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity631) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity630) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity629) 0)
[(c/Field (c/tag ".set-map"))]
)])
}
{c/contents c/top-type
(c/Field (c/tag ".set-map")) (c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity641) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity640) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity639) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity638) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity637) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity636) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity635) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity634) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity633) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity632) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity631) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity630) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity629) 0)
[(c/Field (c/tag ".set-map"))]
)])
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity628) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity628) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity628) 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{c/contents (c/type-op c/call-value-op
(c/param (c/tag 'fn-arity628) 1)
)
(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
(c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity641)
(c/seq-c [(c/multi [(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{c/contents c/top-type
(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity641) 0)])
(c/param (c/tag 'fn-arity641) 1)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "get")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'get)
(c/list-c [(c/param (c/tag 'get) 0)
(c/param (c/tag 'get) 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag 'get) 0)
)))})

{})
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity641) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])])
(c/param (c/tag 'fn-arity641) 1)]
))})
 empty-list c/no-symbol ""))})}) 

 arg-cs [(c/vect-c [(c/SymbolConstraint 'a)
(c/SymbolConstraint 'b)
(c/IntegerConstraint 2 2147483647 -2147483648)]
c/no-tail), (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity120)
(c/seq-c [(c/multi [c/int-constraint
(c/param (c/tag 'fn-arity120) 0)])]
c/no-tail)
;; returns
c/int-constraint)})] 

 result-type (c/NoValues [c/int-constraint
(c/SymbolConstraint 'a)]) 

 Conflicting assertions (1082)  at assertion-tests/propogate-through-vec.toc: 3
Symbol 'a from:    Integer c/no-int from:
                   core: 1204            
                   core: 95              
                   core: 97              
                                         
                                         


*** site 1076 assertion-tests/dynamic-field-type-8.toc: 28 
 (inc (.x (.z (f 'wur (Second 's (Third 9)) 'q)))) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity120)
(c/seq-c [(c/multi [c/int-constraint
(c/param (c/tag 'fn-arity120) 0)])]
c/no-tail)
;; returns
c/int-constraint)}) 

 arg-cs [(c/SymbolConstraint 'q)] 

 result-type (c/NoValues [c/int-constraint
(c/SymbolConstraint 'q)]) 

 Conflicting assertions (1082)  at assertion-tests/dynamic-field-type-8.toc: 28
Symbol 'q from:    Integer c/no-int from:
                   core: 1204            
                   core: 95              
                   core: 97              
                                         
                                         


*** site 1076 assertion-tests/proto-fn-param.toc: 3 
 (nth (vector 1 2 3) "2") 

 target-c (c/ProtoImpls
(c/tag "nth")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'nth)
(c/list-c [(c/param (c/tag 'nth) 0)
(c/multi [c/int-constraint
(c/param (c/tag 'nth) 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag 'nth) 0)
)))})

{2 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity213)
(c/list-c [(c/multi [(c/param (c/tag 'fn-arity213) 0)
c/strbuff-constraint])
(c/multi [(c/param (c/tag 'fn-arity213) 1)
(c/IntegerConstraint c/no-int 2147483647 0)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity213) 0)
)
c/substr-constraint])))}), 5 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity212)
(c/list-c [(c/multi [(c/param (c/tag 'fn-arity212) 0)
c/substr-constraint])
(c/multi [(c/param (c/tag 'fn-arity212) 1)
(c/IntegerConstraint c/no-int 2147483647 0)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity212) 0)
)
c/substr-constraint])))}), 6 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity167)
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity167) 0)])
(c/multi [c/int-constraint
(c/param (c/tag 'fn-arity167) 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity167) 0)
)))}), 8 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity309)
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity309) 0)])
(c/multi [(c/param (c/tag 'fn-arity309) 1)
(c/IntegerConstraint c/no-int 2147483647 0)])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity86)
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity86) 0)])
(c/multi [c/int-constraint
(c/IntegerConstraint c/no-int 2147483647 0)
(c/param (c/tag 'fn-arity86) 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/inner-type-of-op
(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity86) 0)])
)
(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity86) 0)
)])))})
[(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity309) 0)])
(c/param (c/tag 'fn-arity309) 1)]
)
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity309) 0)
))]))})}) 

 arg-cs [(c/vect-c [(c/IntegerConstraint 1 2147483647 -2147483648)
(c/IntegerConstraint 2 2147483647 -2147483648)
(c/IntegerConstraint 3 2147483647 -2147483648)]
c/no-tail), (c/StrBuffConstraint "2")] 

 result-type (c/NoValues [(c/StrBuffConstraint "2")
(c/IntegerConstraint c/no-int 2147483647 0)]) 

 Conflicting assertions (1082)  at assertion-tests/proto-fn-param.toc: 3
Integer c/no-int from:    String from:
core: 1024                            
                                      
                                      


*** Conflicting assertions (706)  at assertion-tests/rest-of-vect.toc: 3
Integer c/no-int from:    Symbol 'a from:
core: 1202                               
core: 1204                               
core: 95                                 
core: 97                                 
                                         
                                         


*** Loaded assertion-tests/flat-map-param.toc

*** Conflicting assertions (706)  at assertion-tests/rest-of-list.toc: 3
Integer c/no-int from:    Symbol 'a from:
core: 1202                               
core: 1204                               
core: 95                                 
core: 97                                 
                                         
                                         


*** site 1076 assertion-tests/dynamic-field-type-7.toc: 26 
 (inc (.x (.z (f 'wur (Second 's (Third 9)))))) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity120)
(c/seq-c [(c/multi [c/int-constraint
(c/param (c/tag 'fn-arity120) 0)])]
c/no-tail)
;; returns
c/int-constraint)}) 

 arg-cs [(c/SymbolConstraint 'w)] 

 result-type (c/NoValues [c/int-constraint
(c/SymbolConstraint 'w)]) 

 Conflicting assertions (1082)  at assertion-tests/dynamic-field-type-7.toc: 26
Symbol 'w from:                 Integer c/no-int from:
dynamic-field-type-7.toc: 20    core: 1204            
                                core: 95              
                                core: 97              
                                                      
                                                      


*** site 1076 assertion-tests/proto-fn-min-count.toc: 14 
 (bogus (Bogus 1) (vector 3)) 

 target-c (c/ProtoImpls
(c/tag "bogus")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'bogus)
(c/list-c [(c/param (c/tag 'bogus) 0)
(c/multi [(c/seq-c [c/top-type
c/top-type]
(c/coll-of-c c/top-type))
(c/param (c/tag 'bogus) 1)])]
c/no-tail)
;; returns
c/top-type)})

{199 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity871)
(c/list-c [(c/multi [(c/ReifiedConstraint 199 (c/tag "Bogus")
{(c/Field (c/tag ".s")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".s")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity871) 0)])
(c/multi [(c/seq-c [c/top-type
c/top-type]
(c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity871) 1)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "conj")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'conj)
(c/list-c [(c/param (c/tag 'conj) 0)
(c/param (c/tag 'conj) 1)]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/param (c/tag 'fn-arity871) 1)
(c/SymbolConstraint 'a)]
))})}) 

 arg-cs [(c/ReifiedConstraint 199 (c/tag "Bogus")
{(c/Field (c/tag ".s")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".s")) (c/IntegerConstraint 1 2147483647 -2147483648)
}
c/fn-constraint
 empty-list c/no-symbol ""), (c/vect-c [(c/IntegerConstraint 3 2147483647 -2147483648)]
c/no-tail)] 

 result-type (c/NoValues [(c/seq-c [c/top-type]
(c/coll-of-c c/top-type))
c/no-tail]) 

 Conflicting assertions (1082)  at assertion-tests/proto-fn-min-count.toc: 14
No Tail for sequence    Sequence from:           


*** site 1076 assertion-tests/return-generic-1.toc: 8 
 (bloop "9") 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity872)
(c/seq-c [(c/param (c/tag 'fn-arity872) 0)]
c/no-tail)
;; returns
(c/vect-c [(c/multi [c/int-constraint
(c/param (c/tag 'fn-arity872) 0)])]
c/no-tail))}) 

 arg-cs [(c/StrBuffConstraint "9")] 

 result-type (c/NoValues [c/int-constraint
(c/StrBuffConstraint "9")]) 

 Conflicting assertions (1082)  at assertion-tests/return-generic-1.toc: 8
String from:    Integer c/no-int from: 
                return-generic-1.toc: 3
                                       
                                       


*** site 1076 assertion-tests/static-fixed-dynamic-result-type-1.toc: 6 
 (map (f 'bogus) inc) 

 target-c (c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{6 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity164)
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity164) 0)
(c/seq-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity164) 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity164) 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity164) 1)
)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity164) 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity164) 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity164) 0)
)])]
)])))), 3 (c/fn-arity
(c/tag 'fn-arity163)
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity163) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity163) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity163) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity163) 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity163) 2)
[(c/list-c [] c/no-tail)]
)
(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'flat-map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])
0
))
(c/param (c/tag 'flat-map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity163) 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity163) 0)
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity183)
(c/seq-c [(c/param (c/tag 'fn-arity183) 0)]
c/no-tail)
;; returns
(c/coll-of-c (c/seq-c []
(c/coll-of-c c/top-type))))})]
)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity163) 2)
[(c/list-c [] c/no-tail)]
)])
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'flat-map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])
0
))
(c/param (c/tag 'flat-map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity163) 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity163) 0)
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity183)
(c/seq-c [(c/param (c/tag 'fn-arity183) 0)]
c/no-tail)
;; returns
(c/coll-of-c (c/seq-c []
(c/coll-of-c c/top-type))))})]
)]))}), 8 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity306)
(c/list-c [(c/multi [(c/param (c/tag 'fn-arity306) 0)
(c/vect-c [] (c/coll-of-c c/top-type))
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity306) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity306) 1)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity306) 1)
)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity306) 1)
[(c/type-op c/inner-type-of-op
(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity306) 0)])
)]
)])))), 3 (c/fn-arity
(c/tag 'fn-arity305)
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity305) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity305) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity305) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity305) 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'flat-map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])
0
))
(c/param (c/tag 'flat-map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'flat-map) 1)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity305) 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity305) 0)
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity329)
(c/seq-c [(c/param (c/tag 'fn-arity329) 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity305) 2)
[(c/vect-c [] c/no-tail)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity330)
(c/seq-c [(c/param (c/tag 'fn-arity330) 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "conj")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'conj)
(c/list-c [(c/param (c/tag 'conj) 0)
(c/param (c/tag 'conj) 1)]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/param (c/tag 'fn-arity330) 0)
(c/param (c/tag 'fn-arity329) 0)]
))})]
))})]
)
(c/ProtoImpls
(c/tag "reverse")
(c/fn-c []
{1 (c/fn-arity
(c/tag 'reverse)
(c/list-c [(c/param (c/tag 'reverse) 0)]
c/no-tail)
;; returns
c/top-type)})

{2 (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity241)
(c/list-c [(c/multi [c/strbuff-constraint
(c/param (c/tag 'fn-arity241) 0)])]
c/no-tail)
;; returns
(c/multi [c/strbuff-constraint
(c/coll-of-c (c/multi [(c/type-op c/inner-type-of-op
(c/multi [c/strbuff-constraint
(c/param (c/tag 'fn-arity241) 0)])
)
c/substr-constraint]))]))}), 5 (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity240)
(c/list-c [(c/multi [c/substr-constraint
(c/param (c/tag 'fn-arity240) 0)])]
c/no-tail)
;; returns
(c/multi [c/strbuff-constraint
(c/coll-of-c (c/multi [(c/type-op c/inner-type-of-op
(c/multi [c/substr-constraint
(c/param (c/tag 'fn-arity240) 0)])
)
c/substr-constraint]))]))}), 6 (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity82)
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity82) 0)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/type-op c/inner-type-of-op
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity82) 0)])
))))}), 8 (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity88)
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity88) 0)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/type-op c/inner-type-of-op
(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity88) 0)])
))))})})]
))}), 56 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity553)
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".x")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity553) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity553) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity553) 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents (c/type-op c/call-value-op
(c/param (c/tag 'fn-arity553) 1)
)
(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag 'fn-arity553) 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity554) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity554) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity553) 0)
[(c/Field (c/tag ".x"))]
)])]
)
}
c/fn-constraint
 empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag 'fn-arity552)
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".x")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity552) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity552) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity552) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity552) 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity552) 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity554) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity554) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity553) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity552) 0)
[(c/Field (c/tag ".x"))]
)])]
)
(c/ReifiedConstraint 59 (c/tag "* RecurseFinal constructor at core: 2559 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag '* RecurseFinal constructor at core: 2559 *)
(c/seq-c [c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "RecurseFinal")
{}
{c/contents c/top-type
(c/Field (c/tag ".x")) (c/param (c/tag '* RecurseFinal constructor at core: 2559 *) 1)
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")]
))}), 15 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity349)
(c/list-c [(c/multi [(c/param (c/tag 'fn-arity349) 0)
c/promise-constraint])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity349) 1)])]
c/no-tail)
;; returns
(c/multi [(c/param (c/tag 'new-p) 0)
c/promise-constraint]))}), 16 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity370)
(c/list-c [(c/multi [(c/param (c/tag 'fn-arity370) 0)
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity370) 1)])]
c/no-tail)
;; returns
(c/multi [(c/param (c/tag 'new-fut) 0)
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")]))}), 55 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity556)
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".x")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity556) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity556) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity556) 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents (c/type-op c/call-value-op
(c/param (c/tag 'fn-arity556) 1)
)
(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag 'fn-arity556) 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity557) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity557) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity556) 0)
[(c/Field (c/tag ".x"))]
)])]
)
}
c/fn-constraint
 empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag 'fn-arity555)
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".x")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity555) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity555) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity555) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity555) 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity555) 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity557) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity557) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity556) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity555) 0)
[(c/Field (c/tag ".x"))]
)])]
)
(c/ReifiedConstraint 60 (c/tag "* RecurseWith constructor at core: 2571 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag '* RecurseWith constructor at core: 2571 *)
(c/seq-c [c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "RecurseWith")
{}
{c/contents c/top-type
(c/Field (c/tag ".x")) (c/param (c/tag '* RecurseWith constructor at core: 2571 *) 1)
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")]
))}), 7 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity129)
(c/list-c [(c/multi [(c/param (c/tag 'fn-arity129) 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity129) 1)
0
))
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity129) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity129) 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity129) 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity129) 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity129) 0)
)])]
)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity129) 1)
)]))), 3 (c/fn-arity
(c/tag 'fn-arity128)
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag 'fn-arity128) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity128) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity128) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity128) 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/inner-type-of-op
(c/MaybeConstraint (c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
))), 3 (c/fn-arity
(c/tag 'map)
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'map) 1)
0
))
(c/param (c/tag 'map) 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'map) 2)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity128) 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag 'fn-arity128) 0)
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity3)
(c/seq-c [(c/param (c/tag 'fn-arity3) 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag 'fn-arity3) 0)))})]
))
)
(c/type-op c/call-value-op
(c/param (c/tag 'fn-arity128) 2)
[c/maybe-constraint]
)]))}), 35 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity628)
(c/list-c [(c/multi [(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity641) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity640) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity639) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity638) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity637) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity636) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity635) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity634) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity633) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity632) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity631) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity630) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity629) 0)
[(c/Field (c/tag ".set-map"))]
)])
}
{c/contents c/top-type
(c/Field (c/tag ".set-map")) (c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity641) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity640) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity639) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity638) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity637) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity636) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity635) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity634) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity633) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity632) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity631) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity630) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity629) 0)
[(c/Field (c/tag ".set-map"))]
)])
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity628) 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag 'fn-arity628) 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag 'fn-arity628) 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{c/contents (c/type-op c/call-value-op
(c/param (c/tag 'fn-arity628) 1)
)
(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
(c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity641)
(c/seq-c [(c/multi [(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{c/contents c/top-type
(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity641) 0)])
(c/param (c/tag 'fn-arity641) 1)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "get")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'get)
(c/list-c [(c/param (c/tag 'get) 0)
(c/param (c/tag 'get) 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag 'get) 0)
)))})

{})
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity641) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])])
(c/param (c/tag 'fn-arity641) 1)]
))})
 empty-list c/no-symbol ""))})}) 

 arg-cs [(c/vect-c [(c/SymbolConstraint 'bogus)]
c/no-tail), (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity120)
(c/seq-c [(c/multi [c/int-constraint
(c/param (c/tag 'fn-arity120) 0)])]
c/no-tail)
;; returns
c/int-constraint)})] 

 result-type (c/NoValues [c/int-constraint
(c/SymbolConstraint 'bogus)]) 

 Conflicting assertions (1082)  at assertion-tests/static-fixed-dynamic-result-type-1.toc: 6
Symbol 'bogus from:    Integer c/no-int from:
                       core: 1204            
                       core: 95              
                       core: 97              
                                             
                                             


*** arity 1266 assertion-tests/return-sum-type.toc: 2 foo fn-arity874 

 pts (c/seq-c [(c/param (c/tag 'fn-arity874) 0)]
c/no-tail) 

 result-c (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")]) 

 body-c (c/StrBuffConstraint "") 

 final-c (c/NoValues [(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/StrBuffConstraint "")]) 

 failure-c (c/NoValues [(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/StrBuffConstraint "")]) 

 Conflicting assertions (1276)  at assertion-tests/return-sum-type.toc: 2
String from:    ArrayNode from:
                               
                               


*** site 1076 assertion-tests/proto-fn-constraint-prop.toc: 14 
 (g (SomeType 'nop) "62") 

 target-c (c/ProtoImpls
(c/tag "g")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'g)
(c/list-c [c/top-type
(c/param (c/tag 'g) 1)]
c/no-tail)
;; returns
c/top-type)})

{195 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity876)
(c/list-c [(c/multi [(c/ReifiedConstraint 195 (c/tag "SomeType")
{(c/Field (c/tag ".y")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".y")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity876) 0)])
(c/multi [c/int-constraint
(c/param (c/tag 'fn-arity876) 1)])]
c/no-tail)
;; returns
c/int-constraint)})}) 

 arg-cs [(c/ReifiedConstraint 195 (c/tag "SomeType")
{(c/Field (c/tag ".y")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".y")) (c/SymbolConstraint 'nop)
}
c/fn-constraint
 empty-list c/no-symbol ""), (c/StrBuffConstraint "62")] 

 result-type (c/NoValues [c/int-constraint
(c/StrBuffConstraint "62")]) 

 Conflicting assertions (1082)  at assertion-tests/proto-fn-constraint-prop.toc: 14
String from:    Integer c/no-int from:         
                proto-fn-constraint-prop.toc: 2
                proto-fn-constraint-prop.toc: 3
                core: 1202                     
                core: 1204                     
                core: 95                       
                core: 97                       
                                               
                                               


*** Conflicting assertions (510)  at assertion-tests/return-bad-type.toc: 8
List from:                String from:
return-bad-type.toc: 4    core: 22    
                                      
                                      


*** site 1076 assertion-tests/static-fixed-dynamic-result-type-2.toc: 9 
 (inc (g 'nope 'bogus)) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity120)
(c/seq-c [(c/multi [c/int-constraint
(c/param (c/tag 'fn-arity120) 0)])]
c/no-tail)
;; returns
c/int-constraint)}) 

 arg-cs [(c/SymbolConstraint 'bogus)] 

 result-type (c/NoValues [c/int-constraint
(c/SymbolConstraint 'bogus)]) 

 Conflicting assertions (1082)  at assertion-tests/static-fixed-dynamic-result-type-2.toc: 9
Symbol 'bogus from:    Integer c/no-int from:
                       core: 1204            
                       core: 95              
                       core: 97              
                                             
                                             


*** site 1076 assertion-tests/simple-conflict.toc: 9 
 (bad "one") 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity881)
(c/seq-c [(c/multi [c/int-constraint
(c/param (c/tag 'fn-arity881) 0)])]
c/no-tail)
;; returns
(c/vect-c [c/int-constraint]
c/no-tail))}) 

 arg-cs [(c/StrBuffConstraint "one")] 

 result-type (c/NoValues [c/int-constraint
(c/StrBuffConstraint "one")]) 

 Conflicting assertions (1082)  at assertion-tests/simple-conflict.toc: 9
String from:    Integer c/no-int from:
                simple-conflict.toc: 4
                simple-conflict.toc: 3
                                      
                                      


*** site 1076 assertion-tests/preserve-asserts.toc: 14 
 (assoc (Checked (hash-map )) "bogus" 'bogus) 

 target-c (c/ProtoImpls
(c/tag "assoc")
(c/fn-c []
{3 (c/fn-arity
(c/tag 'assoc)
(c/list-c [(c/param (c/tag 'assoc) 0)
(c/param (c/tag 'assoc) 1)
(c/param (c/tag 'assoc) 2)]
c/no-tail)
;; returns
c/top-type)})

{12 (c/fn-c []
{3 (c/fn-arity
(c/tag 'fn-arity486)
(c/list-c [(c/multi [(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity486) 0)])
(c/param (c/tag 'fn-arity486) 1)
(c/param (c/tag 'fn-arity486) 2)]
c/no-tail)
;; returns
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")]))}), 13 (c/fn-c []
{3 (c/fn-arity
(c/tag 'fn-arity485)
(c/list-c [(c/multi [(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity485) 0)])
(c/param (c/tag 'fn-arity485) 1)
(c/param (c/tag 'fn-arity485) 2)]
c/no-tail)
;; returns
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")]))}), 193 (c/fn-c []
{3 (c/fn-arity
(c/tag 'fn-arity869)
(c/list-c [(c/multi [(c/ReifiedConstraint 193 (c/tag "Checked")
{(c/Field (c/tag ".m")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{c/contents c/top-type
(c/Field (c/tag ".m")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity869) 0)])
(c/param (c/tag 'fn-arity869) 1)
(c/multi [(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{c/contents c/top-type
(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
(c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity641)
(c/seq-c [(c/multi [(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{c/contents c/top-type
(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity641) 0)])
(c/param (c/tag 'fn-arity641) 1)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "get")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'get)
(c/list-c [(c/param (c/tag 'get) 0)
(c/param (c/tag 'get) 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag 'get) 0)
)))})

{})
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity641) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])])
(c/param (c/tag 'fn-arity641) 1)]
))})
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity869) 2)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 193 (c/tag "Checked")
{(c/Field (c/tag ".m")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{c/contents c/top-type
(c/Field (c/tag ".m")) (c/sum-c [(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "assoc")
(c/fn-c []
{3 (c/fn-arity
(c/tag 'assoc)
(c/list-c [(c/param (c/tag 'assoc) 0)
(c/param (c/tag 'assoc) 1)
(c/param (c/tag 'assoc) 2)]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity869) 0)
[(c/Field (c/tag ".m"))]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])])
(c/param (c/tag 'fn-arity869) 1)
(c/multi [(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{c/contents c/top-type
(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
(c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity641)
(c/seq-c [(c/multi [(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{c/contents c/top-type
(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity641) 0)])
(c/param (c/tag 'fn-arity641) 1)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "get")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'get)
(c/list-c [(c/param (c/tag 'get) 0)
(c/param (c/tag 'get) 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag 'get) 0)
)))})

{})
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity641) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])])
(c/param (c/tag 'fn-arity641) 1)]
))})
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity869) 2)])]
)
(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "assoc")
(c/fn-c []
{3 (c/fn-arity
(c/tag 'assoc)
(c/list-c [(c/param (c/tag 'assoc) 0)
(c/param (c/tag 'assoc) 1)
(c/param (c/tag 'assoc) 2)]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity869) 0)
[(c/Field (c/tag ".m"))]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])])
(c/param (c/tag 'fn-arity869) 1)
(c/multi [(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{c/contents c/top-type
(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
(c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity641)
(c/seq-c [(c/multi [(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{c/contents c/top-type
(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity641) 0)])
(c/param (c/tag 'fn-arity641) 1)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "get")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'get)
(c/list-c [(c/param (c/tag 'get) 0)
(c/param (c/tag 'get) 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag 'get) 0)
)))})

{})
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity641) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])])
(c/param (c/tag 'fn-arity641) 1)]
))})
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity869) 2)])]
)
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "assoc")
(c/fn-c []
{3 (c/fn-arity
(c/tag 'assoc)
(c/list-c [(c/param (c/tag 'assoc) 0)
(c/param (c/tag 'assoc) 1)
(c/param (c/tag 'assoc) 2)]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity869) 0)
[(c/Field (c/tag ".m"))]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])])
(c/param (c/tag 'fn-arity869) 1)
(c/multi [(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{c/contents c/top-type
(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
(c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity641)
(c/seq-c [(c/multi [(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{c/contents c/top-type
(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity641) 0)])
(c/param (c/tag 'fn-arity641) 1)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "get")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'get)
(c/list-c [(c/param (c/tag 'get) 0)
(c/param (c/tag 'get) 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag 'get) 0)
)))})

{})
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity641) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])])
(c/param (c/tag 'fn-arity641) 1)]
))})
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity869) 2)])]
)
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])])
}
c/fn-constraint
 empty-list c/no-symbol ""))}), 11 (c/fn-c []
{3 (c/fn-arity
(c/tag 'fn-arity487)
(c/list-c [(c/multi [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity487) 0)])
(c/param (c/tag 'fn-arity487) 1)
(c/param (c/tag 'fn-arity487) 2)]
c/no-tail)
;; returns
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")]))}), 7 (c/fn-c []
{3 (c/fn-arity
(c/tag 'fn-arity135)
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag 'fn-arity135) 0)])
(c/param (c/tag 'fn-arity135) 1)
(c/param (c/tag 'fn-arity135) 2)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag 'fn-arity135) 2)))})}) 

 arg-cs [(c/ReifiedConstraint 193 (c/tag "Checked")
{(c/Field (c/tag ".m")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{c/contents c/top-type
(c/Field (c/tag ".m")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
c/fn-constraint
 empty-list c/no-symbol ""), (c/StrBuffConstraint "bogus"), (c/SymbolConstraint 'bogus)] 

 result-type (c/NoValues [(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{c/contents c/top-type
(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
(c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity641)
(c/seq-c [(c/multi [(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{c/contents c/top-type
(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity641) 0)])
(c/param (c/tag 'fn-arity641) 1)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "get")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'get)
(c/list-c [(c/param (c/tag 'get) 0)
(c/param (c/tag 'get) 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag 'get) 0)
)))})

{})
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'fn-arity641) 0)
[(c/Field (c/tag ".set-map"))]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])])
(c/param (c/tag 'fn-arity641) 1)]
))})
 empty-list c/no-symbol "")
(c/SymbolConstraint 'bogus)]) 

 Conflicting assertions (1082)  at assertion-tests/preserve-asserts.toc: 14
Symbol 'bogus from:    HashSet from:          
                       preserve-asserts.toc: 9
                       preserve-asserts.toc: 7
                       core: 2810             
                                              
                                              


*** site 1076 assertion-tests/tail-either-2.toc: 9 
 (f 1) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity882)
(c/seq-c [(c/param (c/tag 'fn-arity882) 0)]
c/no-tail)
;; returns
(c/sum-c [(c/multi [c/strbuff-constraint
(c/param (c/tag 'fn-arity882) 0)])
(c/multi [c/substr-constraint
(c/param (c/tag 'fn-arity882) 0)])]))}) 

 arg-cs [(c/IntegerConstraint 1 2147483647 -2147483648)] 

 result-type (c/NoValues [c/strbuff-constraint
(c/IntegerConstraint 1 2147483647 -2147483648)]) 

 Conflicting assertions (1082)  at assertion-tests/tail-either-2.toc: 9
Integer 1 from:    String from:        
                   tail-either-2.toc: 3
                   core: 22            
                                       
                                       


*** site 1076 assertion-tests/variadic-constraints.toc: 6 
 (f 1 2 3) 

 target-c (c/fn-c []
{c/variadic (c/fn-arity
(c/tag 'fn-arity883)
(c/seq-c [(c/param (c/tag 'fn-arity883) 0)
(c/multi [(c/sum-c [c/strbuff-constraint
c/substr-constraint])
(c/param (c/tag 'fn-arity883) 1)])]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity883) 2)]))
;; returns
c/substr-constraint)}) 

 arg-cs [(c/IntegerConstraint 1 2147483647 -2147483648), (c/IntegerConstraint 2 2147483647 -2147483648), (c/IntegerConstraint 3 2147483647 -2147483648)] 

 result-type (c/NoValues [c/strbuff-constraint
(c/IntegerConstraint 2 2147483647 -2147483648)]) 

 Conflicting assertions (1082)  at assertion-tests/variadic-constraints.toc: 6
Integer 2 from:    String from:               
                   variadic-constraints.toc: 3
                   core: 333                  
                   core: 336                  
                   core: 22                   
                                              
                                              


*** Conflicting assertions (510)  at assertion-tests/impl-violates-proto.toc: 14
SecondType from:              field 'y' required from:
impl-violates-proto.toc: 8                            
impl-violates-proto.toc: 4                            
                                                      
                                                      


*** Loaded assertion-tests/variadic-count-1.toc

*** Conflicting assertions (706)  at assertion-tests/vector-butlast.toc: 3
Can not contain other values from:    No Tail for sequence


*** site 1076 assertion-tests/vect-len.toc: 9 
 (f (vector 'a)) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity891)
(c/seq-c [(c/multi [(c/seq-c [c/top-type
c/top-type
c/top-type]
(c/coll-of-c c/top-type))
(c/param (c/tag 'fn-arity891) 0)])]
c/no-tail)
;; returns
c/int-constraint)}) 

 arg-cs [(c/vect-c [(c/SymbolConstraint 'a)]
c/no-tail)] 

 result-type (c/NoValues [(c/seq-c [c/top-type
c/top-type]
(c/coll-of-c c/top-type))
c/no-tail]) 

 Conflicting assertions (1082)  at assertion-tests/vect-len.toc: 9
No Tail for sequence    Sequence from: 


*** Loaded assertion-tests/unkown-field.toc

*** Conflicting assertions (415)  at assertion-tests/nested-field-1.toc: 3
Second from:             Symbol c/no-symbol from:
nested-field-1.toc: 2    nested-field-1.toc: 10  
                         nested-field-1.toc: 2   
                         nested-field-1.toc: 3   
                                                 
                                                 


*** site 1076 assertion-tests/return-list-of-1.toc: 12 
 (bloop (Bogus "9") 'bogus) 

 target-c (c/ProtoImpls
(c/tag "bloop")
(c/fn-c []
{2 (c/fn-arity
(c/tag 'bloop)
(c/list-c [c/top-type
(c/param (c/tag 'bloop) 1)]
c/no-tail)
;; returns
(c/seq-c [] (c/coll-of-c c/int-constraint)))})

{213 (c/fn-c []
{2 (c/fn-arity
(c/tag 'fn-arity894)
(c/list-c [(c/multi [(c/ReifiedConstraint 213 (c/tag "Bogus")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".x")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity894) 0)])
(c/param (c/tag 'fn-arity894) 1)]
c/no-tail)
;; returns
(c/list-c [(c/multi [c/int-constraint
(c/param (c/tag 'fn-arity894) 1)])
(c/IntegerConstraint 88 2147483647 -2147483648)]
c/no-tail))})}) 

 arg-cs [(c/ReifiedConstraint 213 (c/tag "Bogus")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".x")) (c/StrBuffConstraint "9")
}
c/fn-constraint
 empty-list c/no-symbol ""), (c/SymbolConstraint 'bogus)] 

 result-type (c/NoValues [c/int-constraint
(c/SymbolConstraint 'bogus)]) 

 Conflicting assertions (1082)  at assertion-tests/return-list-of-1.toc: 12
Symbol 'bogus from:    Integer c/no-int from: 
                       return-list-of-1.toc: 4
                                              
                                              


*** site 1076 assertion-tests/restrict-conflict.toc: 27 
 (only-another xtreme) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity896)
(c/seq-c [(c/multi [(c/ReifiedConstraint 215 (c/tag "AnotherType")
{(c/Field (c/tag ".x")) c/top-type
(c/Field (c/tag ".z")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".x")) c/top-type
(c/Field (c/tag ".z")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity896) 0)])]
c/no-tail)
;; returns
(c/multi [(c/ReifiedConstraint 215 (c/tag "AnotherType")
{(c/Field (c/tag ".x")) c/top-type
(c/Field (c/tag ".z")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".x")) c/top-type
(c/Field (c/tag ".z")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity896) 0)]))}) 

 arg-cs [(c/multi [(c/param (c/tag 'fn-arity897) 0)
(c/ReifiedConstraint 201 (c/tag "OneType")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".x")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")])] 

 result-type (c/NoValues [(c/ReifiedConstraint 201 (c/tag "OneType")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".x")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/ReifiedConstraint 215 (c/tag "AnotherType")
{(c/Field (c/tag ".x")) c/top-type
(c/Field (c/tag ".z")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".x")) c/top-type
(c/Field (c/tag ".z")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")]) 

 Conflicting assertions (1082)  at assertion-tests/restrict-conflict.toc: 27
AnotherType from:            OneType from:            
restrict-conflict.toc: 19    restrict-conflict.toc: 24
restrict-conflict.toc: 6     restrict-conflict.toc: 10
                             restrict-conflict.toc: 2 
                                                      
                                                      


*** Conflicting assertions (415)  at assertion-tests/restrict-nested-item.toc: 27
AnotherType from:               OneType from:               
restrict-nested-item.toc: 18    restrict-nested-item.toc: 13
restrict-nested-item.toc: 19    restrict-nested-item.toc: 14
restrict-nested-item.toc: 6     restrict-nested-item.toc: 2 
                                                            
                                                            


*** site 1076 assertion-tests/update-field-1.toc: 11 
 (.x (SomeType "string" 7) 3) 

 target-c (c/ProtoImpls
(c/tag ".x")
(c/fn-c []
{2 (c/fn-arity
(c/tag '.x_setter)
(c/seq-c [(c/multi [(c/param (c/tag '.x_setter) 0)
(c/ReifiedConstraint 0 (c/tag "field 'x' required")
{}
{(c/Field (c/tag ".x")) c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
(c/param (c/tag '.x_setter) 1)]
c/no-tail)
;; returns
(c/type-op c/set-to-op
(c/param (c/tag '.x_setter) 0)
[[(c/Field (c/tag ".x"))]
(c/param (c/tag '.x_setter) 1)]
)), 1 (c/fn-arity
(c/tag '.x_getter)
(c/seq-c [(c/multi [(c/param (c/tag '.x_getter) 0)
(c/ReifiedConstraint 0 (c/tag "field 'x' required")
{}
{(c/Field (c/tag ".x")) c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])]
c/no-tail)
;; returns
(c/type-op c/get-from-op
(c/param (c/tag '.x_getter) 0)
[(c/Field (c/tag ".x"))]
))})

{56 (c/fn-c []
{2 (c/fn-arity
(c/tag 'RecurseFinal-.x-setter)
(c/seq-c [(c/multi [(c/param (c/tag 'RecurseFinal-.x-setter) 0)
(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".x")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")])
(c/multi [(c/param (c/tag 'RecurseFinal-.x-setter) 1)
c/top-type])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/set-to-op
(c/param (c/tag 'RecurseFinal-.x-setter) 0)
[[(c/Field (c/tag ".x"))]
(c/param (c/tag 'RecurseFinal-.x-setter) 1)]
)
(c/type-op c/set-to-op
(c/param (c/tag 'RecurseFinal-.x-setter) 0)
[[(c/Field (c/tag ".x"))]
(c/param (c/tag 'RecurseFinal-.x-setter) 1)]
)])), 1 (c/fn-arity
(c/tag 'RecurseFinal-.x-getter)
(c/seq-c [(c/multi [(c/param (c/tag 'RecurseFinal-.x-getter) 0)
(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".x")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'RecurseFinal-.x-getter) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'RecurseFinal-.x-getter) 0)
[(c/Field (c/tag ".x"))]
)]))}), 55 (c/fn-c []
{2 (c/fn-arity
(c/tag 'RecurseWith-.x-setter)
(c/seq-c [(c/multi [(c/param (c/tag 'RecurseWith-.x-setter) 0)
(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".x")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")])
(c/multi [(c/param (c/tag 'RecurseWith-.x-setter) 1)
c/top-type])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/set-to-op
(c/param (c/tag 'RecurseWith-.x-setter) 0)
[[(c/Field (c/tag ".x"))]
(c/param (c/tag 'RecurseWith-.x-setter) 1)]
)
(c/type-op c/set-to-op
(c/param (c/tag 'RecurseWith-.x-setter) 0)
[[(c/Field (c/tag ".x"))]
(c/param (c/tag 'RecurseWith-.x-setter) 1)]
)])), 1 (c/fn-arity
(c/tag 'RecurseWith-.x-getter)
(c/seq-c [(c/multi [(c/param (c/tag 'RecurseWith-.x-getter) 0)
(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".x")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'RecurseWith-.x-getter) 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag 'RecurseWith-.x-getter) 0)
[(c/Field (c/tag ".x"))]
)]))}), 223 (c/fn-c []
{2 (c/fn-arity
(c/tag 'SomeType-.x-setter)
(c/seq-c [(c/multi [(c/param (c/tag 'SomeType-.x-setter) 0)
(c/ReifiedConstraint 223 (c/tag "SomeType")
{(c/Field (c/tag ".x")) (c/sum-c [c/strbuff-constraint
c/substr-constraint])
(c/Field (c/tag ".y")) c/int-constraint
}
{c/contents c/top-type
(c/Field (c/tag ".x")) (c/sum-c [c/strbuff-constraint
c/substr-constraint])
(c/Field (c/tag ".y")) c/int-constraint
}
c/fn-constraint
 empty-list c/no-symbol "")])
(c/multi [(c/param (c/tag 'SomeType-.x-setter) 1)
(c/sum-c [c/strbuff-constraint
c/substr-constraint])])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/set-to-op
(c/param (c/tag 'SomeType-.x-setter) 0)
[[(c/Field (c/tag ".x"))]
(c/param (c/tag 'SomeType-.x-setter) 1)]
)
(c/type-op c/set-to-op
(c/param (c/tag 'SomeType-.x-setter) 0)
[[(c/Field (c/tag ".x"))]
(c/param (c/tag 'SomeType-.x-setter) 1)]
)])), 1 (c/fn-arity
(c/tag 'SomeType-.x-getter)
(c/seq-c [(c/multi [(c/param (c/tag 'SomeType-.x-getter) 0)
(c/ReifiedConstraint 223 (c/tag "SomeType")
{(c/Field (c/tag ".x")) (c/sum-c [c/strbuff-constraint
c/substr-constraint])
(c/Field (c/tag ".y")) c/int-constraint
}
{c/contents c/top-type
(c/Field (c/tag ".x")) (c/sum-c [c/strbuff-constraint
c/substr-constraint])
(c/Field (c/tag ".y")) c/int-constraint
}
c/fn-constraint
 empty-list c/no-symbol "")])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/get-from-op
(c/param (c/tag 'SomeType-.x-getter) 0)
[(c/Field (c/tag ".x"))]
)
(c/sum-c [c/strbuff-constraint
c/substr-constraint])]))})}) 

 arg-cs [(c/ReifiedConstraint 223 (c/tag "SomeType")
{(c/Field (c/tag ".x")) (c/sum-c [c/strbuff-constraint
c/substr-constraint])
(c/Field (c/tag ".y")) c/int-constraint
}
{c/contents c/top-type
(c/Field (c/tag ".x")) (c/StrBuffConstraint "string")
(c/Field (c/tag ".y")) (c/IntegerConstraint 7 2147483647 -2147483648)
}
c/fn-constraint
 empty-list c/no-symbol ""), (c/IntegerConstraint 3 2147483647 -2147483648)] 

 result-type (c/NoValues [c/strbuff-constraint
(c/IntegerConstraint 3 2147483647 -2147483648)]) 

 Conflicting assertions (1082)  at assertion-tests/update-field-1.toc: 11
Integer 3 from:    String from:
                   core: 22    
                               
                               


*** site 1076 assertion-tests/restrict-param.toc: 24 
 (bad (AnotherType 'x 'z)) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity906)
(c/seq-c [(c/multi [(c/ReifiedConstraint 209 (c/tag "OneType")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".x")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity906) 0)])]
c/no-tail)
;; returns
(c/multi [(c/ReifiedConstraint 209 (c/tag "OneType")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".x")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag 'fn-arity906) 0)]))}) 

 arg-cs [(c/ReifiedConstraint 227 (c/tag "AnotherType")
{(c/Field (c/tag ".x")) c/top-type
(c/Field (c/tag ".z")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".x")) (c/SymbolConstraint 'x)
(c/Field (c/tag ".z")) (c/SymbolConstraint 'z)
}
c/fn-constraint
 empty-list c/no-symbol "")] 

 result-type (c/NoValues [(c/ReifiedConstraint 209 (c/tag "OneType")
{(c/Field (c/tag ".x")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".x")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/ReifiedConstraint 227 (c/tag "AnotherType")
{(c/Field (c/tag ".x")) c/top-type
(c/Field (c/tag ".z")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".x")) (c/SymbolConstraint 'x)
(c/Field (c/tag ".z")) (c/SymbolConstraint 'z)
}
c/fn-constraint
 empty-list c/no-symbol "")]) 

 Conflicting assertions (1082)  at assertion-tests/restrict-param.toc: 24
AnotherType from:    OneType from:         
                     restrict-param.toc: 21
                     restrict-param.toc: 19
                     restrict-param.toc: 10
                     restrict-param.toc: 2 
                                           
                                           


*** site 1076 assertion-tests/nested-field-2.toc: 26 
 (inc (.x (.x (.x (First (Second 's (Third 'q))))))) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity120)
(c/seq-c [(c/multi [c/int-constraint
(c/param (c/tag 'fn-arity120) 0)])]
c/no-tail)
;; returns
c/int-constraint)}) 

 arg-cs [(c/SymbolConstraint 'q)] 

 result-type (c/NoValues [c/int-constraint
(c/SymbolConstraint 'q)]) 

 Conflicting assertions (1082)  at assertion-tests/nested-field-2.toc: 26
Symbol 'q from:    Integer c/no-int from:
                   core: 1204            
                   core: 95              
                   core: 97              
                                         
                                         


*** site 1076 assertion-tests/dynamic-field-type-9.toc: 47 
 (inc (.x (.p (.z (.t (f 'wur (First (Second 's (Third (Fourth 9)))) 'q)))))) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag 'fn-arity120)
(c/seq-c [(c/multi [c/int-constraint
(c/param (c/tag 'fn-arity120) 0)])]
c/no-tail)
;; returns
c/int-constraint)}) 

 arg-cs [(c/SymbolConstraint 'q)] 

 result-type (c/NoValues [c/int-constraint
(c/SymbolConstraint 'q)]) 

 Conflicting assertions (1082)  at assertion-tests/dynamic-field-type-9.toc: 47
Symbol 'q from:    Integer c/no-int from:
                   core: 1204            
                   core: 95              
                   core: 97              
                                         
                                         

malloc count: 2810562  free count: 2810562  diff: 0
