
*** creating-parser

*** parser-created 2591

*** Loading core

*** done-parsing 2144 core 219 forms

*** Loaded core

*** time-for-core 2604

*** Loading assertion-tests/add-items-list-2.toc

*** Loading assertion-tests/add-items-list-1.toc

*** Loading assertion-tests/and-constraints-1.toc

*** Loading assertion-tests/apply-constructor.toc

*** Loading assertion-tests/bad-and-1.toc

*** Loading assertion-tests/and-constraints-2.toc

*** Loading assertion-tests/bad-add.toc

*** Loading assertion-tests/bad-and-2.toc

*** Loading assertion-tests/bad-apply-constructor.toc

*** Loading assertion-tests/bad-and-clause.toc

*** done-parsing 2144 assertion-tests/bad-and-1.toc 2 forms

*** Loading assertion-tests/bad-arity-1.toc

*** done-parsing 2144 assertion-tests/bad-arity-1.toc 2 forms

*** Loading assertion-tests/bad-constructor-call.toc

*** done-parsing 2144 assertion-tests/bad-add.toc 3 forms

*** Loading assertion-tests/bad-constructor-param-1.toc

*** done-parsing 2144 assertion-tests/bad-and-2.toc 2 forms

*** Loading assertion-tests/bad-constructor-param-2.toc

*** done-parsing 2144 assertion-tests/and-constraints-2.toc 2 forms

*** Loading assertion-tests/bad-constructor-param-3.toc

*** done-parsing 2144 assertion-tests/apply-constructor.toc 3 forms

*** done-parsing 2144 assertion-tests/bad-constructor-call.toc 3 forms

*** Loading assertion-tests/bad-dipatch-type.toc

*** Loading assertion-tests/bad-field-1.toc

*** done-parsing 2144 assertion-tests/add-items-list-2.toc 5 forms

*** Loading assertion-tests/bad-field-2.toc

*** done-parsing 2144 assertion-tests/and-constraints-1.toc 2 forms

*** done-parsing 2144 assertion-tests/bad-apply-constructor.toc 2 forms

*** Loading assertion-tests/bad-field-4.toc

*** Loading assertion-tests/bad-field-5.toc

*** done-parsing 2144 assertion-tests/bad-field-1.toc 3 forms

*** Loading assertion-tests/bad-flat-map-inner.toc

*** done-parsing 2144 assertion-tests/bad-constructor-param-1.toc 2 forms

*** Loading assertion-tests/bad-function-returns-2.toc

*** done-parsing 2144 assertion-tests/bad-constructor-param-3.toc 2 forms

*** Loading assertion-tests/bad-function-returns-3.toc

*** done-parsing 2144 assertion-tests/bad-dipatch-type.toc 3 forms

*** Loading assertion-tests/bad-impl-arity.toc

*** done-parsing 2144 assertion-tests/bad-impl-arity.toc 1 forms

*** Loading assertion-tests/bad-impl-return-value.toc

*** done-parsing 2144 assertion-tests/bad-field-4.toc 3 forms

*** done-parsing 2144 assertion-tests/bad-function-returns-2.toc 2 forms

*** Loading assertion-tests/bad-inline-result-type.toc

*** Loading assertion-tests/bad-inner-10.toc

*** done-parsing 2144 assertion-tests/bad-field-2.toc 6 forms

*** Loading assertion-tests/bad-inner-11.toc

*** done-parsing 2144 assertion-tests/bad-field-5.toc 4 forms

*** Loading assertion-tests/bad-inner-12.toc

*** done-parsing 2144 assertion-tests/add-items-list-1.toc 5 forms

*** Loading assertion-tests/bad-inner-13.toc

*** done-parsing 2144 assertion-tests/bad-inline-result-type.toc 2 forms

*** Loading assertion-tests/bad-inner-15.toc

*** done-parsing 2144 assertion-tests/bad-function-returns-3.toc 3 forms

*** Loading assertion-tests/bad-inner-16.toc

*** done-parsing 2144 assertion-tests/bad-inner-15.toc 1 forms

*** Loading assertion-tests/bad-inner-17.toc

*** done-parsing 2144 assertion-tests/bad-impl-return-value.toc 3 forms

*** Loading assertion-tests/bad-inner-18.toc

*** done-parsing 2144 assertion-tests/bad-flat-map-inner.toc 2 forms

*** done-parsing 2144 assertion-tests/bad-inner-12.toc 2 forms

*** Loading assertion-tests/bad-inner-1.toc

*** Loading assertion-tests/bad-inner-2.toc

*** done-parsing 2144 assertion-tests/bad-inner-11.toc 3 forms

*** Loading assertion-tests/bad-inner-3.toc

*** done-parsing 2144 assertion-tests/bad-and-clause.toc 2 forms

*** done-parsing 2144 assertion-tests/bad-inner-10.toc 2 forms

*** Loading assertion-tests/bad-inner-4.toc

*** Loading assertion-tests/bad-inner-5.toc

*** done-parsing 2144 assertion-tests/bad-inner-13.toc 2 forms

*** Loading assertion-tests/bad-inner-9.toc

*** done-parsing 2144 assertion-tests/bad-constructor-param-2.toc 3 forms

*** done-parsing 2144 assertion-tests/bad-inner-1.toc 1 forms

*** Loading assertion-tests/bad-inner-or.toc

*** Loading assertion-tests/bad-let.toc

*** done-parsing 2144 assertion-tests/bad-inner-17.toc 2 forms

*** Loading assertion-tests/bad-list-of-1.toc

*** done-parsing 2144 assertion-tests/bad-inner-2.toc 1 forms

*** Loading assertion-tests/bad-nested-let.toc

*** done-parsing 2144 assertion-tests/bad-inner-9.toc 2 forms

*** done-parsing 2144 assertion-tests/bad-let.toc 2 forms

*** Loading assertion-tests/bad-or-1.toc

*** done-parsing 2144 assertion-tests/bad-inner-3.toc 4 forms

*** Loading assertion-tests/bad-or-2.toc

*** Loading assertion-tests/bad-proto-impl.toc

*** done-parsing 2144 assertion-tests/bad-inner-4.toc 1 forms

*** Loading assertion-tests/bad-result-sum-type.toc

*** done-parsing 2144 assertion-tests/bad-inner-18.toc 4 forms

*** Loading assertion-tests/bad-return-value.toc

*** done-parsing 2144 assertion-tests/bad-inner-5.toc 4 forms

*** Loading assertion-tests/bad-setter-call-1.toc

*** done-parsing 2144 assertion-tests/bad-list-of-1.toc 3 forms

*** Loading assertion-tests/bad-setter-call-2.toc

*** done-parsing 2144 assertion-tests/bad-inner-or.toc 4 forms

*** Loading assertion-tests/bad-type-comp.toc

*** done-parsing 2144 assertion-tests/bad-or-2.toc 2 forms

*** Loading assertion-tests/bad-vector-of-1.toc

*** done-parsing 2144 assertion-tests/bad-nested-let.toc 2 forms

*** Loading assertion-tests/bad-vect-wrap.toc

*** done-parsing 2144 assertion-tests/bad-proto-impl.toc 2 forms

*** Loading assertion-tests/butlast-inner-list.toc

*** done-parsing 2144 assertion-tests/bad-or-1.toc 3 forms

*** Loading assertion-tests/butlast-inner.toc

*** done-parsing 2144 assertion-tests/bad-vect-wrap.toc 1 forms

*** Loading assertion-tests/closure-1.toc

*** done-parsing 2144 assertion-tests/bad-vector-of-1.toc 2 forms

*** Loading assertion-tests/closure-2.toc

*** done-parsing 2144 assertion-tests/bad-result-sum-type.toc 3 forms

*** Loading assertion-tests/comp-bad-type-1.toc

*** done-parsing 2144 assertion-tests/butlast-inner.toc 3 forms

*** Loading assertion-tests/comp-bad-type-2.toc

*** done-parsing 2144 assertion-tests/bad-inner-16.toc 6 forms

*** Loading assertion-tests/constructor-param-1.toc

*** done-parsing 2144 assertion-tests/bad-setter-call-1.toc 3 forms

*** Loading assertion-tests/constructor-param-2.toc

*** done-parsing 2144 assertion-tests/butlast-inner-list.toc 3 forms

*** Loading assertion-tests/constructor-param-3.toc

*** done-parsing 2144 assertion-tests/bad-setter-call-2.toc 3 forms

*** Loading assertion-tests/contents-2.toc

*** done-parsing 2144 assertion-tests/comp-bad-type-1.toc 2 forms

*** Loading assertion-tests/destruct-variadic-tail-2.toc

*** done-parsing 2144 assertion-tests/comp-bad-type-2.toc 2 forms

*** Loading assertion-tests/dup-protocol-name.toc

*** done-parsing 2144 assertion-tests/bad-type-comp.toc 5 forms

*** Loading assertion-tests/dynamic-call-2.toc

*** done-parsing 2144 assertion-tests/constructor-param-1.toc 2 forms

*** Loading assertion-tests/dynamic-call-3.toc

*** done-parsing 2144 assertion-tests/contents-2.toc 3 forms

*** Loading assertion-tests/dynamic-call-5.toc

*** done-parsing 2144 assertion-tests/closure-1.toc 2 forms

*** Loading assertion-tests/dynamic-call-6.toc

*** done-parsing 2144 assertion-tests/closure-2.toc 2 forms

*** Loading assertion-tests/dynamic-call-7.toc

*** done-parsing 2144 assertion-tests/constructor-param-3.toc 3 forms

*** done-parsing 2144 assertion-tests/constructor-param-2.toc 3 forms

*** Loading assertion-tests/dynamic-call-9.toc

*** Loading assertion-tests/dynamic-field-type-12.toc

*** done-parsing 2144 assertion-tests/bad-return-value.toc 5 forms

*** Loading assertion-tests/dynamic-field-type-15.toc

*** done-parsing 2144 assertion-tests/dup-protocol-name.toc 3 forms

*** Loading assertion-tests/dynamic-field-type-16.toc

*** done-parsing 2144 assertion-tests/destruct-variadic-tail-2.toc 3 forms

*** Loading assertion-tests/dynamic-field-type-17.toc

*** done-parsing 2144 assertion-tests/dynamic-call-3.toc 3 forms

*** Loading assertion-tests/dynamic-field-type-18.toc

*** done-parsing 2144 assertion-tests/dynamic-call-9.toc 2 forms

*** Loading assertion-tests/dynamic-field-type-19.toc

*** done-parsing 2144 assertion-tests/dynamic-field-type-12.toc 2 forms

*** Loading assertion-tests/dynamic-field-type-1.toc

*** done-parsing 2144 assertion-tests/dynamic-call-2.toc 3 forms

*** done-parsing 2144 assertion-tests/dynamic-call-5.toc 3 forms

*** Loading assertion-tests/dynamic-field-type-2.toc

*** Loading assertion-tests/dynamic-field-type-3.toc

*** done-parsing 2144 assertion-tests/dynamic-field-type-15.toc 3 forms

*** Loading assertion-tests/dynamic-field-type-4.toc

*** done-parsing 2144 assertion-tests/dynamic-call-6.toc 3 forms

*** Loading assertion-tests/dynamic-field-type-5.toc

*** done-parsing 2144 assertion-tests/dynamic-call-7.toc 3 forms

*** Loading assertion-tests/dynamic-field-type-6.toc

*** done-parsing 2144 assertion-tests/dynamic-field-type-1.toc 2 forms

*** Loading assertion-tests/dynamic-field-type-7.toc

*** done-parsing 2144 assertion-tests/dynamic-field-type-17.toc 3 forms

*** Loading assertion-tests/dynamic-field-type-8.toc

*** done-parsing 2144 assertion-tests/dynamic-field-type-4.toc 3 forms

*** Loading assertion-tests/dynamic-field-type-9.toc

*** done-parsing 2144 assertion-tests/dynamic-field-type-2.toc 2 forms

*** done-parsing 2144 assertion-tests/dynamic-field-type-19.toc 3 forms

*** Loading assertion-tests/dynamic-nested-value-1.toc

*** Loading assertion-tests/dynamic-proto-param-1.toc

*** done-parsing 2144 assertion-tests/dynamic-field-type-5.toc 2 forms

*** done-parsing 2144 assertion-tests/dynamic-field-type-3.toc 2 forms

*** Loading assertion-tests/extract-type-failure.toc

*** Loading assertion-tests/field-and-seq-conflict.toc

*** done-parsing 2144 assertion-tests/dynamic-field-type-16.toc 4 forms

*** Loading assertion-tests/field-constraint.toc

*** done-parsing 2144 assertion-tests/dynamic-field-type-6.toc 2 forms

*** Loading assertion-tests/flat-map-param.toc

*** done-parsing 2144 assertion-tests/dynamic-field-type-18.toc 4 forms

*** Loading assertion-tests/get-field.toc

*** done-parsing 2144 assertion-tests/dynamic-nested-value-1.toc 2 forms

*** Loading assertion-tests/incompatible-tails.toc

*** done-parsing 2144 assertion-tests/dynamic-proto-param-1.toc 3 forms

*** Loading assertion-tests/insufficient-static-elements-1.toc

*** done-parsing 2144 assertion-tests/field-constraint.toc 3 forms

*** Loading assertion-tests/insufficient-static-elements-2.toc

*** done-parsing 2144 assertion-tests/get-field.toc 2 forms

*** Loading assertion-tests/insufficient-static-elements-3.toc

*** done-parsing 2144 assertion-tests/insufficient-static-elements-1.toc 2 forms

*** Loading assertion-tests/insufficient-static-elements-4.toc

*** done-parsing 2144 assertion-tests/extract-type-failure.toc 2 forms

*** Loading assertion-tests/int-too-large.toc

*** done-parsing 2144 assertion-tests/dynamic-field-type-7.toc 4 forms

*** Loading assertion-tests/items-constraints-1.toc

*** done-parsing 2144 assertion-tests/insufficient-static-elements-2.toc 2 forms

*** done-parsing 2144 assertion-tests/field-and-seq-conflict.toc 5 forms

*** Loading assertion-tests/items-constraints-3.toc

*** Loading assertion-tests/items-constraints-4.toc

*** done-parsing 2144 assertion-tests/dynamic-field-type-8.toc 4 forms

*** Loading assertion-tests/list-butlast.toc

*** done-parsing 2144 assertion-tests/items-constraints-1.toc 2 forms

*** Loading assertion-tests/list-items-types.toc

*** done-parsing 2144 assertion-tests/insufficient-static-elements-4.toc 2 forms

*** Loading assertion-tests/min-count.toc

*** done-parsing 2144 assertion-tests/items-constraints-3.toc 2 forms

*** done-parsing 2144 assertion-tests/insufficient-static-elements-3.toc 2 forms

*** Loading assertion-tests/missing-namespaced-sym.toc

*** Loading assertion-tests/multi-constraint-violated.toc

*** done-parsing 2144 assertion-tests/list-butlast.toc 1 forms

*** Loading assertion-tests/nested-destruct-1.toc

*** done-parsing 2144 assertion-tests/int-too-large.toc 2 forms

*** Loading assertion-tests/nested-destruct-2.toc

*** done-parsing 2144 assertion-tests/list-items-types.toc 2 forms

*** Loading assertion-tests/nested-destruct.toc

*** done-parsing 2144 assertion-tests/missing-namespaced-sym.toc 2 forms

*** Loading assertion-tests/nested-field-1.toc

*** done-parsing 2144 assertion-tests/min-count.toc 2 forms

*** Loading assertion-tests/nested-field-2.toc

*** done-parsing 2144 assertion-tests/incompatible-tails.toc 4 forms

*** Loading assertion-tests/nested-items-conflict.toc

*** done-parsing 2144 assertion-tests/items-constraints-4.toc 2 forms

*** Loading assertion-tests/or-prop.toc

*** done-parsing 2144 assertion-tests/dynamic-field-type-9.toc 6 forms

*** Loading assertion-tests/param-in-and-1.toc

*** done-parsing 2144 assertion-tests/nested-destruct.toc 2 forms

*** done-parsing 2144 assertion-tests/nested-destruct-2.toc 2 forms

*** done-parsing 2144 assertion-tests/nested-destruct-1.toc 2 forms

*** Loading assertion-tests/param-in-and-2.toc

*** Loading assertion-tests/param-in-and-3.toc

*** Loading assertion-tests/param-in-and-4.toc

*** done-parsing 2144 assertion-tests/nested-items-conflict.toc 4 forms

*** Loading assertion-tests/param-in-either-1.toc

*** done-parsing 2144 assertion-tests/param-in-and-1.toc 2 forms

*** Loading assertion-tests/param-in-either-2.toc

*** done-parsing 2144 assertion-tests/param-in-and-2.toc 2 forms

*** Loading assertion-tests/param-in-or-1.toc

*** done-parsing 2144 assertion-tests/nested-field-1.toc 3 forms

*** Loading assertion-tests/param-in-or-2.toc

*** done-parsing 2144 assertion-tests/param-in-either-1.toc 2 forms

*** Loading assertion-tests/param-in-or-3.toc

*** done-parsing 2144 assertion-tests/param-in-and-4.toc 2 forms

*** Loading assertion-tests/param-in-or-4.toc

*** done-parsing 2144 assertion-tests/flat-map-param.toc 3 forms

*** Loading assertion-tests/param-in-tail-cond-3.toc

*** done-parsing 2144 assertion-tests/param-in-and-3.toc 2 forms

*** Loading assertion-tests/preserve-asserts.toc

*** done-parsing 2144 assertion-tests/param-in-either-2.toc 2 forms

*** Loading assertion-tests/preserve-static-info-1.toc

*** done-parsing 2144 assertion-tests/multi-constraint-violated.toc 3 forms

*** Loading assertion-tests/preserve-static-info-2.toc

*** done-parsing 2144 assertion-tests/param-in-or-1.toc 2 forms

*** Loading assertion-tests/preserve-static-info-3.toc

*** done-parsing 2144 assertion-tests/param-in-or-2.toc 2 forms

*** Loading assertion-tests/propogate-inner-3.toc

*** done-parsing 2144 assertion-tests/param-in-or-4.toc 2 forms

*** Loading assertion-tests/propogate-inner-4.toc

*** done-parsing 2144 assertion-tests/param-in-or-3.toc 2 forms

*** Loading assertion-tests/propogate-through-let.toc

*** done-parsing 2144 assertion-tests/param-in-tail-cond-3.toc 2 forms

*** done-parsing 2144 assertion-tests/preserve-static-info-1.toc 2 forms

*** Loading assertion-tests/propogate-through-seq.toc

*** Loading assertion-tests/propogate-through-vec.toc

*** done-parsing 2144 assertion-tests/propogate-inner-3.toc 2 forms

*** Loading assertion-tests/proto-fn-constraint-prop.toc

*** done-parsing 2144 assertion-tests/nested-field-2.toc 4 forms

*** Loading assertion-tests/proto-fn-min-count.toc

*** done-parsing 2144 assertion-tests/propogate-inner-4.toc 2 forms

*** Loading assertion-tests/proto-fn-param.toc

*** done-parsing 2144 assertion-tests/preserve-static-info-2.toc 2 forms

*** done-parsing 2144 assertion-tests/propogate-through-seq.toc 1 forms

*** Loading assertion-tests/rest-of-list.toc

*** Loading assertion-tests/rest-of-vect.toc

*** done-parsing 2144 assertion-tests/propogate-through-vec.toc 1 forms

*** Loading assertion-tests/restrict-conflict.toc

*** done-parsing 2144 assertion-tests/propogate-through-let.toc 2 forms

*** Loading assertion-tests/restrict-nested-item.toc

*** done-parsing 2144 assertion-tests/proto-fn-param.toc 1 forms

*** Loading assertion-tests/restrict-param.toc

*** done-parsing 2144 assertion-tests/preserve-static-info-3.toc 2 forms

*** Loading assertion-tests/return-bad-type.toc

*** done-parsing 2144 assertion-tests/rest-of-vect.toc 1 forms

*** Loading assertion-tests/return-generic-1.toc

*** done-parsing 2144 assertion-tests/preserve-asserts.toc 2 forms

*** Loading assertion-tests/return-list-of-1.toc

*** done-parsing 2144 assertion-tests/rest-of-list.toc 1 forms

*** Loading assertion-tests/return-sum-type.toc

*** done-parsing 2144 assertion-tests/or-prop.toc 3 forms

*** Loading assertion-tests/simple-conflict.toc

*** done-parsing 2144 assertion-tests/proto-fn-constraint-prop.toc 4 forms

*** Loading assertion-tests/static-fixed-dynamic-result-type-1.toc

*** done-parsing 2144 assertion-tests/proto-fn-min-count.toc 3 forms

*** Loading assertion-tests/static-fixed-dynamic-result-type-2.toc

*** done-parsing 2144 assertion-tests/return-generic-1.toc 2 forms

*** Loading assertion-tests/tail-either-2.toc

*** done-parsing 2144 assertion-tests/static-fixed-dynamic-result-type-1.toc 2 forms

*** Loading assertion-tests/unkown-field.toc

*** done-parsing 2144 assertion-tests/simple-conflict.toc 2 forms

*** Loading assertion-tests/update-field-1.toc

*** done-parsing 2144 assertion-tests/return-sum-type.toc 2 forms

*** Loading assertion-tests/variadic-constraints.toc

*** done-parsing 2144 assertion-tests/static-fixed-dynamic-result-type-2.toc 3 forms

*** Loading assertion-tests/variadic-count-1.toc

*** done-parsing 2144 assertion-tests/return-bad-type.toc 3 forms

*** Loading assertion-tests/vect-len.toc

*** done-parsing 2144 assertion-tests/tail-either-2.toc 2 forms

*** Loading assertion-tests/vector-butlast.toc

*** done-parsing 2144 assertion-tests/variadic-count-1.toc 2 forms

*** done-parsing 2144 assertion-tests/variadic-constraints.toc 2 forms

*** done-parsing 2144 assertion-tests/unkown-field.toc 2 forms

*** done-parsing 2144 assertion-tests/return-list-of-1.toc 3 forms

*** done-parsing 2144 assertion-tests/vector-butlast.toc 1 forms

***  site 1151 assertion-tests/bad-arity-1.toc: 8 
 (bad "Bogus") 

 target-c (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity674")
(c/seq-c [(c/param (c/tag "fn-arity674") 0)
(c/param (c/tag "fn-arity674") 1)]
c/no-tail)
;; returns
(c/param (c/tag "fn-arity674") 0))}) 

 arg-cs [(c/StrBuffConstraint Bogusempty-list c/no-symbol "")] 

 result-type (c/NoValues [(c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity674")
(c/seq-c [(c/param (c/tag "fn-arity674") 0)
(c/param (c/tag "fn-arity674") 1)]
c/no-tail)
;; returns
(c/param (c/tag "fn-arity674") 0))})
(c/ReifiedConstraint 0 (c/tag "No arity found")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")]) 

 Conflicting assertions (1157)  at assertion-tests/bad-arity-1.toc: 8
Function from    No arity foundfrom:
                                    
                                    


***  site 1151 assertion-tests/bad-add.toc: 6 
 (+ 8 b a) 

 target-c (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity394")
(c/seq-c [(c/multi [c/int-constraint
(c/param (c/tag "fn-arity394") 0)])
(c/multi [c/int-constraint
(c/param (c/tag "fn-arity394") 1)])]
c/no-tail)
;; returns
c/int-constraint), c/variadic (c/fn-arity
(c/tag "fn-arity393")
(c/seq-c [] (c/multi [(c/list-c [] (c/coll-of-c c/int-constraint))
(c/param (c/tag "fn-arity393") 0)]))
;; returns
(c/sum-c [(c/IntConstraint 0 2147483647 -2147483648)
c/int-constraint])), 0 (c/fn-arity
(c/tag "fn-arity395")
(c/seq-c [] c/no-tail)
;; returns
(c/IntConstraint 0 2147483647 -2147483648))}) 

 arg-cs [(c/IntConstraint 8 2147483647 -2147483648), (c/SymConstraint s), (c/sum-c [(c/SubStrConstraint zempty-list c/no-symbol "")
(c/StrBuffConstraint zempty-list c/no-symbol "")])] 

 result-type (c/NoValues [c/int-constraint
(c/SymConstraint s)]) 

 Conflicting assertions (1157)  at assertion-tests/bad-add.toc: 6
Integer from:    Symbol sfrom:
core: 2149                    
core: 95                      
core: 97                      
                              
                              


*** Conflicting assertions (785)  at assertion-tests/bad-and-2.toc: 5
Integer 1from:    Maybe from:
                             
                             


*** Conflicting assertions (785)  at assertion-tests/bad-and-1.toc: 4
Maybe from:    ArrayNodefrom:
               core: 2527    
               core: 2530    
                             
                             


*** done-parsing 2144 assertion-tests/vect-len.toc 2 forms

***  site 1151 assertion-tests/and-constraints-2.toc: 8 
 (subs p 1) 

 target-c (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity44")
(c/seq-c [(c/multi [(c/sum-c [c/strbuff-constraint
c/substr-constraint])
(c/param (c/tag "fn-arity44") 0)])
(c/multi [(c/IntConstraint c/no-int 2147483647 0)
(c/param (c/tag "fn-arity44") 1)])]
c/no-tail)
;; returns
c/substr-constraint), 3 (c/fn-arity
(c/tag "fn-arity43")
(c/seq-c [(c/multi [(c/sum-c [c/strbuff-constraint
c/substr-constraint])
(c/param (c/tag "fn-arity43") 0)])
(c/multi [(c/IntConstraint c/no-int 2147483647 0)
(c/param (c/tag "fn-arity43") 1)])
(c/multi [(c/IntConstraint c/no-int 2147483647 0)
(c/param (c/tag "fn-arity43") 2)])]
c/no-tail)
;; returns
c/substr-constraint)}) 

 arg-cs [c/int-constraint, (c/IntConstraint 1 2147483647 -2147483648)] 

 result-type (c/NoValues [c/strbuff-constraint
c/int-constraint]) 

 Conflicting assertions (1157)  at assertion-tests/and-constraints-2.toc: 8
String from:    Integer from:
core: 339       core: 1208   
core: 22        core: 1210   
                core: 95     
                core: 97     
                             
                             


*** done-parsing 2144 assertion-tests/restrict-param.toc 6 forms

*** done-parsing 2144 assertion-tests/restrict-conflict.toc 7 forms

*** done-parsing 2144 assertion-tests/update-field-1.toc 2 forms

***  site 1151 assertion-tests/and-constraints-1.toc: 9 
 (foo (vector "xx") "p") 

 target-c (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity678")
(c/seq-c [(c/param (c/tag "fn-arity678") 0)
(c/multi [c/int-constraint
(c/param (c/tag "fn-arity678") 1)])]
c/no-tail)
;; returns
c/maybe-constraint)}) 

 arg-cs [(c/vect-c [(c/StrBuffConstraint xxempty-list c/no-symbol "")]
c/no-tail), (c/StrBuffConstraint pempty-list c/no-symbol "")] 

 result-type (c/NoValues [c/int-constraint
(c/StrBuffConstraint pempty-list c/no-symbol "")]) 

 Conflicting assertions (1157)  at assertion-tests/and-constraints-1.toc: 9
Integer from:               String pfrom:
and-constraints-1.toc: 5                 
core: 1208                               
core: 1210                               
core: 95                                 
core: 97                                 
                                         
                                         


***  site 1151 assertion-tests/add-items-list-2.toc: 19 
 (h (vector 'a 'b)) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity680")
(c/seq-c [(c/multi [(c/sum-c [(c/list-c [c/top-type
c/int-constraint]
c/no-tail)
(c/vect-c [c/top-type
c/int-constraint]
c/no-tail)])
(c/param (c/tag "fn-arity680") 0)])]
c/no-tail)
;; returns
c/int-constraint)}) 

 arg-cs [(c/vect-c [(c/SymConstraint a)
(c/SymConstraint b)]
c/no-tail)] 

 result-type (c/NoValues [c/int-constraint
(c/SymConstraint b)]) 

 Conflicting assertions (1157)  at assertion-tests/add-items-list-2.toc: 19
Integer from:               Symbol bfrom:
add-items-list-2.toc: 16                 
add-items-list-2.toc: 11                 
add-items-list-2.toc: 12                 
core: 1208                               
core: 1210                               
core: 95                                 
core: 97                                 
                                         
                                         


*** done-parsing 2144 assertion-tests/restrict-nested-item.toc 7 forms

***  site 1151 assertion-tests/add-items-list-1.toc: 18 
 (h (vector 'a 'b)) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity683")
(c/seq-c [(c/multi [(c/sum-c [(c/list-c [c/top-type
c/int-constraint]
c/no-tail)
(c/vect-c [c/top-type
c/int-constraint]
c/no-tail)])
(c/param (c/tag "fn-arity683") 0)])]
c/no-tail)
;; returns
c/strbuff-constraint)}) 

 arg-cs [(c/vect-c [(c/SymConstraint a)
(c/SymConstraint b)]
c/no-tail)] 

 result-type (c/NoValues [c/int-constraint
(c/SymConstraint b)]) 

 Conflicting assertions (1157)  at assertion-tests/add-items-list-1.toc: 18
Integer from:               Symbol bfrom:
add-items-list-1.toc: 15                 
add-items-list-1.toc: 14                 
add-items-list-1.toc: 10                 
add-items-list-1.toc: 11                 
core: 1208                               
core: 1210                               
core: 95                                 
core: 97                                 
                                         
                                         


*** Conflicting assertions (528)  at assertion-tests/bad-dipatch-type.toc: 8
String from:               BogusTypefrom:
bad-dipatch-type.toc: 4                  
core: 22                                 
                                         
                                         


***  site 1151 assertion-tests/bad-impl-arity.toc: 4 
 (take "Bogus") 

 target-c (c/ProtoImpls
(c/tag "take")
(c/fn-c []
{2 (c/fn-arity
(c/tag "take")
(c/list-c [(c/param (c/tag "take") 0)
(c/multi [c/int-constraint
(c/param (c/tag "take") 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/inner-type-of-op
(c/param (c/tag "take") 0) c/no-args
)))})

{c/VectorType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity334")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity334") 0)])
(c/multi [c/int-constraint
(c/param (c/tag "fn-arity334") 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity334") 0) c/no-args
)))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity271")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity271") 0)])
(c/multi [c/int-constraint
(c/param (c/tag "fn-arity271") 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity271") 0) c/no-args
)))})
c/SubStringType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity230")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity230") 0)
c/substr-constraint])
(c/multi [(c/param (c/tag "fn-arity230") 1)
(c/IntConstraint c/no-int 2147483647 0)])]
c/no-tail)
;; returns
(c/multi [c/substr-constraint
(c/coll-of-c (c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity230") 0) c/no-args
)
c/substr-constraint]))]))})
c/StringBufferType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity231")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity231") 0)
c/strbuff-constraint])
(c/multi [(c/param (c/tag "fn-arity231") 1)
(c/IntConstraint c/no-int 2147483647 0)])]
c/no-tail)
;; returns
(c/multi [c/substr-constraint
(c/coll-of-c (c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity231") 0) c/no-args
)
c/substr-constraint]))]))})}) 

 arg-cs [(c/StrBuffConstraint Bogusempty-list c/no-symbol "")] 

 result-type (c/NoValues [(c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity231")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity231") 0)
c/strbuff-constraint])
(c/multi [(c/param (c/tag "fn-arity231") 1)
(c/IntConstraint c/no-int 2147483647 0)])]
c/no-tail)
;; returns
(c/multi [c/substr-constraint
(c/coll-of-c (c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity231") 0) c/no-args
)
c/substr-constraint]))]))})
(c/ReifiedConstraint 0 (c/tag "No arity found")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")]) 

 Conflicting assertions (1157)  at assertion-tests/bad-impl-arity.toc: 4
Function from    No arity foundfrom:
                                    
                                    


***  site 1151 assertion-tests/bad-constructor-param-1.toc: 10 
 (Boogie (vector 1 2 'p)) 

 target-c (c/ReifiedConstraint 76 (c/tag "* Boogie constructor at assertion-tests/bad-constructor-param-1.toc: 2 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag "* Boogie constructor at assertion-tests/bad-constructor-param-1.toc: 2 *")
(c/seq-c [c/top-type
(c/vect-c [] (c/coll-of-c c/int-constraint))]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "Boogie")
{}
{c/contents c/top-type
(c/Field (c/tag ".xs")) (c/multi [(c/vect-c [] (c/coll-of-c c/int-constraint))
(c/param (c/tag "* Boogie constructor at assertion-tests/bad-constructor-param-1.toc: 2 *") 1)])
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "") 

 arg-cs [(c/vect-c [(c/IntConstraint 1 2147483647 -2147483648)
(c/IntConstraint 2 2147483647 -2147483648)
(c/SymConstraint p)]
c/no-tail)] 

 result-type (c/NoValues [c/int-constraint
(c/SymConstraint p)]) 

 Conflicting assertions (1157)  at assertion-tests/bad-constructor-param-1.toc: 10
Integer from:    Symbol pfrom:
                              
                              


***  site 1151 assertion-tests/bad-function-returns-2.toc: 7 
 (new-se (fn  [s]
'Failure)) 

 target-c (c/ReifiedConstraint 87 (c/tag "* new-se constructor at assertion-tests/bad-function-returns-2.toc: 2 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag "* new-se constructor at assertion-tests/bad-function-returns-2.toc: 2 *")
(c/seq-c [c/top-type
(c/intersect c/fn-constraint
(c/coll-of-c (c/vect-c [] (c/coll-of-c c/top-type))))]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "new-se")
{}
{c/contents c/top-type
(c/Field (c/tag ".invoke-fn")) (c/multi [(c/intersect c/fn-constraint
(c/coll-of-c (c/vect-c [] (c/coll-of-c c/top-type))))
(c/param (c/tag "* new-se constructor at assertion-tests/bad-function-returns-2.toc: 2 *") 1)])
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "") 

 arg-cs [(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity691")
(c/seq-c [(c/param (c/tag "fn-arity691") 0)]
c/no-tail)
;; returns
(c/SymConstraint Failure))})] 

 result-type (c/NoValues [(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity691")
(c/seq-c [(c/param (c/tag "fn-arity691") 0)]
c/no-tail)
;; returns
(c/SymConstraint Failure))})
(c/intersect c/fn-constraint
(c/coll-of-c (c/vect-c [] (c/coll-of-c c/top-type))))]) 

 Conflicting assertions (1157)  at assertion-tests/bad-function-returns-2.toc: 7
Function from    Function from
                              
                              


***  site 1151 assertion-tests/bad-constructor-param-3.toc: 14 
 (Boogie (vector 1 2 'p)) 

 target-c (c/ReifiedConstraint 83 (c/tag "* Boogie constructor at assertion-tests/bad-constructor-param-3.toc: 2 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag "* Boogie constructor at assertion-tests/bad-constructor-param-3.toc: 2 *")
(c/seq-c [c/top-type
(c/vect-c [] (c/coll-of-c (c/sum-c [c/strbuff-constraint
c/substr-constraint])))]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "Boogie")
{}
{c/contents c/top-type
(c/Field (c/tag ".xs")) (c/multi [(c/vect-c [] (c/coll-of-c (c/sum-c [c/strbuff-constraint
c/substr-constraint])))
(c/param (c/tag "* Boogie constructor at assertion-tests/bad-constructor-param-3.toc: 2 *") 1)])
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "") 

 arg-cs [(c/vect-c [(c/IntConstraint 1 2147483647 -2147483648)
(c/IntConstraint 2 2147483647 -2147483648)
(c/SymConstraint p)]
c/no-tail)] 

 result-type (c/NoValues [c/strbuff-constraint
(c/IntConstraint 1 2147483647 -2147483648)]) 

 Conflicting assertions (1157)  at assertion-tests/bad-constructor-param-3.toc: 14
String from:    Integer 1from:
core: 22                      
                              
                              


***  site 1151 assertion-tests/apply-constructor.toc: 13 
 (g 's "8") 

 target-c (c/fn-c []
{c/variadic (c/fn-arity
(c/tag "fn-arity692")
(c/seq-c [] (c/multi [(c/list-c [c/sym-constraint
c/int-constraint]
c/no-tail)
(c/param (c/tag "fn-arity692") 0)]))
;; returns
(c/type-op c/apply-op
(c/ReifiedConstraint 67 (c/tag "* Popper constructor at assertion-tests/apply-constructor.toc: 2 *")
{}
{}
(c/fn-c []
{3 (c/fn-arity
(c/tag "* Popper constructor at assertion-tests/apply-constructor.toc: 2 *")
(c/seq-c [c/top-type
c/sym-constraint
c/int-constraint]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "Popper")
{}
{(c/Field (c/tag ".x")) (c/multi [c/sym-constraint
(c/param (c/tag "* Popper constructor at assertion-tests/apply-constructor.toc: 2 *") 1)])
c/contents c/top-type
(c/Field (c/tag ".y")) (c/multi [c/int-constraint
(c/param (c/tag "* Popper constructor at assertion-tests/apply-constructor.toc: 2 *") 2)])
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")
(c/multi [(c/list-c [c/sym-constraint
c/int-constraint]
c/no-tail)
(c/param (c/tag "fn-arity692") 0)])
))}) 

 arg-cs [(c/SymConstraint s), (c/StrBuffConstraint 8empty-list c/no-symbol "")] 

 result-type (c/NoValues [c/int-constraint
(c/StrBuffConstraint 8empty-list c/no-symbol "")]) 

 Conflicting assertions (1157)  at assertion-tests/apply-constructor.toc: 13
Integer from:                String 8from:
apply-constructor.toc: 10                 
apply-constructor.toc: 7                  
                                          
                                          


*** Loaded assertion-tests/bad-inline-result-type.toc

***  site 1151 assertion-tests/bad-flat-map-inner.toc: 3 
 (flat-map (maybe (inc s)) (fn  [x]
(map (maybe (symbol x)) (fn  [y]
(str y))))) 

 target-c (c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/HashSetType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity629")
(c/list-c [(c/multi [(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity629") 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity629") 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity629") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
c/contents c/top-type
}
(c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity643")
(c/seq-c [(c/multi [(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity643") 0)])
(c/param (c/tag "fn-arity643") 1)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "get")
(c/fn-c []
{2 (c/fn-arity
(c/tag "get")
(c/list-c [(c/param (c/tag "get") 0)
(c/param (c/tag "get") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "get") 0) c/no-args
) empty-list c/no-symbol ""))})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity134")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity134") 0)])
(c/param (c/tag "fn-arity134") 1)]
c/no-tail)
;; returns
(c/multi [(c/param (c/tag "fn-arity134") 0)
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity134") 0) c/no-args
) empty-list c/no-symbol "")]))})
c/BitmapIndexedType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity483")
(c/list-c [(c/multi [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity483") 0)])
(c/param (c/tag "fn-arity483") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity483") 0) c/no-args
) empty-list c/no-symbol ""))})
53 (c/fn-c []
{2 (c/fn-arity
(c/tag "Sorting_get")
(c/list-c [(c/multi [(c/ReifiedConstraint 53 (c/tag "Sorting")
{(c/Field (c/tag ".v")) c/top-type
(c/Field (c/tag ".k")) c/top-type
}
{(c/Field (c/tag ".v")) c/top-type
c/contents c/top-type
(c/Field (c/tag ".k")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "Sorting_get") 0)])
(c/param (c/tag "Sorting_get") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/get-from-op
(c/param (c/tag "Sorting_get") 0)
[(c/param (c/tag "Sorting_get") 1)]
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "Sorting_get") 0) c/no-args
)]) empty-list c/no-symbol ""))})
55 (c/fn-c []
{2 (c/fn-arity
(c/tag "RecurseWith_get")
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "RecurseWith_get") 0)])
(c/param (c/tag "RecurseWith_get") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/get-from-op
(c/param (c/tag "RecurseWith_get") 0)
[(c/param (c/tag "RecurseWith_get") 1)]
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "RecurseWith_get") 0) c/no-args
)]) empty-list c/no-symbol ""))})
c/HashCollisionNodeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity481")
(c/list-c [(c/multi [(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity481") 0)])
(c/param (c/tag "fn-arity481") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity481") 0) c/no-args
) empty-list c/no-symbol ""))})
56 (c/fn-c []
{2 (c/fn-arity
(c/tag "RecurseFinal_get")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "RecurseFinal_get") 0)])
(c/param (c/tag "RecurseFinal_get") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/get-from-op
(c/param (c/tag "RecurseFinal_get") 0)
[(c/param (c/tag "RecurseFinal_get") 1)]
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "RecurseFinal_get") 0) c/no-args
)]) empty-list c/no-symbol ""))})
c/ArrayNodeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity482")
(c/list-c [(c/multi [(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity482") 0)])
(c/param (c/tag "fn-arity482") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity482") 0) c/no-args
) empty-list c/no-symbol ""))})
c/VectorType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity86")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity86") 0)])
(c/multi [c/int-constraint
(c/IntConstraint c/no-int 2147483647 0)
(c/param (c/tag "fn-arity86") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity86") 0) c/no-args
) empty-list c/no-symbol ""))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity269")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity269") 0)])
(c/multi [c/int-constraint
(c/param (c/tag "fn-arity269") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity269") 0) c/no-args
) empty-list c/no-symbol ""))})})
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity643") 0)
[(c/Field (c/tag ".set-map"))]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])])
(c/param (c/tag "fn-arity643") 1)]
))})
 empty-list c/no-symbol ""))})
c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})
c/FutureType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity367")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity367") 0)
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity367") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
c/PromiseType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity346")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity346") 0)
c/promise-constraint])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity346") 1)])]
c/no-tail)
;; returns
c/promise-constraint)})
c/VectorType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity302")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity302") 0)
(c/vect-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity302") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/intersect c/fn-constraint
(c/coll-of-c (c/vect-c [] (c/coll-of-c c/top-type))))
(c/param (c/tag "fn-arity302") 1)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/type-op c/inner-type-of-op
(c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/intersect c/fn-constraint
(c/coll-of-c (c/vect-c [] (c/coll-of-c c/top-type))))
(c/param (c/tag "fn-arity302") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/vect-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity302") 1)
0
)))
(c/param (c/tag "fn-arity302") 0)]) c/no-args
)]
) c/no-args
))))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity162")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity162") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity162") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/intersect c/fn-constraint
(c/coll-of-c (c/list-c [] (c/coll-of-c c/top-type))))
(c/param (c/tag "fn-arity162") 1)])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/concat-op
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity162") 1)
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity162") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity162") 1)
0
)])]
)
(c/list-c [] (c/coll-of-c c/top-type))]))) c/no-args
)
(c/list-c [] (c/coll-of-c (c/type-op c/inner-type-of-op
(c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/intersect c/fn-constraint
(c/coll-of-c (c/list-c [] (c/coll-of-c c/top-type))))
(c/param (c/tag "fn-arity162") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity162") 1)
0
)))
(c/param (c/tag "fn-arity162") 0)]) c/no-args
)]
) c/no-args
)))]))})}) 

 arg-cs [(c/MaybeConstraint c/int-constraint empty-list c/no-symbol ""), (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity695")
(c/seq-c [(c/multi [(c/sum-c [c/strbuff-constraint
c/substr-constraint])
(c/param (c/tag "fn-arity695") 0)])]
c/no-tail)
;; returns
(c/MaybeConstraint c/strbuff-constraint empty-list c/no-symbol ""))})] 

 result-type (c/NoValues [c/strbuff-constraint
c/int-constraint]) 

 Conflicting assertions (1157)  at assertion-tests/bad-flat-map-inner.toc: 3
String from:    Integer from:
core: 348       core: 1208   
core: 350       core: 1210   
core: 22        core: 95     
                core: 98     
                             
                             


***  site 1151 assertion-tests/bad-inner-11.toc: 12 
 (f (g "x")) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity697")
(c/seq-c [(c/multi [(c/MaybeConstraint c/int-constraint empty-list c/no-symbol "")
(c/param (c/tag "fn-arity697") 0)])]
c/no-tail)
;; returns
(c/MaybeConstraint c/int-constraint empty-list c/no-symbol ""))}) 

 arg-cs [(c/MaybeConstraint c/substr-constraint empty-list c/no-symbol "")] 

 result-type (c/NoValues [c/int-constraint
c/substr-constraint]) 

 Conflicting assertions (1157)  at assertion-tests/bad-inner-11.toc: 12
Integer from:    String from:
core: 1210       core: 336   
core: 95         core: 341   
core: 97                     
                             
                             


***  site 1151 assertion-tests/bad-constructor-call.toc: 6 
 (AnotherType 1) 

 target-c (c/ReifiedConstraint 69 (c/tag "* AnotherType constructor at assertion-tests/bad-constructor-call.toc: 2 *")
{}
{}
(c/fn-c []
{3 (c/fn-arity
(c/tag "* AnotherType constructor at assertion-tests/bad-constructor-call.toc: 2 *")
(c/seq-c [c/top-type
c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "AnotherType")
{}
{(c/Field (c/tag ".x")) (c/param (c/tag "* AnotherType constructor at assertion-tests/bad-constructor-call.toc: 2 *") 1)
(c/Field (c/tag ".z")) (c/param (c/tag "* AnotherType constructor at assertion-tests/bad-constructor-call.toc: 2 *") 2)
c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "") 

 arg-cs [(c/IntConstraint 1 2147483647 -2147483648)] 

 result-type (c/NoValues [(c/fn-c []
{3 (c/fn-arity
(c/tag "* AnotherType constructor at assertion-tests/bad-constructor-call.toc: 2 *")
(c/seq-c [c/top-type
c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "AnotherType")
{}
{(c/Field (c/tag ".x")) (c/param (c/tag "* AnotherType constructor at assertion-tests/bad-constructor-call.toc: 2 *") 1)
(c/Field (c/tag ".z")) (c/param (c/tag "* AnotherType constructor at assertion-tests/bad-constructor-call.toc: 2 *") 2)
c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
(c/ReifiedConstraint 0 (c/tag "No arity found")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")]) 

 Conflicting assertions (1157)  at assertion-tests/bad-constructor-call.toc: 6
Function from    No arity foundfrom:
                                    
                                    


*** Conflicting assertions (785)  at assertion-tests/bad-and-clause.toc: 9
List from:    Maybe from:
core: 1649               
core: 1658               
                         
                         


***  site 1151 assertion-tests/bad-inner-15.toc: 5 
 (inc (extract (maybe "1"))) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity120")
(c/seq-c [(c/multi [c/int-constraint
(c/param (c/tag "fn-arity120") 0)])]
c/no-tail)
;; returns
c/int-constraint)}) 

 arg-cs [(c/StrBuffConstraint 1empty-list c/no-symbol "")] 

 result-type (c/NoValues [c/int-constraint
(c/StrBuffConstraint 1empty-list c/no-symbol "")]) 

 Conflicting assertions (1157)  at assertion-tests/bad-inner-15.toc: 5
Integer from:    String 1from:
core: 1210                    
core: 95                      
core: 97                      
                              
                              


*** Conflicting assertions (528)  at assertion-tests/bad-impl-return-value.toc: 12
Maybe from:                     Symbol from:
bad-impl-return-value.toc: 8                
bad-impl-return-value.toc: 9                
                                            
                                            


***  site 1151 assertion-tests/bad-inner-10.toc: 7 
 (f (vector (list 1 2) (vector 'x) (vector 3 6))) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity701")
(c/seq-c [(c/param (c/tag "fn-arity701") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "reduce")
(c/fn-c []
{3 (c/fn-arity
(c/tag "reduce")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [2])
(c/param (c/tag "reduce") 2)])
1
))
(c/param (c/tag "reduce") 0)])
(c/param (c/tag "reduce") 1)
(c/multi [(.required-arities c/fn-constraint [2])
(c/param (c/tag "reduce") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/param (c/tag "reduce") 1)
(c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [2])
(c/param (c/tag "reduce") 2)])
[(c/sum-c [(c/param (c/tag "reduce") 1)
(c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [2])
(c/param (c/tag "reduce") 2)]) c/no-args
)])
(c/type-op c/inner-type-of-op
(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [2])
(c/param (c/tag "reduce") 2)])
1
))
(c/param (c/tag "reduce") 0)]) c/no-args
)]
)]))})

{c/HashSetType (c/fn-c []
{3 (c/fn-arity
(c/tag "fn-arity638")
(c/list-c [(c/multi [(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity638") 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity638") 2)
1
))])
(c/param (c/tag "fn-arity638") 1)
(c/multi [(.required-arities c/fn-constraint [2])
(c/param (c/tag "fn-arity638") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/param (c/tag "fn-arity638") 1)
(c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity638") 2)
[(c/sum-c [(c/param (c/tag "fn-arity638") 1)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity638") 2) c/no-args
)])
(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity638") 2)
1
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity638") 0) c/no-args
)])]
)
(c/param (c/tag "fn-arity638") 1)])
(c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity638") 2)
[(c/sum-c [(c/param (c/tag "fn-arity638") 1)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity638") 2) c/no-args
)])
(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity638") 2)
1
)
(c/type-op c/inner-type-of-op
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "vals")
(c/fn-c []
{1 (c/fn-arity
(c/tag "vals")
(c/list-c [(c/param (c/tag "vals") 0)]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c c/top-type)))})

{c/BitmapIndexedType (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity492")
(c/list-c [(c/multi [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity492") 0)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c c/top-type)))})
c/HashCollisionNodeType (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity490")
(c/list-c [(c/multi [(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity490") 0)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c c/top-type)))})
c/ArrayNodeType (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity491")
(c/list-c [(c/multi [(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity491") 0)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c c/top-type)))})})
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity643") 0)
[(c/Field (c/tag ".set-map"))]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity642") 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity641") 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity640") 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity639") 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity638") 0)
[(c/Field (c/tag ".set-map"))]
)])]
) c/no-args
)])]
)
(c/param (c/tag "fn-arity638") 1)])
(c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity638") 2)
[(c/sum-c [(c/param (c/tag "fn-arity638") 1)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity638") 2) c/no-args
)])
(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity638") 2)
1
)
(c/type-op c/inner-type-of-op
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "vals")
(c/fn-c []
{1 (c/fn-arity
(c/tag "vals")
(c/list-c [(c/param (c/tag "vals") 0)]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c c/top-type)))})

{c/BitmapIndexedType (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity492")
(c/list-c [(c/multi [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity492") 0)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c c/top-type)))})
c/HashCollisionNodeType (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity490")
(c/list-c [(c/multi [(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity490") 0)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c c/top-type)))})
c/ArrayNodeType (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity491")
(c/list-c [(c/multi [(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity491") 0)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c c/top-type)))})})
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity643") 0)
[(c/Field (c/tag ".set-map"))]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity642") 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity641") 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity640") 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity639") 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity638") 0)
[(c/Field (c/tag ".set-map"))]
)])]
) c/no-args
)])]
)
(c/param (c/tag "fn-arity638") 1)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity638") 2)
[(c/sum-c [(c/param (c/tag "fn-arity638") 1)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity638") 2) c/no-args
)])
(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity638") 2)
1
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity638") 0) c/no-args
)])]
)])
(c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity638") 2)
[(c/sum-c [(c/param (c/tag "fn-arity638") 1)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity638") 2) c/no-args
)])
(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity638") 2)
1
)
(c/type-op c/inner-type-of-op
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "vals")
(c/fn-c []
{1 (c/fn-arity
(c/tag "vals")
(c/list-c [(c/param (c/tag "vals") 0)]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c c/top-type)))})

{c/BitmapIndexedType (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity492")
(c/list-c [(c/multi [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity492") 0)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c c/top-type)))})
c/HashCollisionNodeType (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity490")
(c/list-c [(c/multi [(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity490") 0)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c c/top-type)))})
c/ArrayNodeType (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity491")
(c/list-c [(c/multi [(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity491") 0)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c c/top-type)))})})
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity643") 0)
[(c/Field (c/tag ".set-map"))]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity642") 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity641") 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity640") 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity639") 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity638") 0)
[(c/Field (c/tag ".set-map"))]
)])]
) c/no-args
)])]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity638") 2)
[(c/sum-c [(c/param (c/tag "fn-arity638") 1)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity638") 2) c/no-args
)])
(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity638") 2)
1
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity638") 0) c/no-args
)])]
)])]))})
c/VectorType (c/fn-c []
{3 (c/fn-arity
(c/tag "fn-arity301")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity301") 0)
(c/vect-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity301") 2)
1
)))])
(c/param (c/tag "fn-arity301") 1)
(c/multi [(.required-arities c/fn-constraint [2])
(c/param (c/tag "fn-arity301") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/param (c/tag "fn-arity301") 1)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity301") 2)
[(c/sum-c [(c/param (c/tag "fn-arity301") 1)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity301") 2) c/no-args
)])
(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity301") 2)
1
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity301") 0) c/no-args
)])]
)]))})
c/ListType (c/fn-c []
{3 (c/fn-arity
(c/tag "fn-arity160")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity160") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity160") 2)
1
)))])
(c/param (c/tag "fn-arity160") 1)
(c/multi [(.required-arities c/fn-constraint [2])
(c/param (c/tag "fn-arity160") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/param (c/tag "fn-arity160") 1)
(c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity160") 2)
[(c/sum-c [(c/param (c/tag "fn-arity160") 1)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity160") 2) c/no-args
)])
(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity160") 2)
1
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity160") 0) c/no-args
)])]
)
(c/param (c/tag "fn-arity160") 1)])
(c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity160") 2)
[(c/sum-c [(c/param (c/tag "fn-arity160") 1)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity160") 2) c/no-args
)])
(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity160") 2)
1
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity160") 0) c/no-args
)])]
)])]))})
c/SubStringType (c/fn-c []
{3 (c/fn-arity
(c/tag "fn-arity210")
(c/list-c [(c/multi [c/substr-constraint
(c/param (c/tag "fn-arity210") 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity210") 2)
1
))])
(c/param (c/tag "fn-arity210") 1)
(c/multi [(.required-arities c/fn-constraint [2])
(c/param (c/tag "fn-arity210") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/param (c/tag "fn-arity210") 1)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity210") 2)
[(c/sum-c [(c/param (c/tag "fn-arity210") 1)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity210") 2) c/no-args
)])
(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity210") 2)
1
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity210") 0) c/no-args
)])]
)]))})
c/StringBufferType (c/fn-c []
{3 (c/fn-arity
(c/tag "fn-arity211")
(c/list-c [(c/multi [c/strbuff-constraint
(c/param (c/tag "fn-arity211") 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity211") 2)
1
))])
(c/param (c/tag "fn-arity211") 1)
(c/multi [(.required-arities c/fn-constraint [2])
(c/param (c/tag "fn-arity211") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/param (c/tag "fn-arity211") 1)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity211") 2)
[(c/sum-c [(c/param (c/tag "fn-arity211") 1)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity211") 2) c/no-args
)])
(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity211") 2)
1
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity211") 0) c/no-args
)])]
)]))})})
[(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "seq")
(c/fn-c []
{1 (c/fn-arity
(c/tag "seq")
(c/list-c [(c/param (c/tag "seq") 0)]
c/no-tail)
;; returns
(c/type-op c/list-from-op
(c/param (c/tag "seq") 0) c/no-args
))})

{c/HashSetType (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity628")
(c/list-c [(c/multi [(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity628") 0)])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "vals")
(c/fn-c []
{1 (c/fn-arity
(c/tag "vals")
(c/list-c [(c/param (c/tag "vals") 0)]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c c/top-type)))})

{c/BitmapIndexedType (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity492")
(c/list-c [(c/multi [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity492") 0)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c c/top-type)))})
c/HashCollisionNodeType (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity490")
(c/list-c [(c/multi [(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity490") 0)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c c/top-type)))})
c/ArrayNodeType (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity491")
(c/list-c [(c/multi [(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity491") 0)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c c/top-type)))})})
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity643") 0)
[(c/Field (c/tag ".set-map"))]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity642") 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity641") 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity640") 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity639") 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity638") 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity637") 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity636") 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity635") 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity634") 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity633") 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity632") 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity631") 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity630") 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity629") 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity628") 0)
[(c/Field (c/tag ".set-map"))]
)])]
)
(c/type-op c/list-from-op
(c/param (c/tag "fn-arity628") 0) c/no-args
)]))})
c/BitmapIndexedType (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity498")
(c/list-c [(c/multi [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity498") 0)])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/list-from-op
(c/param (c/tag "fn-arity498") 0) c/no-args
)
(c/list-c [] (c/coll-of-c (c/list-c [] (c/coll-of-c c/top-type))))]))})
c/HashCollisionNodeType (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity496")
(c/list-c [(c/multi [(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity496") 0)])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/list-from-op
(c/param (c/tag "fn-arity496") 0) c/no-args
)
(c/list-c [] (c/coll-of-c (c/list-c [] (c/coll-of-c c/top-type))))]))})
c/ArrayNodeType (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity497")
(c/list-c [(c/multi [(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity497") 0)])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/list-from-op
(c/param (c/tag "fn-arity497") 0) c/no-args
)
(c/list-c [] (c/coll-of-c (c/list-c [] (c/coll-of-c c/top-type))))]))})
c/VectorType (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity87")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity87") 0)])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/list-from-op
(c/param (c/tag "fn-arity87") 0) c/no-args
)]))})
c/ListType (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity176")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity176") 0)])]
c/no-tail)
;; returns
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity176") 0)
(c/type-op c/list-from-op
(c/param (c/tag "fn-arity176") 0) c/no-args
)]))})
c/SubStringType (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity202")
(c/list-c [(c/multi [c/substr-constraint
(c/param (c/tag "fn-arity202") 0)])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/list-from-op
(c/param (c/tag "fn-arity202") 0) c/no-args
)]))})
c/StringBufferType (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity203")
(c/list-c [(c/multi [c/strbuff-constraint
(c/param (c/tag "fn-arity203") 0)])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/list-from-op
(c/param (c/tag "fn-arity203") 0) c/no-args
)]))})})
[(c/param (c/tag "fn-arity701") 0)]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
(c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity702")
(c/seq-c [(c/param (c/tag "fn-arity702") 0)
(c/seq-c [c/int-constraint
c/top-type]
c/no-tail)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "assoc")
(c/fn-c []
{3 (c/fn-arity
(c/tag "assoc")
(c/list-c [(c/param (c/tag "assoc") 0)
(c/param (c/tag "assoc") 1)
(c/param (c/tag "assoc") 2)]
c/no-tail)
;; returns
c/top-type)})

{c/HashSetType (c/fn-c []
{3 (c/fn-arity
(c/tag "HashSet_get")
(c/list-c [(c/multi [(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "HashSet_get") 0)])
(c/param (c/tag "HashSet_get") 1)
(c/param (c/tag "HashSet_get") 2)]
c/no-tail)
;; returns
(c/type-op c/set-to-op
(c/param (c/tag "HashSet_get") 0)
[[(c/param (c/tag "HashSet_get") 1)]
(c/param (c/tag "HashSet_get") 2)]
))})
64 (c/fn-c []
{3 (c/fn-arity
(c/tag "LazyList_get")
(c/list-c [(c/multi [(c/ReifiedConstraint 64 (c/tag "LazyList")
{(c/Field (c/tag ".lazy")) (c/list-c [] (c/coll-of-c c/top-type))
(c/Field (c/tag ".tail")) c/top-type
(c/Field (c/tag ".container")) c/top-type
}
{(c/Field (c/tag ".lazy")) (c/list-c [] (c/coll-of-c c/top-type))
(c/Field (c/tag ".tail")) c/top-type
c/contents c/top-type
(c/Field (c/tag ".container")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "LazyList_get") 0)])
(c/param (c/tag "LazyList_get") 1)
(c/param (c/tag "LazyList_get") 2)]
c/no-tail)
;; returns
(c/type-op c/set-to-op
(c/param (c/tag "LazyList_get") 0)
[[(c/param (c/tag "LazyList_get") 1)]
(c/param (c/tag "LazyList_get") 2)]
))})
c/MaybeType (c/fn-c []
{3 (c/fn-arity
(c/tag "fn-arity135")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity135") 0)])
(c/param (c/tag "fn-arity135") 1)
(c/param (c/tag "fn-arity135") 2)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity135") 2) empty-list c/no-symbol ""))})
c/BitmapIndexedType (c/fn-c []
{3 (c/fn-arity
(c/tag "fn-arity486")
(c/list-c [(c/multi [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity486") 0)])
(c/param (c/tag "fn-arity486") 1)
(c/param (c/tag "fn-arity486") 2)]
c/no-tail)
;; returns
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")]))})
53 (c/fn-c []
{3 (c/fn-arity
(c/tag "Sorting_get")
(c/list-c [(c/multi [(c/ReifiedConstraint 53 (c/tag "Sorting")
{(c/Field (c/tag ".v")) c/top-type
(c/Field (c/tag ".k")) c/top-type
}
{(c/Field (c/tag ".v")) c/top-type
c/contents c/top-type
(c/Field (c/tag ".k")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "Sorting_get") 0)])
(c/param (c/tag "Sorting_get") 1)
(c/param (c/tag "Sorting_get") 2)]
c/no-tail)
;; returns
(c/type-op c/set-to-op
(c/param (c/tag "Sorting_get") 0)
[[(c/param (c/tag "Sorting_get") 1)]
(c/param (c/tag "Sorting_get") 2)]
))})
55 (c/fn-c []
{3 (c/fn-arity
(c/tag "RecurseWith_get")
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "RecurseWith_get") 0)])
(c/param (c/tag "RecurseWith_get") 1)
(c/param (c/tag "RecurseWith_get") 2)]
c/no-tail)
;; returns
(c/type-op c/set-to-op
(c/param (c/tag "RecurseWith_get") 0)
[[(c/param (c/tag "RecurseWith_get") 1)]
(c/param (c/tag "RecurseWith_get") 2)]
))})
c/HashCollisionNodeType (c/fn-c []
{3 (c/fn-arity
(c/tag "fn-arity484")
(c/list-c [(c/multi [(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity484") 0)])
(c/param (c/tag "fn-arity484") 1)
(c/param (c/tag "fn-arity484") 2)]
c/no-tail)
;; returns
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")]))})
56 (c/fn-c []
{3 (c/fn-arity
(c/tag "RecurseFinal_get")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "RecurseFinal_get") 0)])
(c/param (c/tag "RecurseFinal_get") 1)
(c/param (c/tag "RecurseFinal_get") 2)]
c/no-tail)
;; returns
(c/type-op c/set-to-op
(c/param (c/tag "RecurseFinal_get") 0)
[[(c/param (c/tag "RecurseFinal_get") 1)]
(c/param (c/tag "RecurseFinal_get") 2)]
))})
c/ArrayNodeType (c/fn-c []
{3 (c/fn-arity
(c/tag "fn-arity485")
(c/list-c [(c/multi [(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity485") 0)])
(c/param (c/tag "fn-arity485") 1)
(c/param (c/tag "fn-arity485") 2)]
c/no-tail)
;; returns
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")]))})
62 (c/fn-c []
{3 (c/fn-arity
(c/tag "IntGenerator_get")
(c/list-c [(c/multi [(c/ReifiedConstraint 62 (c/tag "IntGenerator")
{(c/Field (c/tag ".gen")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".gen")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "IntGenerator_get") 0)])
(c/param (c/tag "IntGenerator_get") 1)
(c/param (c/tag "IntGenerator_get") 2)]
c/no-tail)
;; returns
(c/type-op c/set-to-op
(c/param (c/tag "IntGenerator_get") 0)
[[(c/param (c/tag "IntGenerator_get") 1)]
(c/param (c/tag "IntGenerator_get") 2)]
))})})
[(c/param (c/tag "fn-arity702") 0)
c/top-type
(c/vect-c [c/int-constraint
c/top-type]
c/no-tail)]
))})]
))}) 

 arg-cs [(c/vect-c [(c/list-c [(c/IntConstraint 1 2147483647 -2147483648)
(c/IntConstraint 2 2147483647 -2147483648)]
c/no-tail)
(c/vect-c [(c/SymConstraint x)]
c/no-tail)
(c/vect-c [(c/IntConstraint 3 2147483647 -2147483648)
(c/IntConstraint 6 2147483647 -2147483648)]
c/no-tail)]
c/no-tail)] 

 result-type (c/NoValues [c/int-constraint
(c/SymConstraint x)]) 

 Conflicting assertions (1157)  at assertion-tests/bad-inner-10.toc: 7
Integer from:          Symbol xfrom:      
bad-inner-10.toc: 4    bad-inner-10.toc: 8
core: 1208                                
core: 1210                                
core: 95                                  
core: 97                                  
                                          
                                          


***  site 1151 assertion-tests/bad-inner-18.toc: 12 
 (g x) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity708")
(c/seq-c [(c/multi [(c/MaybeConstraint (c/sum-c [c/strbuff-constraint
c/substr-constraint]) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity708") 0)])]
c/no-tail)
;; returns
(c/MaybeConstraint c/substr-constraint empty-list c/no-symbol ""))}) 

 arg-cs [(c/multi [(c/MaybeConstraint c/int-constraint empty-list c/no-symbol "")
(c/param (c/tag "fn-arity710") 0)])] 

 result-type (c/NoValues [c/strbuff-constraint
c/int-constraint]) 

 Conflicting assertions (1157)  at assertion-tests/bad-inner-18.toc: 12
String from:           Integer from:
bad-inner-18.toc: 8    core: 1210   
core: 336              core: 95     
core: 339              core: 97     
core: 22                            
                                    
                                    


***  site 1151 assertion-tests/bad-apply-constructor.toc: 10 
 (apply Bogus (vector 4 5)) 

 target-c (c/ProtoImpls
(c/tag "apply")
(c/fn-c []
{2 (c/fn-arity
(c/tag "apply")
(c/list-c [(c/param (c/tag "apply") 0)
(c/multi [(c/sum-c [(c/list-c [] (c/coll-of-c c/top-type))
(c/vect-c [] (c/coll-of-c c/top-type))])
(c/param (c/tag "apply") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity127")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity127") 0)])
(c/multi [(c/sum-c [(c/list-c [] (c/coll-of-c c/top-type))
(c/vect-c [] (c/coll-of-c c/top-type))])
(c/param (c/tag "fn-arity127") 1)])]
c/no-tail)
;; returns
(c/sum-c [(c/multi [(c/type-op c/inner-type-of-op
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/inner-type-of-op
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "first")
(c/fn-c []
{1 (c/fn-arity
(c/tag "first")
(c/list-c [(c/param (c/tag "first") 0)]
c/no-tail)
;; returns
(c/multi [(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "first") 0) c/no-args
) empty-list c/no-symbol "")
(c/type-op c/first-of-op
(c/param (c/tag "first") 0) c/no-args
)]))})

{c/ListType (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity81")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity81") 0)])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/first-of-op
(c/param (c/tag "fn-arity81") 0) c/no-args
)
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity81") 0) c/no-args
) empty-list c/no-symbol "")]))})})
[(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "seq")
(c/fn-c []
{1 (c/fn-arity
(c/tag "seq")
(c/list-c [(c/param (c/tag "seq") 0)]
c/no-tail)
;; returns
(c/type-op c/list-from-op
(c/param (c/tag "seq") 0) c/no-args
))})

{c/VectorType (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity87")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity87") 0)])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/list-from-op
(c/param (c/tag "fn-arity87") 0) c/no-args
)]))})})
[(c/param (c/tag "fn-arity127") 1)]
)
(c/seq-c [] (c/coll-of-c c/maybe-constraint))])]
) c/no-args
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity124")
(c/seq-c [(c/param (c/tag "fn-arity124") 0)]
c/no-tail)
;; returns
c/top-type)})]
) c/no-args
)
(c/MaybeConstraint (c/type-op c/call-value-op
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity127") 0) c/no-args
) c/no-args
) empty-list c/no-symbol "")])
(c/MaybeConstraint (c/type-op c/call-value-op
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity127") 0) c/no-args
) c/no-args
) empty-list c/no-symbol "")
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "apply")
(c/fn-c []
{2 (c/fn-arity
(c/tag "apply")
(c/list-c [(c/param (c/tag "apply") 0)
(c/multi [(c/sum-c [(c/list-c [] (c/coll-of-c c/top-type))
(c/vect-c [] (c/coll-of-c c/top-type))])
(c/param (c/tag "apply") 1)])]
c/no-tail)
;; returns
c/top-type)})

{})
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity127") 0) c/no-args
)
(c/vect-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity127") 0) c/no-args
) c/no-args
)]) empty-list c/no-symbol "")]))})
73 (c/fn-c []
{2 (c/fn-arity
(c/tag "apply-Bogus-constructor")
(c/list-c [(c/multi [(c/param (c/tag "apply-Bogus-constructor") 0)
(c/ReifiedConstraint 73 (c/tag "* Bogus constructor at assertion-tests/bad-apply-constructor.toc: 4 *")
{}
{}
(c/fn-c []
{4 (c/fn-arity
(c/tag "* Bogus constructor at assertion-tests/bad-apply-constructor.toc: 4 *")
(c/seq-c [c/top-type
c/top-type
c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "Bogus")
{}
{c/contents c/top-type
(c/Field (c/tag ".a")) (c/param (c/tag "* Bogus constructor at assertion-tests/bad-apply-constructor.toc: 4 *") 1)
(c/Field (c/tag ".c")) (c/param (c/tag "* Bogus constructor at assertion-tests/bad-apply-constructor.toc: 4 *") 3)
(c/Field (c/tag ".b")) (c/param (c/tag "* Bogus constructor at assertion-tests/bad-apply-constructor.toc: 4 *") 2)
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")])
(c/multi [(c/param (c/tag "apply-Bogus-constructor") 1)
(c/seq-c [c/top-type
c/top-type
c/top-type]
c/no-tail)
(c/sum-c [(c/list-c [] (c/coll-of-c c/top-type))
(c/vect-c [] (c/coll-of-c c/top-type))])])]
c/no-tail)
;; returns
(c/type-op c/apply-op
(c/ReifiedConstraint 73 (c/tag "* Bogus constructor at assertion-tests/bad-apply-constructor.toc: 4 *")
{}
{}
(c/fn-c []
{4 (c/fn-arity
(c/tag "* Bogus constructor at assertion-tests/bad-apply-constructor.toc: 4 *")
(c/seq-c [c/top-type
c/top-type
c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "Bogus")
{}
{c/contents c/top-type
(c/Field (c/tag ".a")) (c/param (c/tag "* Bogus constructor at assertion-tests/bad-apply-constructor.toc: 4 *") 1)
(c/Field (c/tag ".c")) (c/param (c/tag "* Bogus constructor at assertion-tests/bad-apply-constructor.toc: 4 *") 3)
(c/Field (c/tag ".b")) (c/param (c/tag "* Bogus constructor at assertion-tests/bad-apply-constructor.toc: 4 *") 2)
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")
(c/multi [(c/param (c/tag "apply-Bogus-constructor") 1)
(c/seq-c [c/top-type
c/top-type
c/top-type]
c/no-tail)])
))})
60 (c/fn-c []
{2 (c/fn-arity
(c/tag "apply-RecurseWith-constructor")
(c/list-c [(c/multi [(c/param (c/tag "apply-RecurseWith-constructor") 0)
(c/ReifiedConstraint 60 (c/tag "* RecurseWith constructor at core: 2597 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag "* RecurseWith constructor at core: 2597 *")
(c/seq-c [c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "RecurseWith")
{}
{(c/Field (c/tag ".x")) (c/param (c/tag "* RecurseWith constructor at core: 2597 *") 1)
c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")])
(c/multi [(c/param (c/tag "apply-RecurseWith-constructor") 1)
(c/seq-c [c/top-type]
c/no-tail)
(c/sum-c [(c/list-c [] (c/coll-of-c c/top-type))
(c/vect-c [] (c/coll-of-c c/top-type))])])]
c/no-tail)
;; returns
(c/type-op c/apply-op
(c/ReifiedConstraint 60 (c/tag "* RecurseWith constructor at core: 2597 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag "* RecurseWith constructor at core: 2597 *")
(c/seq-c [c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "RecurseWith")
{}
{(c/Field (c/tag ".x")) (c/param (c/tag "* RecurseWith constructor at core: 2597 *") 1)
c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")
(c/multi [(c/param (c/tag "apply-RecurseWith-constructor") 1)
(c/seq-c [c/top-type]
c/no-tail)])
))})
c/FutureType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity381")
(c/list-c [(c/multi [(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity381") 0)])
(c/multi [(c/sum-c [(c/list-c [] (c/coll-of-c c/top-type))
(c/vect-c [] (c/coll-of-c c/top-type))])
(c/param (c/tag "fn-arity381") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
65 (c/fn-c []
{2 (c/fn-arity
(c/tag "apply-LazyList-constructor")
(c/list-c [(c/multi [(c/param (c/tag "apply-LazyList-constructor") 0)
(c/ReifiedConstraint 65 (c/tag "* LazyList constructor at core: 2992 *")
{}
{}
(c/fn-c []
{4 (c/fn-arity
(c/tag "* LazyList constructor at core: 2992 *")
(c/seq-c [c/top-type
c/top-type
(c/list-c [] (c/coll-of-c c/top-type))
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "LazyList")
{}
{(c/Field (c/tag ".lazy")) (c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "* LazyList constructor at core: 2992 *") 2)])
(c/Field (c/tag ".tail")) (c/param (c/tag "* LazyList constructor at core: 2992 *") 3)
c/contents c/top-type
(c/Field (c/tag ".container")) (c/param (c/tag "* LazyList constructor at core: 2992 *") 1)
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")])
(c/multi [(c/param (c/tag "apply-LazyList-constructor") 1)
(c/seq-c [c/top-type
(c/list-c [] (c/coll-of-c c/top-type))
c/top-type]
c/no-tail)
(c/sum-c [(c/list-c [] (c/coll-of-c c/top-type))
(c/vect-c [] (c/coll-of-c c/top-type))])])]
c/no-tail)
;; returns
(c/type-op c/apply-op
(c/ReifiedConstraint 65 (c/tag "* LazyList constructor at core: 2992 *")
{}
{}
(c/fn-c []
{4 (c/fn-arity
(c/tag "* LazyList constructor at core: 2992 *")
(c/seq-c [c/top-type
c/top-type
(c/list-c [] (c/coll-of-c c/top-type))
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "LazyList")
{}
{(c/Field (c/tag ".lazy")) (c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "* LazyList constructor at core: 2992 *") 2)])
(c/Field (c/tag ".tail")) (c/param (c/tag "* LazyList constructor at core: 2992 *") 3)
c/contents c/top-type
(c/Field (c/tag ".container")) (c/param (c/tag "* LazyList constructor at core: 2992 *") 1)
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")
(c/multi [(c/param (c/tag "apply-LazyList-constructor") 1)
(c/seq-c [c/top-type
(c/list-c [] (c/coll-of-c c/top-type))
c/top-type]
c/no-tail)])
))})
c/PromiseType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity360")
(c/list-c [(c/multi [c/promise-constraint
(c/param (c/tag "fn-arity360") 0)])
(c/multi [(c/sum-c [(c/list-c [] (c/coll-of-c c/top-type))
(c/vect-c [] (c/coll-of-c c/top-type))])
(c/param (c/tag "fn-arity360") 1)])]
c/no-tail)
;; returns
c/promise-constraint)})
c/VectorType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity333")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity333") 0)])
(c/multi [(c/sum-c [(c/list-c [] (c/coll-of-c c/top-type))
(c/vect-c [] (c/coll-of-c c/top-type))])
(c/param (c/tag "fn-arity333") 1)])]
c/no-tail)
;; returns
(c/sum-c [(c/vect-c [] (c/coll-of-c (c/type-op c/call-value-op
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity333") 0) c/no-args
) c/no-args
)))
(c/vect-c [] c/no-tail)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity161")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity161") 0)])
(c/multi [(c/sum-c [(c/list-c [] (c/coll-of-c c/top-type))
(c/vect-c [] (c/coll-of-c c/top-type))])
(c/param (c/tag "fn-arity161") 1)])]
c/no-tail)
;; returns
(c/sum-c [(c/list-c [] (c/coll-of-c (c/type-op c/call-value-op
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity161") 0) c/no-args
) c/no-args
)))
(c/list-c [] c/no-tail)]))})
59 (c/fn-c []
{2 (c/fn-arity
(c/tag "apply-RecurseFinal-constructor")
(c/list-c [(c/multi [(c/param (c/tag "apply-RecurseFinal-constructor") 0)
(c/ReifiedConstraint 59 (c/tag "* RecurseFinal constructor at core: 2585 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag "* RecurseFinal constructor at core: 2585 *")
(c/seq-c [c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "RecurseFinal")
{}
{(c/Field (c/tag ".x")) (c/param (c/tag "* RecurseFinal constructor at core: 2585 *") 1)
c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")])
(c/multi [(c/param (c/tag "apply-RecurseFinal-constructor") 1)
(c/seq-c [c/top-type]
c/no-tail)
(c/sum-c [(c/list-c [] (c/coll-of-c c/top-type))
(c/vect-c [] (c/coll-of-c c/top-type))])])]
c/no-tail)
;; returns
(c/type-op c/apply-op
(c/ReifiedConstraint 59 (c/tag "* RecurseFinal constructor at core: 2585 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag "* RecurseFinal constructor at core: 2585 *")
(c/seq-c [c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "RecurseFinal")
{}
{(c/Field (c/tag ".x")) (c/param (c/tag "* RecurseFinal constructor at core: 2585 *") 1)
c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")
(c/multi [(c/param (c/tag "apply-RecurseFinal-constructor") 1)
(c/seq-c [c/top-type]
c/no-tail)])
))})
54 (c/fn-c []
{2 (c/fn-arity
(c/tag "apply-Sorting-constructor")
(c/list-c [(c/multi [(c/param (c/tag "apply-Sorting-constructor") 0)
(c/ReifiedConstraint 54 (c/tag "* Sorting constructor at core: 2357 *")
{}
{}
(c/fn-c []
{3 (c/fn-arity
(c/tag "* Sorting constructor at core: 2357 *")
(c/seq-c [c/top-type
c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "Sorting")
{}
{(c/Field (c/tag ".v")) (c/param (c/tag "* Sorting constructor at core: 2357 *") 2)
c/contents c/top-type
(c/Field (c/tag ".k")) (c/param (c/tag "* Sorting constructor at core: 2357 *") 1)
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")])
(c/multi [(c/param (c/tag "apply-Sorting-constructor") 1)
(c/seq-c [c/top-type
c/top-type]
c/no-tail)
(c/sum-c [(c/list-c [] (c/coll-of-c c/top-type))
(c/vect-c [] (c/coll-of-c c/top-type))])])]
c/no-tail)
;; returns
(c/type-op c/apply-op
(c/ReifiedConstraint 54 (c/tag "* Sorting constructor at core: 2357 *")
{}
{}
(c/fn-c []
{3 (c/fn-arity
(c/tag "* Sorting constructor at core: 2357 *")
(c/seq-c [c/top-type
c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "Sorting")
{}
{(c/Field (c/tag ".v")) (c/param (c/tag "* Sorting constructor at core: 2357 *") 2)
c/contents c/top-type
(c/Field (c/tag ".k")) (c/param (c/tag "* Sorting constructor at core: 2357 *") 1)
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")
(c/multi [(c/param (c/tag "apply-Sorting-constructor") 1)
(c/seq-c [c/top-type
c/top-type]
c/no-tail)])
))})
63 (c/fn-c []
{2 (c/fn-arity
(c/tag "apply-IntGenerator-constructor")
(c/list-c [(c/multi [(c/param (c/tag "apply-IntGenerator-constructor") 0)
(c/ReifiedConstraint 63 (c/tag "* IntGenerator constructor at core: 2968 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag "* IntGenerator constructor at core: 2968 *")
(c/seq-c [c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "IntGenerator")
{}
{c/contents c/top-type
(c/Field (c/tag ".gen")) (c/param (c/tag "* IntGenerator constructor at core: 2968 *") 1)
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")])
(c/multi [(c/param (c/tag "apply-IntGenerator-constructor") 1)
(c/seq-c [c/top-type]
c/no-tail)
(c/sum-c [(c/list-c [] (c/coll-of-c c/top-type))
(c/vect-c [] (c/coll-of-c c/top-type))])])]
c/no-tail)
;; returns
(c/type-op c/apply-op
(c/ReifiedConstraint 63 (c/tag "* IntGenerator constructor at core: 2968 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag "* IntGenerator constructor at core: 2968 *")
(c/seq-c [c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "IntGenerator")
{}
{c/contents c/top-type
(c/Field (c/tag ".gen")) (c/param (c/tag "* IntGenerator constructor at core: 2968 *") 1)
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")
(c/multi [(c/param (c/tag "apply-IntGenerator-constructor") 1)
(c/seq-c [c/top-type]
c/no-tail)])
))})
61 (c/fn-c []
{2 (c/fn-arity
(c/tag "apply-HashSet-constructor")
(c/list-c [(c/multi [(c/param (c/tag "apply-HashSet-constructor") 0)
(c/ReifiedConstraint 61 (c/tag "* HashSet constructor at core: 2838 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag "* HashSet constructor at core: 2838 *")
(c/seq-c [c/top-type
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "HashSet")
{}
{(c/Field (c/tag ".set-map")) (c/multi [(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
(c/param (c/tag "* HashSet constructor at core: 2838 *") 1)])
c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")])
(c/multi [(c/param (c/tag "apply-HashSet-constructor") 1)
(c/seq-c [(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])]
c/no-tail)
(c/sum-c [(c/list-c [] (c/coll-of-c c/top-type))
(c/vect-c [] (c/coll-of-c c/top-type))])])]
c/no-tail)
;; returns
(c/type-op c/apply-op
(c/ReifiedConstraint 61 (c/tag "* HashSet constructor at core: 2838 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag "* HashSet constructor at core: 2838 *")
(c/seq-c [c/top-type
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "HashSet")
{}
{(c/Field (c/tag ".set-map")) (c/multi [(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
(c/param (c/tag "* HashSet constructor at core: 2838 *") 1)])
c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")
(c/multi [(c/param (c/tag "apply-HashSet-constructor") 1)
(c/seq-c [(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])]
c/no-tail)])
))})
c/FunctionType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity279")
(c/list-c [(c/multi [c/fn-constraint
(c/param (c/tag "fn-arity279") 0)])
(c/multi [(c/sum-c [(c/list-c [] (c/coll-of-c c/top-type))
(c/vect-c [] (c/coll-of-c c/top-type))])
(c/param (c/tag "fn-arity279") 1)])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/apply-op
c/fn-constraint
(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "seq")
(c/fn-c []
{1 (c/fn-arity
(c/tag "seq")
(c/list-c [(c/param (c/tag "seq") 0)]
c/no-tail)
;; returns
(c/type-op c/list-from-op
(c/param (c/tag "seq") 0) c/no-args
))})

{c/VectorType (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity87")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity87") 0)])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/list-from-op
(c/param (c/tag "fn-arity87") 0) c/no-args
)]))})
c/ListType (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity176")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity176") 0)])]
c/no-tail)
;; returns
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity176") 0)
(c/type-op c/list-from-op
(c/param (c/tag "fn-arity176") 0) c/no-args
)]))})
c/SubStringType (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity202")
(c/list-c [(c/multi [c/substr-constraint
(c/param (c/tag "fn-arity202") 0)])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/list-from-op
(c/param (c/tag "fn-arity202") 0) c/no-args
)]))})
c/StringBufferType (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity203")
(c/list-c [(c/multi [c/strbuff-constraint
(c/param (c/tag "fn-arity203") 0)])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/list-from-op
(c/param (c/tag "fn-arity203") 0) c/no-args
)]))})})
[(c/param (c/tag "fn-arity279") 1)]
)
(c/list-c [] (c/coll-of-c c/top-type))])
)
(c/type-op c/apply-op
(c/param (c/tag "fn-arity279") 0)
(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "seq")
(c/fn-c []
{1 (c/fn-arity
(c/tag "seq")
(c/list-c [(c/param (c/tag "seq") 0)]
c/no-tail)
;; returns
(c/type-op c/list-from-op
(c/param (c/tag "seq") 0) c/no-args
))})

{c/VectorType (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity87")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity87") 0)])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/list-from-op
(c/param (c/tag "fn-arity87") 0) c/no-args
)]))})
c/ListType (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity176")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity176") 0)])]
c/no-tail)
;; returns
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity176") 0)
(c/type-op c/list-from-op
(c/param (c/tag "fn-arity176") 0) c/no-args
)]))})
c/SubStringType (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity202")
(c/list-c [(c/multi [c/substr-constraint
(c/param (c/tag "fn-arity202") 0)])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/list-from-op
(c/param (c/tag "fn-arity202") 0) c/no-args
)]))})
c/StringBufferType (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity203")
(c/list-c [(c/multi [c/strbuff-constraint
(c/param (c/tag "fn-arity203") 0)])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/list-from-op
(c/param (c/tag "fn-arity203") 0) c/no-args
)]))})})
[(c/param (c/tag "fn-arity279") 1)]
)
(c/list-c [] (c/coll-of-c c/top-type))])
)]))})}) 

 arg-cs [(c/ReifiedConstraint 73 (c/tag "* Bogus constructor at assertion-tests/bad-apply-constructor.toc: 4 *")
{}
{}
(c/fn-c []
{4 (c/fn-arity
(c/tag "* Bogus constructor at assertion-tests/bad-apply-constructor.toc: 4 *")
(c/seq-c [c/top-type
c/top-type
c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "Bogus")
{}
{c/contents c/top-type
(c/Field (c/tag ".a")) (c/param (c/tag "* Bogus constructor at assertion-tests/bad-apply-constructor.toc: 4 *") 1)
(c/Field (c/tag ".c")) (c/param (c/tag "* Bogus constructor at assertion-tests/bad-apply-constructor.toc: 4 *") 3)
(c/Field (c/tag ".b")) (c/param (c/tag "* Bogus constructor at assertion-tests/bad-apply-constructor.toc: 4 *") 2)
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol ""), (c/vect-c [(c/IntConstraint 4 2147483647 -2147483648)
(c/IntConstraint 5 2147483647 -2147483648)]
c/no-tail)] 

 result-type (c/NoValues [c/no-tail
(c/ReifiedConstraint 0 (c/tag "Can not contain other values")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")]) 

 Conflicting assertions (1157)  at assertion-tests/bad-apply-constructor.toc: 10
No Tail for sequence    Can not contain other valuesfrom:


***  site 1151 assertion-tests/bad-inner-12.toc: 7 
 (map (first (map x str)) inc) 

 target-c (c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/HashSetType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity630")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity630") 1)
0
))
(c/param (c/tag "fn-arity630") 0)
(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity630") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
c/contents (c/type-op c/call-value-op
(c/param (c/tag "fn-arity630") 1) c/no-args
)
}
(c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity643")
(c/seq-c [(c/multi [(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity643") 0)])
(c/param (c/tag "fn-arity643") 1)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "get")
(c/fn-c []
{2 (c/fn-arity
(c/tag "get")
(c/list-c [(c/param (c/tag "get") 0)
(c/param (c/tag "get") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "get") 0) c/no-args
) empty-list c/no-symbol ""))})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity134")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity134") 0)])
(c/param (c/tag "fn-arity134") 1)]
c/no-tail)
;; returns
(c/multi [(c/param (c/tag "fn-arity134") 0)
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity134") 0) c/no-args
) empty-list c/no-symbol "")]))})
c/BitmapIndexedType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity483")
(c/list-c [(c/multi [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity483") 0)])
(c/param (c/tag "fn-arity483") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity483") 0) c/no-args
) empty-list c/no-symbol ""))})
53 (c/fn-c []
{2 (c/fn-arity
(c/tag "Sorting_get")
(c/list-c [(c/multi [(c/ReifiedConstraint 53 (c/tag "Sorting")
{(c/Field (c/tag ".v")) c/top-type
(c/Field (c/tag ".k")) c/top-type
}
{(c/Field (c/tag ".v")) c/top-type
c/contents c/top-type
(c/Field (c/tag ".k")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "Sorting_get") 0)])
(c/param (c/tag "Sorting_get") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/get-from-op
(c/param (c/tag "Sorting_get") 0)
[(c/param (c/tag "Sorting_get") 1)]
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "Sorting_get") 0) c/no-args
)]) empty-list c/no-symbol ""))})
55 (c/fn-c []
{2 (c/fn-arity
(c/tag "RecurseWith_get")
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "RecurseWith_get") 0)])
(c/param (c/tag "RecurseWith_get") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/get-from-op
(c/param (c/tag "RecurseWith_get") 0)
[(c/param (c/tag "RecurseWith_get") 1)]
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "RecurseWith_get") 0) c/no-args
)]) empty-list c/no-symbol ""))})
c/HashCollisionNodeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity481")
(c/list-c [(c/multi [(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity481") 0)])
(c/param (c/tag "fn-arity481") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity481") 0) c/no-args
) empty-list c/no-symbol ""))})
56 (c/fn-c []
{2 (c/fn-arity
(c/tag "RecurseFinal_get")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "RecurseFinal_get") 0)])
(c/param (c/tag "RecurseFinal_get") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/get-from-op
(c/param (c/tag "RecurseFinal_get") 0)
[(c/param (c/tag "RecurseFinal_get") 1)]
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "RecurseFinal_get") 0) c/no-args
)]) empty-list c/no-symbol ""))})
c/ArrayNodeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity482")
(c/list-c [(c/multi [(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity482") 0)])
(c/param (c/tag "fn-arity482") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity482") 0) c/no-args
) empty-list c/no-symbol ""))})
c/VectorType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity86")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity86") 0)])
(c/multi [c/int-constraint
(c/IntConstraint c/no-int 2147483647 0)
(c/param (c/tag "fn-arity86") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity86") 0) c/no-args
) empty-list c/no-symbol ""))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity269")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity269") 0)])
(c/multi [c/int-constraint
(c/param (c/tag "fn-arity269") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity269") 0) c/no-args
) empty-list c/no-symbol ""))})})
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity643") 0)
[(c/Field (c/tag ".set-map"))]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])])
(c/param (c/tag "fn-arity643") 1)]
))})
 empty-list c/no-symbol ""))})
c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
55 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity552")
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity552") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity552") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity552") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity553") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity552") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity551")
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity551") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity551") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity551") 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
55 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity552")
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity552") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity552") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity552") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity553") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity552") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol ""))})
c/FutureType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity368")
(c/list-c [(c/multi [(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity368") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity368") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
c/PromiseType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity347")
(c/list-c [(c/multi [c/promise-constraint
(c/param (c/tag "fn-arity347") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity347") 1)])]
c/no-tail)
;; returns
c/promise-constraint)})
56 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity549")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity549") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity549") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity549") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity548")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity548") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity548") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity548") 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/FutureType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity368")
(c/list-c [(c/multi [(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity368") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity368") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
c/PromiseType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity347")
(c/list-c [(c/multi [c/promise-constraint
(c/param (c/tag "fn-arity347") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity347") 1)])]
c/no-tail)
;; returns
c/promise-constraint)})
56 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity549")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity549") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity549") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity549") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol ""))})
c/VectorType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity304")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity304") 1)
0
))
(c/param (c/tag "fn-arity304") 0)
(c/vect-c [] (c/coll-of-c c/top-type))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity304") 1)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/type-op c/call-value-op
(c/param (c/tag "fn-arity304") 1) c/no-args
)))), 3 (c/fn-arity
(c/tag "fn-arity303")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity303") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 2)])]
c/no-tail)
;; returns
c/top-type)})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)])))), 3 (c/fn-arity
(c/tag "fn-arity163")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity163") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)])
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity548") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity548") 0)
[(c/Field (c/tag ".x"))]
)])]
)
(c/ReifiedConstraint 59 (c/tag "* RecurseFinal constructor at core: 2585 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag "* RecurseFinal constructor at core: 2585 *")
(c/seq-c [c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "RecurseFinal")
{}
{(c/Field (c/tag ".x")) (c/param (c/tag "* RecurseFinal constructor at core: 2585 *") 1)
c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")]
))})
c/VectorType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity304")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity304") 1)
0
))
(c/param (c/tag "fn-arity304") 0)
(c/vect-c [] (c/coll-of-c c/top-type))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity304") 1)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/type-op c/call-value-op
(c/param (c/tag "fn-arity304") 1) c/no-args
)))), 3 (c/fn-arity
(c/tag "fn-arity303")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity303") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 2)])]
c/no-tail)
;; returns
c/top-type)})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)])))), 3 (c/fn-arity
(c/tag "fn-arity163")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity163") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)])
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity551") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity553") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity552") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity551") 0)
[(c/Field (c/tag ".x"))]
)])]
)
(c/ReifiedConstraint 60 (c/tag "* RecurseWith constructor at core: 2597 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag "* RecurseWith constructor at core: 2597 *")
(c/seq-c [c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "RecurseWith")
{}
{(c/Field (c/tag ".x")) (c/param (c/tag "* RecurseWith constructor at core: 2597 *") 1)
c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")]
))})
c/FutureType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity368")
(c/list-c [(c/multi [(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity368") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity368") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
c/PromiseType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity347")
(c/list-c [(c/multi [c/promise-constraint
(c/param (c/tag "fn-arity347") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity347") 1)])]
c/no-tail)
;; returns
c/promise-constraint)})
56 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity549")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity549") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity549") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity549") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity548")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity548") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity548") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity548") 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/FutureType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity368")
(c/list-c [(c/multi [(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity368") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity368") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
c/PromiseType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity347")
(c/list-c [(c/multi [c/promise-constraint
(c/param (c/tag "fn-arity347") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity347") 1)])]
c/no-tail)
;; returns
c/promise-constraint)})
56 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity549")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity549") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity549") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity549") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol ""))})
c/VectorType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity304")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity304") 1)
0
))
(c/param (c/tag "fn-arity304") 0)
(c/vect-c [] (c/coll-of-c c/top-type))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity304") 1)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/type-op c/call-value-op
(c/param (c/tag "fn-arity304") 1) c/no-args
)))), 3 (c/fn-arity
(c/tag "fn-arity303")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity303") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 2)])]
c/no-tail)
;; returns
c/top-type)})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)])))), 3 (c/fn-arity
(c/tag "fn-arity163")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity163") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)])
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity548") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity548") 0)
[(c/Field (c/tag ".x"))]
)])]
)
(c/ReifiedConstraint 59 (c/tag "* RecurseFinal constructor at core: 2585 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag "* RecurseFinal constructor at core: 2585 *")
(c/seq-c [c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "RecurseFinal")
{}
{(c/Field (c/tag ".x")) (c/param (c/tag "* RecurseFinal constructor at core: 2585 *") 1)
c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")]
))})
c/VectorType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity304")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity304") 1)
0
))
(c/param (c/tag "fn-arity304") 0)
(c/vect-c [] (c/coll-of-c c/top-type))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity304") 1)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/type-op c/call-value-op
(c/param (c/tag "fn-arity304") 1) c/no-args
)))), 3 (c/fn-arity
(c/tag "fn-arity303")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity303") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 2)])]
c/no-tail)
;; returns
c/top-type)})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)])))), 3 (c/fn-arity
(c/tag "fn-arity163")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity163") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)])
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)]))})}) 

 arg-cs [(c/MaybeConstraint c/strbuff-constraint empty-list c/no-symbol ""), (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity120")
(c/seq-c [(c/multi [c/int-constraint
(c/param (c/tag "fn-arity120") 0)])]
c/no-tail)
;; returns
c/int-constraint)})] 

 result-type (c/NoValues [c/strbuff-constraint
c/int-constraint]) 

 Conflicting assertions (1157)  at assertion-tests/bad-inner-12.toc: 7
String from:    Integer from:
core: 1719      core: 1210   
core: 1722      core: 95     
core: 22        core: 97     
                             
                             


***  site 1151 assertion-tests/bad-inner-3.toc: 12 
 (g x) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity724")
(c/seq-c [(c/multi [(c/MaybeConstraint (c/sum-c [c/strbuff-constraint
c/substr-constraint]) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity724") 0)])]
c/no-tail)
;; returns
(c/MaybeConstraint c/substr-constraint empty-list c/no-symbol ""))}) 

 arg-cs [(c/multi [(c/MaybeConstraint c/int-constraint empty-list c/no-symbol "")
(c/param (c/tag "fn-arity728") 0)])] 

 result-type (c/NoValues [c/strbuff-constraint
c/int-constraint]) 

 Conflicting assertions (1157)  at assertion-tests/bad-inner-3.toc: 12
String from:          Integer from:
bad-inner-3.toc: 8    core: 1210   
core: 336             core: 95     
core: 339             core: 97     
core: 22                           
                                   
                                   


***  site 1151 assertion-tests/bad-inner-16.toc: 25 
 (flat-map (g x) (fn  [y]
(map (i y) (fn  [_]
x)))) 

 target-c (c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/HashSetType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity629")
(c/list-c [(c/multi [(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity629") 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity629") 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity629") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
c/contents c/top-type
}
(c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity643")
(c/seq-c [(c/multi [(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity643") 0)])
(c/param (c/tag "fn-arity643") 1)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "get")
(c/fn-c []
{2 (c/fn-arity
(c/tag "get")
(c/list-c [(c/param (c/tag "get") 0)
(c/param (c/tag "get") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "get") 0) c/no-args
) empty-list c/no-symbol ""))})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity134")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity134") 0)])
(c/param (c/tag "fn-arity134") 1)]
c/no-tail)
;; returns
(c/multi [(c/param (c/tag "fn-arity134") 0)
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity134") 0) c/no-args
) empty-list c/no-symbol "")]))})
c/BitmapIndexedType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity483")
(c/list-c [(c/multi [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity483") 0)])
(c/param (c/tag "fn-arity483") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity483") 0) c/no-args
) empty-list c/no-symbol ""))})
53 (c/fn-c []
{2 (c/fn-arity
(c/tag "Sorting_get")
(c/list-c [(c/multi [(c/ReifiedConstraint 53 (c/tag "Sorting")
{(c/Field (c/tag ".v")) c/top-type
(c/Field (c/tag ".k")) c/top-type
}
{(c/Field (c/tag ".v")) c/top-type
c/contents c/top-type
(c/Field (c/tag ".k")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "Sorting_get") 0)])
(c/param (c/tag "Sorting_get") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/get-from-op
(c/param (c/tag "Sorting_get") 0)
[(c/param (c/tag "Sorting_get") 1)]
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "Sorting_get") 0) c/no-args
)]) empty-list c/no-symbol ""))})
55 (c/fn-c []
{2 (c/fn-arity
(c/tag "RecurseWith_get")
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "RecurseWith_get") 0)])
(c/param (c/tag "RecurseWith_get") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/get-from-op
(c/param (c/tag "RecurseWith_get") 0)
[(c/param (c/tag "RecurseWith_get") 1)]
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "RecurseWith_get") 0) c/no-args
)]) empty-list c/no-symbol ""))})
c/HashCollisionNodeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity481")
(c/list-c [(c/multi [(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity481") 0)])
(c/param (c/tag "fn-arity481") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity481") 0) c/no-args
) empty-list c/no-symbol ""))})
56 (c/fn-c []
{2 (c/fn-arity
(c/tag "RecurseFinal_get")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "RecurseFinal_get") 0)])
(c/param (c/tag "RecurseFinal_get") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/get-from-op
(c/param (c/tag "RecurseFinal_get") 0)
[(c/param (c/tag "RecurseFinal_get") 1)]
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "RecurseFinal_get") 0) c/no-args
)]) empty-list c/no-symbol ""))})
c/ArrayNodeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity482")
(c/list-c [(c/multi [(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity482") 0)])
(c/param (c/tag "fn-arity482") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity482") 0) c/no-args
) empty-list c/no-symbol ""))})
c/VectorType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity86")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity86") 0)])
(c/multi [c/int-constraint
(c/IntConstraint c/no-int 2147483647 0)
(c/param (c/tag "fn-arity86") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity86") 0) c/no-args
) empty-list c/no-symbol ""))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity269")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity269") 0)])
(c/multi [c/int-constraint
(c/param (c/tag "fn-arity269") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity269") 0) c/no-args
) empty-list c/no-symbol ""))})})
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity643") 0)
[(c/Field (c/tag ".set-map"))]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])])
(c/param (c/tag "fn-arity643") 1)]
))})
 empty-list c/no-symbol ""))})
c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})
c/FutureType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity367")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity367") 0)
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity367") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
c/PromiseType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity346")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity346") 0)
c/promise-constraint])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity346") 1)])]
c/no-tail)
;; returns
c/promise-constraint)})
c/VectorType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity302")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity302") 0)
(c/vect-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity302") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/intersect c/fn-constraint
(c/coll-of-c (c/vect-c [] (c/coll-of-c c/top-type))))
(c/param (c/tag "fn-arity302") 1)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/type-op c/inner-type-of-op
(c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/intersect c/fn-constraint
(c/coll-of-c (c/vect-c [] (c/coll-of-c c/top-type))))
(c/param (c/tag "fn-arity302") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/vect-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity302") 1)
0
)))
(c/param (c/tag "fn-arity302") 0)]) c/no-args
)]
) c/no-args
))))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity162")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity162") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity162") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/intersect c/fn-constraint
(c/coll-of-c (c/list-c [] (c/coll-of-c c/top-type))))
(c/param (c/tag "fn-arity162") 1)])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/concat-op
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity162") 1)
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity162") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity162") 1)
0
)])]
)
(c/list-c [] (c/coll-of-c c/top-type))]))) c/no-args
)
(c/list-c [] (c/coll-of-c (c/type-op c/inner-type-of-op
(c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/intersect c/fn-constraint
(c/coll-of-c (c/list-c [] (c/coll-of-c c/top-type))))
(c/param (c/tag "fn-arity162") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity162") 1)
0
)))
(c/param (c/tag "fn-arity162") 0)]) c/no-args
)]
) c/no-args
)))]))})}) 

 arg-cs [(c/MaybeConstraint c/int-constraint empty-list c/no-symbol ""), (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity721")
(c/seq-c [(c/multi [(c/sum-c [c/strbuff-constraint
c/substr-constraint])
(c/param (c/tag "fn-arity721") 0)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [c/int-constraint
(c/param (c/tag "fn-arity720") 0)]) empty-list c/no-symbol ""))})] 

 result-type (c/NoValues [c/strbuff-constraint
c/int-constraint]) 

 Conflicting assertions (1157)  at assertion-tests/bad-inner-16.toc: 25
String from:            Integer from:
bad-inner-16.toc: 18                 
bad-inner-16.toc: 19                 
bad-inner-16.toc: 14                 
bad-inner-16.toc: 16                 
core: 348                            
core: 350                            
core: 22                             
                                     
                                     


***  site 1151 assertion-tests/bad-inner-17.toc: 7 
 (f (vector (list 1 2) (vector 'x) (vector 3 6))) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity725")
(c/seq-c [(c/param (c/tag "fn-arity725") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "reduce")
(c/fn-c []
{3 (c/fn-arity
(c/tag "reduce")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [2])
(c/param (c/tag "reduce") 2)])
1
))
(c/param (c/tag "reduce") 0)])
(c/param (c/tag "reduce") 1)
(c/multi [(.required-arities c/fn-constraint [2])
(c/param (c/tag "reduce") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/param (c/tag "reduce") 1)
(c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [2])
(c/param (c/tag "reduce") 2)])
[(c/sum-c [(c/param (c/tag "reduce") 1)
(c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [2])
(c/param (c/tag "reduce") 2)]) c/no-args
)])
(c/type-op c/inner-type-of-op
(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [2])
(c/param (c/tag "reduce") 2)])
1
))
(c/param (c/tag "reduce") 0)]) c/no-args
)]
)]))})

{c/HashSetType (c/fn-c []
{3 (c/fn-arity
(c/tag "fn-arity638")
(c/list-c [(c/multi [(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity638") 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity638") 2)
1
))])
(c/param (c/tag "fn-arity638") 1)
(c/multi [(.required-arities c/fn-constraint [2])
(c/param (c/tag "fn-arity638") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/param (c/tag "fn-arity638") 1)
(c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity638") 2)
[(c/sum-c [(c/param (c/tag "fn-arity638") 1)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity638") 2) c/no-args
)])
(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity638") 2)
1
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity638") 0) c/no-args
)])]
)
(c/param (c/tag "fn-arity638") 1)])
(c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity638") 2)
[(c/sum-c [(c/param (c/tag "fn-arity638") 1)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity638") 2) c/no-args
)])
(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity638") 2)
1
)
(c/type-op c/inner-type-of-op
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "vals")
(c/fn-c []
{1 (c/fn-arity
(c/tag "vals")
(c/list-c [(c/param (c/tag "vals") 0)]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c c/top-type)))})

{c/BitmapIndexedType (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity492")
(c/list-c [(c/multi [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity492") 0)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c c/top-type)))})
c/HashCollisionNodeType (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity490")
(c/list-c [(c/multi [(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity490") 0)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c c/top-type)))})
c/ArrayNodeType (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity491")
(c/list-c [(c/multi [(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity491") 0)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c c/top-type)))})})
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity643") 0)
[(c/Field (c/tag ".set-map"))]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity642") 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity641") 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity640") 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity639") 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity638") 0)
[(c/Field (c/tag ".set-map"))]
)])]
) c/no-args
)])]
)
(c/param (c/tag "fn-arity638") 1)])
(c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity638") 2)
[(c/sum-c [(c/param (c/tag "fn-arity638") 1)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity638") 2) c/no-args
)])
(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity638") 2)
1
)
(c/type-op c/inner-type-of-op
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "vals")
(c/fn-c []
{1 (c/fn-arity
(c/tag "vals")
(c/list-c [(c/param (c/tag "vals") 0)]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c c/top-type)))})

{c/BitmapIndexedType (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity492")
(c/list-c [(c/multi [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity492") 0)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c c/top-type)))})
c/HashCollisionNodeType (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity490")
(c/list-c [(c/multi [(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity490") 0)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c c/top-type)))})
c/ArrayNodeType (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity491")
(c/list-c [(c/multi [(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity491") 0)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c c/top-type)))})})
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity643") 0)
[(c/Field (c/tag ".set-map"))]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity642") 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity641") 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity640") 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity639") 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity638") 0)
[(c/Field (c/tag ".set-map"))]
)])]
) c/no-args
)])]
)
(c/param (c/tag "fn-arity638") 1)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity638") 2)
[(c/sum-c [(c/param (c/tag "fn-arity638") 1)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity638") 2) c/no-args
)])
(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity638") 2)
1
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity638") 0) c/no-args
)])]
)])
(c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity638") 2)
[(c/sum-c [(c/param (c/tag "fn-arity638") 1)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity638") 2) c/no-args
)])
(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity638") 2)
1
)
(c/type-op c/inner-type-of-op
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "vals")
(c/fn-c []
{1 (c/fn-arity
(c/tag "vals")
(c/list-c [(c/param (c/tag "vals") 0)]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c c/top-type)))})

{c/BitmapIndexedType (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity492")
(c/list-c [(c/multi [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity492") 0)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c c/top-type)))})
c/HashCollisionNodeType (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity490")
(c/list-c [(c/multi [(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity490") 0)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c c/top-type)))})
c/ArrayNodeType (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity491")
(c/list-c [(c/multi [(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity491") 0)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c c/top-type)))})})
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity643") 0)
[(c/Field (c/tag ".set-map"))]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity642") 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity641") 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity640") 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity639") 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity638") 0)
[(c/Field (c/tag ".set-map"))]
)])]
) c/no-args
)])]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity638") 2)
[(c/sum-c [(c/param (c/tag "fn-arity638") 1)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity638") 2) c/no-args
)])
(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity638") 2)
1
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity638") 0) c/no-args
)])]
)])]))})
c/VectorType (c/fn-c []
{3 (c/fn-arity
(c/tag "fn-arity301")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity301") 0)
(c/vect-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity301") 2)
1
)))])
(c/param (c/tag "fn-arity301") 1)
(c/multi [(.required-arities c/fn-constraint [2])
(c/param (c/tag "fn-arity301") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/param (c/tag "fn-arity301") 1)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity301") 2)
[(c/sum-c [(c/param (c/tag "fn-arity301") 1)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity301") 2) c/no-args
)])
(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity301") 2)
1
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity301") 0) c/no-args
)])]
)]))})
c/ListType (c/fn-c []
{3 (c/fn-arity
(c/tag "fn-arity160")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity160") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity160") 2)
1
)))])
(c/param (c/tag "fn-arity160") 1)
(c/multi [(.required-arities c/fn-constraint [2])
(c/param (c/tag "fn-arity160") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/param (c/tag "fn-arity160") 1)
(c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity160") 2)
[(c/sum-c [(c/param (c/tag "fn-arity160") 1)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity160") 2) c/no-args
)])
(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity160") 2)
1
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity160") 0) c/no-args
)])]
)
(c/param (c/tag "fn-arity160") 1)])
(c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity160") 2)
[(c/sum-c [(c/param (c/tag "fn-arity160") 1)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity160") 2) c/no-args
)])
(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity160") 2)
1
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity160") 0) c/no-args
)])]
)])]))})
c/SubStringType (c/fn-c []
{3 (c/fn-arity
(c/tag "fn-arity210")
(c/list-c [(c/multi [c/substr-constraint
(c/param (c/tag "fn-arity210") 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity210") 2)
1
))])
(c/param (c/tag "fn-arity210") 1)
(c/multi [(.required-arities c/fn-constraint [2])
(c/param (c/tag "fn-arity210") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/param (c/tag "fn-arity210") 1)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity210") 2)
[(c/sum-c [(c/param (c/tag "fn-arity210") 1)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity210") 2) c/no-args
)])
(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity210") 2)
1
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity210") 0) c/no-args
)])]
)]))})
c/StringBufferType (c/fn-c []
{3 (c/fn-arity
(c/tag "fn-arity211")
(c/list-c [(c/multi [c/strbuff-constraint
(c/param (c/tag "fn-arity211") 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity211") 2)
1
))])
(c/param (c/tag "fn-arity211") 1)
(c/multi [(.required-arities c/fn-constraint [2])
(c/param (c/tag "fn-arity211") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/param (c/tag "fn-arity211") 1)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity211") 2)
[(c/sum-c [(c/param (c/tag "fn-arity211") 1)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity211") 2) c/no-args
)])
(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity211") 2)
1
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity211") 0) c/no-args
)])]
)]))})})
[(c/param (c/tag "fn-arity725") 0)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
(c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity727")
(c/seq-c [(c/param (c/tag "fn-arity727") 0)
(c/seq-c [c/int-constraint
c/top-type]
c/no-tail)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "assoc")
(c/fn-c []
{3 (c/fn-arity
(c/tag "assoc")
(c/list-c [(c/param (c/tag "assoc") 0)
(c/param (c/tag "assoc") 1)
(c/param (c/tag "assoc") 2)]
c/no-tail)
;; returns
c/top-type)})

{c/HashSetType (c/fn-c []
{3 (c/fn-arity
(c/tag "HashSet_get")
(c/list-c [(c/multi [(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "HashSet_get") 0)])
(c/param (c/tag "HashSet_get") 1)
(c/param (c/tag "HashSet_get") 2)]
c/no-tail)
;; returns
(c/type-op c/set-to-op
(c/param (c/tag "HashSet_get") 0)
[[(c/param (c/tag "HashSet_get") 1)]
(c/param (c/tag "HashSet_get") 2)]
))})
64 (c/fn-c []
{3 (c/fn-arity
(c/tag "LazyList_get")
(c/list-c [(c/multi [(c/ReifiedConstraint 64 (c/tag "LazyList")
{(c/Field (c/tag ".lazy")) (c/list-c [] (c/coll-of-c c/top-type))
(c/Field (c/tag ".tail")) c/top-type
(c/Field (c/tag ".container")) c/top-type
}
{(c/Field (c/tag ".lazy")) (c/list-c [] (c/coll-of-c c/top-type))
(c/Field (c/tag ".tail")) c/top-type
c/contents c/top-type
(c/Field (c/tag ".container")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "LazyList_get") 0)])
(c/param (c/tag "LazyList_get") 1)
(c/param (c/tag "LazyList_get") 2)]
c/no-tail)
;; returns
(c/type-op c/set-to-op
(c/param (c/tag "LazyList_get") 0)
[[(c/param (c/tag "LazyList_get") 1)]
(c/param (c/tag "LazyList_get") 2)]
))})
c/MaybeType (c/fn-c []
{3 (c/fn-arity
(c/tag "fn-arity135")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity135") 0)])
(c/param (c/tag "fn-arity135") 1)
(c/param (c/tag "fn-arity135") 2)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity135") 2) empty-list c/no-symbol ""))})
c/BitmapIndexedType (c/fn-c []
{3 (c/fn-arity
(c/tag "fn-arity486")
(c/list-c [(c/multi [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity486") 0)])
(c/param (c/tag "fn-arity486") 1)
(c/param (c/tag "fn-arity486") 2)]
c/no-tail)
;; returns
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")]))})
53 (c/fn-c []
{3 (c/fn-arity
(c/tag "Sorting_get")
(c/list-c [(c/multi [(c/ReifiedConstraint 53 (c/tag "Sorting")
{(c/Field (c/tag ".v")) c/top-type
(c/Field (c/tag ".k")) c/top-type
}
{(c/Field (c/tag ".v")) c/top-type
c/contents c/top-type
(c/Field (c/tag ".k")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "Sorting_get") 0)])
(c/param (c/tag "Sorting_get") 1)
(c/param (c/tag "Sorting_get") 2)]
c/no-tail)
;; returns
(c/type-op c/set-to-op
(c/param (c/tag "Sorting_get") 0)
[[(c/param (c/tag "Sorting_get") 1)]
(c/param (c/tag "Sorting_get") 2)]
))})
55 (c/fn-c []
{3 (c/fn-arity
(c/tag "RecurseWith_get")
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "RecurseWith_get") 0)])
(c/param (c/tag "RecurseWith_get") 1)
(c/param (c/tag "RecurseWith_get") 2)]
c/no-tail)
;; returns
(c/type-op c/set-to-op
(c/param (c/tag "RecurseWith_get") 0)
[[(c/param (c/tag "RecurseWith_get") 1)]
(c/param (c/tag "RecurseWith_get") 2)]
))})
c/HashCollisionNodeType (c/fn-c []
{3 (c/fn-arity
(c/tag "fn-arity484")
(c/list-c [(c/multi [(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity484") 0)])
(c/param (c/tag "fn-arity484") 1)
(c/param (c/tag "fn-arity484") 2)]
c/no-tail)
;; returns
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")]))})
56 (c/fn-c []
{3 (c/fn-arity
(c/tag "RecurseFinal_get")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "RecurseFinal_get") 0)])
(c/param (c/tag "RecurseFinal_get") 1)
(c/param (c/tag "RecurseFinal_get") 2)]
c/no-tail)
;; returns
(c/type-op c/set-to-op
(c/param (c/tag "RecurseFinal_get") 0)
[[(c/param (c/tag "RecurseFinal_get") 1)]
(c/param (c/tag "RecurseFinal_get") 2)]
))})
c/ArrayNodeType (c/fn-c []
{3 (c/fn-arity
(c/tag "fn-arity485")
(c/list-c [(c/multi [(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity485") 0)])
(c/param (c/tag "fn-arity485") 1)
(c/param (c/tag "fn-arity485") 2)]
c/no-tail)
;; returns
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")]))})
62 (c/fn-c []
{3 (c/fn-arity
(c/tag "IntGenerator_get")
(c/list-c [(c/multi [(c/ReifiedConstraint 62 (c/tag "IntGenerator")
{(c/Field (c/tag ".gen")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".gen")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "IntGenerator_get") 0)])
(c/param (c/tag "IntGenerator_get") 1)
(c/param (c/tag "IntGenerator_get") 2)]
c/no-tail)
;; returns
(c/type-op c/set-to-op
(c/param (c/tag "IntGenerator_get") 0)
[[(c/param (c/tag "IntGenerator_get") 1)]
(c/param (c/tag "IntGenerator_get") 2)]
))})})
[(c/param (c/tag "fn-arity727") 0)
c/top-type
(c/vect-c [c/int-constraint
c/top-type]
c/no-tail)]
))})]
))}) 

 arg-cs [(c/vect-c [(c/list-c [(c/IntConstraint 1 2147483647 -2147483648)
(c/IntConstraint 2 2147483647 -2147483648)]
c/no-tail)
(c/vect-c [(c/SymConstraint x)]
c/no-tail)
(c/vect-c [(c/IntConstraint 3 2147483647 -2147483648)
(c/IntConstraint 6 2147483647 -2147483648)]
c/no-tail)]
c/no-tail)] 

 result-type (c/NoValues [c/int-constraint
(c/SymConstraint x)]) 

 Conflicting assertions (1157)  at assertion-tests/bad-inner-17.toc: 7
Integer from:          Symbol xfrom:      
bad-inner-17.toc: 4    bad-inner-17.toc: 8
core: 1208                                
core: 1210                                
core: 95                                  
core: 97                                  
                                          
                                          


***  site 1151 assertion-tests/bad-inner-5.toc: 11 
 (g (f x)) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity731")
(c/seq-c [(c/multi [(c/MaybeConstraint (c/sum-c [c/strbuff-constraint
c/substr-constraint]) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity731") 0)])]
c/no-tail)
;; returns
(c/MaybeConstraint c/substr-constraint empty-list c/no-symbol ""))}) 

 arg-cs [(c/MaybeConstraint c/int-constraint empty-list c/no-symbol "")] 

 result-type (c/NoValues [c/strbuff-constraint
c/int-constraint]) 

 Conflicting assertions (1157)  at assertion-tests/bad-inner-5.toc: 11
String from:          Integer from:
bad-inner-5.toc: 8    core: 1210   
core: 336             core: 95     
core: 339             core: 98     
core: 22                           
                                   
                                   


***  site 1151 assertion-tests/bad-function-returns-3.toc: 8 
 (new-se (fn  [s]
'Failure)) 

 target-c (c/ReifiedConstraint 95 (c/tag "* new-se constructor at assertion-tests/bad-function-returns-3.toc: 2 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag "* new-se constructor at assertion-tests/bad-function-returns-3.toc: 2 *")
(c/seq-c [c/top-type
(c/intersect c/fn-constraint
(c/coll-of-c (c/vect-c [] (c/coll-of-c c/top-type))))]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "new-se")
{}
{c/contents c/top-type
(c/Field (c/tag ".invoke-fn")) (c/multi [(c/intersect c/fn-constraint
(c/coll-of-c (c/vect-c [] (c/coll-of-c c/top-type))))
(c/param (c/tag "* new-se constructor at assertion-tests/bad-function-returns-3.toc: 2 *") 1)])
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "") 

 arg-cs [(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity741")
(c/seq-c [(c/param (c/tag "fn-arity741") 0)]
c/no-tail)
;; returns
(c/SymConstraint Failure))})] 

 result-type (c/NoValues [(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity741")
(c/seq-c [(c/param (c/tag "fn-arity741") 0)]
c/no-tail)
;; returns
(c/SymConstraint Failure))})
(c/intersect c/fn-constraint
(c/coll-of-c (c/vect-c [] (c/coll-of-c c/top-type))))]) 

 Conflicting assertions (1157)  at assertion-tests/bad-function-returns-3.toc: 8
Function from    Function from
                              
                              


***  Conflicting assertions (1335)  at assertion-tests/bad-field-2.toc: 15
field 'not-there' requiredfrom:    Bogusfrom:         
                                   bad-field-2.toc: 16
                                   bad-field-2.toc: 11
                                   bad-field-2.toc: 13
                                   bad-field-2.toc: 12
                                   bad-field-2.toc: 4 
                                                      
                                                      


***  site 1151 assertion-tests/bad-let.toc: 9 
 (bad "99") 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity746")
(c/seq-c [(c/multi [c/int-constraint
(c/param (c/tag "fn-arity746") 0)])]
c/no-tail)
;; returns
c/substr-constraint)}) 

 arg-cs [(c/StrBuffConstraint 99empty-list c/no-symbol "")] 

 result-type (c/NoValues [c/int-constraint
(c/StrBuffConstraint 99empty-list c/no-symbol "")]) 

 Conflicting assertions (1157)  at assertion-tests/bad-let.toc: 9
Integer from:     String 99from:
bad-let.toc: 3                  
core: 1208                      
core: 1210                      
core: 95                        
core: 97                        
                                
                                


***  site 1151 assertion-tests/bad-field-5.toc: 13 
 (f (Bogus 99)) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity745")
(c/seq-c [(c/param (c/tag "fn-arity745") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag ".not-there")
(c/fn-c []
{2 (c/fn-arity
(c/tag ".not-there_setter")
(c/seq-c [(c/multi [(c/param (c/tag ".not-there_setter") 0)
(c/ReifiedConstraint 0 (c/tag "field 'not-there' required")
{}
{(c/Field (c/tag ".not-there")) c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
(c/param (c/tag ".not-there_setter") 1)]
c/no-tail)
;; returns
(c/type-op c/set-to-op
(c/param (c/tag ".not-there_setter") 0)
[[(c/Field (c/tag ".not-there"))]
(c/param (c/tag ".not-there_setter") 1)]
)), 1 (c/fn-arity
(c/tag ".not-there_getter")
(c/seq-c [(c/multi [(c/param (c/tag ".not-there_getter") 0)
(c/ReifiedConstraint 0 (c/tag "field 'not-there' required")
{}
{(c/Field (c/tag ".not-there")) c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])]
c/no-tail)
;; returns
(c/type-op c/get-from-op
(c/param (c/tag ".not-there_getter") 0)
[(c/Field (c/tag ".not-there"))]
))})

{80 (c/fn-c []
{2 (c/fn-arity
(c/tag "Ooops-.not-there-setter")
(c/seq-c [(c/multi [(c/param (c/tag "Ooops-.not-there-setter") 0)
(c/ReifiedConstraint 80 (c/tag "Ooops")
{(c/Field (c/tag ".not-there")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".not-there")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")])
(c/multi [(c/param (c/tag "Ooops-.not-there-setter") 1)
c/top-type])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/set-to-op
(c/param (c/tag "Ooops-.not-there-setter") 0)
[[(c/Field (c/tag ".not-there"))]
(c/param (c/tag "Ooops-.not-there-setter") 1)]
)])), 1 (c/fn-arity
(c/tag "Ooops-.not-there-getter")
(c/seq-c [(c/multi [(c/param (c/tag "Ooops-.not-there-getter") 0)
(c/ReifiedConstraint 80 (c/tag "Ooops")
{(c/Field (c/tag ".not-there")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".not-there")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "Ooops-.not-there-getter") 0)
[(c/Field (c/tag ".not-there"))]
)]))})})
[(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag ".x-field")
(c/fn-c []
{2 (c/fn-arity
(c/tag ".x-field_setter")
(c/seq-c [(c/multi [(c/param (c/tag ".x-field_setter") 0)
(c/ReifiedConstraint 0 (c/tag "field 'x-field' required")
{}
{(c/Field (c/tag ".x-field")) c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
(c/param (c/tag ".x-field_setter") 1)]
c/no-tail)
;; returns
(c/type-op c/set-to-op
(c/param (c/tag ".x-field_setter") 0)
[[(c/Field (c/tag ".x-field"))]
(c/param (c/tag ".x-field_setter") 1)]
)), 1 (c/fn-arity
(c/tag ".x-field_getter")
(c/seq-c [(c/multi [(c/param (c/tag ".x-field_getter") 0)
(c/ReifiedConstraint 0 (c/tag "field 'x-field' required")
{}
{(c/Field (c/tag ".x-field")) c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])]
c/no-tail)
;; returns
(c/type-op c/get-from-op
(c/param (c/tag ".x-field_getter") 0)
[(c/Field (c/tag ".x-field"))]
))})

{88 (c/fn-c []
{2 (c/fn-arity
(c/tag "Bogus-.x-field-setter")
(c/seq-c [(c/multi [(c/param (c/tag "Bogus-.x-field-setter") 0)
(c/ReifiedConstraint 88 (c/tag "Bogus")
{(c/Field (c/tag ".x-field")) c/top-type
}
{(c/Field (c/tag ".x-field")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")])
(c/multi [(c/param (c/tag "Bogus-.x-field-setter") 1)
c/top-type])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/set-to-op
(c/param (c/tag "Bogus-.x-field-setter") 0)
[[(c/Field (c/tag ".x-field"))]
(c/param (c/tag "Bogus-.x-field-setter") 1)]
)])), 1 (c/fn-arity
(c/tag "Bogus-.x-field-getter")
(c/seq-c [(c/multi [(c/param (c/tag "Bogus-.x-field-getter") 0)
(c/ReifiedConstraint 88 (c/tag "Bogus")
{(c/Field (c/tag ".x-field")) c/top-type
}
{(c/Field (c/tag ".x-field")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "Bogus-.x-field-getter") 0)
[(c/Field (c/tag ".x-field"))]
)]))})})
[(c/param (c/tag "fn-arity745") 0)
(c/IntConstraint 3 2147483647 -2147483648)]
)]
))}) 

 arg-cs [(c/ReifiedConstraint 88 (c/tag "Bogus")
{(c/Field (c/tag ".x-field")) c/top-type
}
{(c/Field (c/tag ".x-field")) (c/IntConstraint 99 2147483647 -2147483648)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")] 

 result-type (c/NoValues [(c/ReifiedConstraint 0 (c/tag "field 'not-there' required")
{}
{(c/Field (c/tag ".not-there")) c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 88 (c/tag "Bogus")
{(c/Field (c/tag ".x-field")) c/top-type
}
{(c/Field (c/tag ".x-field")) (c/IntConstraint 3 2147483647 -2147483648)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")]) 

 Conflicting assertions (1157)  at assertion-tests/bad-field-5.toc: 13
field 'not-there' requiredfrom:    Bogusfrom:
                                             
                                             


***  site 1151 assertion-tests/bad-inner-13.toc: 6 
 (map (map x str) inc) 

 target-c (c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/HashSetType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity630")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity630") 1)
0
))
(c/param (c/tag "fn-arity630") 0)
(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity630") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
c/contents (c/type-op c/call-value-op
(c/param (c/tag "fn-arity630") 1) c/no-args
)
}
(c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity643")
(c/seq-c [(c/multi [(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity643") 0)])
(c/param (c/tag "fn-arity643") 1)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "get")
(c/fn-c []
{2 (c/fn-arity
(c/tag "get")
(c/list-c [(c/param (c/tag "get") 0)
(c/param (c/tag "get") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "get") 0) c/no-args
) empty-list c/no-symbol ""))})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity134")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity134") 0)])
(c/param (c/tag "fn-arity134") 1)]
c/no-tail)
;; returns
(c/multi [(c/param (c/tag "fn-arity134") 0)
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity134") 0) c/no-args
) empty-list c/no-symbol "")]))})
c/BitmapIndexedType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity483")
(c/list-c [(c/multi [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity483") 0)])
(c/param (c/tag "fn-arity483") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity483") 0) c/no-args
) empty-list c/no-symbol ""))})
53 (c/fn-c []
{2 (c/fn-arity
(c/tag "Sorting_get")
(c/list-c [(c/multi [(c/ReifiedConstraint 53 (c/tag "Sorting")
{(c/Field (c/tag ".v")) c/top-type
(c/Field (c/tag ".k")) c/top-type
}
{(c/Field (c/tag ".v")) c/top-type
c/contents c/top-type
(c/Field (c/tag ".k")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "Sorting_get") 0)])
(c/param (c/tag "Sorting_get") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/get-from-op
(c/param (c/tag "Sorting_get") 0)
[(c/param (c/tag "Sorting_get") 1)]
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "Sorting_get") 0) c/no-args
)]) empty-list c/no-symbol ""))})
55 (c/fn-c []
{2 (c/fn-arity
(c/tag "RecurseWith_get")
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "RecurseWith_get") 0)])
(c/param (c/tag "RecurseWith_get") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/get-from-op
(c/param (c/tag "RecurseWith_get") 0)
[(c/param (c/tag "RecurseWith_get") 1)]
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "RecurseWith_get") 0) c/no-args
)]) empty-list c/no-symbol ""))})
c/HashCollisionNodeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity481")
(c/list-c [(c/multi [(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity481") 0)])
(c/param (c/tag "fn-arity481") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity481") 0) c/no-args
) empty-list c/no-symbol ""))})
56 (c/fn-c []
{2 (c/fn-arity
(c/tag "RecurseFinal_get")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "RecurseFinal_get") 0)])
(c/param (c/tag "RecurseFinal_get") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/get-from-op
(c/param (c/tag "RecurseFinal_get") 0)
[(c/param (c/tag "RecurseFinal_get") 1)]
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "RecurseFinal_get") 0) c/no-args
)]) empty-list c/no-symbol ""))})
c/ArrayNodeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity482")
(c/list-c [(c/multi [(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity482") 0)])
(c/param (c/tag "fn-arity482") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity482") 0) c/no-args
) empty-list c/no-symbol ""))})
c/VectorType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity86")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity86") 0)])
(c/multi [c/int-constraint
(c/IntConstraint c/no-int 2147483647 0)
(c/param (c/tag "fn-arity86") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity86") 0) c/no-args
) empty-list c/no-symbol ""))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity269")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity269") 0)])
(c/multi [c/int-constraint
(c/param (c/tag "fn-arity269") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity269") 0) c/no-args
) empty-list c/no-symbol ""))})})
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity643") 0)
[(c/Field (c/tag ".set-map"))]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])])
(c/param (c/tag "fn-arity643") 1)]
))})
 empty-list c/no-symbol ""))})
c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
55 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity552")
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity552") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity552") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity552") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity553") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity552") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity551")
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity551") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity551") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity551") 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
55 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity552")
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity552") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity552") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity552") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity553") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity552") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol ""))})
c/FutureType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity368")
(c/list-c [(c/multi [(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity368") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity368") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
c/PromiseType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity347")
(c/list-c [(c/multi [c/promise-constraint
(c/param (c/tag "fn-arity347") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity347") 1)])]
c/no-tail)
;; returns
c/promise-constraint)})
56 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity549")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity549") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity549") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity549") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity548")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity548") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity548") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity548") 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/FutureType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity368")
(c/list-c [(c/multi [(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity368") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity368") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
c/PromiseType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity347")
(c/list-c [(c/multi [c/promise-constraint
(c/param (c/tag "fn-arity347") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity347") 1)])]
c/no-tail)
;; returns
c/promise-constraint)})
56 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity549")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity549") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity549") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity549") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol ""))})
c/VectorType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity304")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity304") 1)
0
))
(c/param (c/tag "fn-arity304") 0)
(c/vect-c [] (c/coll-of-c c/top-type))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity304") 1)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/type-op c/call-value-op
(c/param (c/tag "fn-arity304") 1) c/no-args
)))), 3 (c/fn-arity
(c/tag "fn-arity303")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity303") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 2)])]
c/no-tail)
;; returns
c/top-type)})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)])))), 3 (c/fn-arity
(c/tag "fn-arity163")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity163") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)])
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity548") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity548") 0)
[(c/Field (c/tag ".x"))]
)])]
)
(c/ReifiedConstraint 59 (c/tag "* RecurseFinal constructor at core: 2585 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag "* RecurseFinal constructor at core: 2585 *")
(c/seq-c [c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "RecurseFinal")
{}
{(c/Field (c/tag ".x")) (c/param (c/tag "* RecurseFinal constructor at core: 2585 *") 1)
c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")]
))})
c/VectorType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity304")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity304") 1)
0
))
(c/param (c/tag "fn-arity304") 0)
(c/vect-c [] (c/coll-of-c c/top-type))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity304") 1)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/type-op c/call-value-op
(c/param (c/tag "fn-arity304") 1) c/no-args
)))), 3 (c/fn-arity
(c/tag "fn-arity303")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity303") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 2)])]
c/no-tail)
;; returns
c/top-type)})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)])))), 3 (c/fn-arity
(c/tag "fn-arity163")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity163") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)])
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity551") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity553") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity552") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity551") 0)
[(c/Field (c/tag ".x"))]
)])]
)
(c/ReifiedConstraint 60 (c/tag "* RecurseWith constructor at core: 2597 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag "* RecurseWith constructor at core: 2597 *")
(c/seq-c [c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "RecurseWith")
{}
{(c/Field (c/tag ".x")) (c/param (c/tag "* RecurseWith constructor at core: 2597 *") 1)
c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")]
))})
c/FutureType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity368")
(c/list-c [(c/multi [(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity368") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity368") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
c/PromiseType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity347")
(c/list-c [(c/multi [c/promise-constraint
(c/param (c/tag "fn-arity347") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity347") 1)])]
c/no-tail)
;; returns
c/promise-constraint)})
56 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity549")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity549") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity549") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity549") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity548")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity548") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity548") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity548") 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/FutureType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity368")
(c/list-c [(c/multi [(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity368") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity368") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
c/PromiseType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity347")
(c/list-c [(c/multi [c/promise-constraint
(c/param (c/tag "fn-arity347") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity347") 1)])]
c/no-tail)
;; returns
c/promise-constraint)})
56 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity549")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity549") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity549") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity549") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol ""))})
c/VectorType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity304")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity304") 1)
0
))
(c/param (c/tag "fn-arity304") 0)
(c/vect-c [] (c/coll-of-c c/top-type))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity304") 1)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/type-op c/call-value-op
(c/param (c/tag "fn-arity304") 1) c/no-args
)))), 3 (c/fn-arity
(c/tag "fn-arity303")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity303") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 2)])]
c/no-tail)
;; returns
c/top-type)})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)])))), 3 (c/fn-arity
(c/tag "fn-arity163")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity163") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)])
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity548") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity548") 0)
[(c/Field (c/tag ".x"))]
)])]
)
(c/ReifiedConstraint 59 (c/tag "* RecurseFinal constructor at core: 2585 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag "* RecurseFinal constructor at core: 2585 *")
(c/seq-c [c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "RecurseFinal")
{}
{(c/Field (c/tag ".x")) (c/param (c/tag "* RecurseFinal constructor at core: 2585 *") 1)
c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")]
))})
c/VectorType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity304")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity304") 1)
0
))
(c/param (c/tag "fn-arity304") 0)
(c/vect-c [] (c/coll-of-c c/top-type))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity304") 1)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/type-op c/call-value-op
(c/param (c/tag "fn-arity304") 1) c/no-args
)))), 3 (c/fn-arity
(c/tag "fn-arity303")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity303") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 2)])]
c/no-tail)
;; returns
c/top-type)})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)])))), 3 (c/fn-arity
(c/tag "fn-arity163")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity163") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)])
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)]))})}) 

 arg-cs [(c/list-c [] (c/coll-of-c c/strbuff-constraint)), (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity120")
(c/seq-c [(c/multi [c/int-constraint
(c/param (c/tag "fn-arity120") 0)])]
c/no-tail)
;; returns
c/int-constraint)})] 

 result-type (c/NoValues [c/strbuff-constraint
c/int-constraint]) 

 Conflicting assertions (1157)  at assertion-tests/bad-inner-13.toc: 6
String from:    Integer from:
core: 1719      core: 1210   
core: 1722      core: 95     
core: 22        core: 97     
                             
                             


***  site 1151 assertion-tests/bad-inner-4.toc: 5 
 (drop-while (map (vector 1 2 3) inc) (fn  [n]
(= "" (subs n 1)))) 

 target-c (c/ProtoImpls
(c/tag "drop-while")
(c/fn-c []
{2 (c/fn-arity
(c/tag "drop-while")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "drop-while") 1)])
0
))
(c/param (c/tag "drop-while") 0)])
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "drop-while") 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/type-op c/inner-type-of-op
(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "drop-while") 1)])
0
))
(c/param (c/tag "drop-while") 0)]) c/no-args
)))})

{c/VectorType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity338")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity338") 0)
(c/vect-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity338") 1)
0
)))])
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity338") 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity338") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity338") 0) c/no-args
)])))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity274")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity274") 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity274") 1)
0
))])
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity274") 1)])]
c/no-tail)
;; returns
(c/coll-of-c (c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity274") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity274") 0) c/no-args
)])))})
c/SubStringType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity262")
(c/list-c [(c/multi [c/substr-constraint
(c/param (c/tag "fn-arity262") 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity262") 1)
0
))])
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity262") 1)])]
c/no-tail)
;; returns
(c/multi [c/substr-constraint
(c/coll-of-c (c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity262") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity262") 0) c/no-args
)
c/substr-constraint]))]))})
c/StringBufferType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity263")
(c/list-c [(c/multi [c/strbuff-constraint
(c/param (c/tag "fn-arity263") 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity263") 1)
0
))])
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity263") 1)])]
c/no-tail)
;; returns
(c/multi [c/substr-constraint
(c/coll-of-c (c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity263") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity263") 0) c/no-args
)
c/substr-constraint]))]))})}) 

 arg-cs [(c/vect-c [] (c/coll-of-c c/int-constraint)), (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity747")
(c/seq-c [(c/multi [(c/sum-c [c/strbuff-constraint
c/substr-constraint])
(c/param (c/tag "fn-arity747") 0)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/sum-c [(c/StrBuffConstraint empty-list c/no-symbol "")
c/substr-constraint]) empty-list c/no-symbol ""))})] 

 result-type (c/NoValues [c/strbuff-constraint
c/int-constraint]) 

 Conflicting assertions (1157)  at assertion-tests/bad-inner-4.toc: 5
String from:    Integer from:
core: 336       core: 1208   
core: 339       core: 1210   
core: 22        core: 95     
                core: 98     
                             
                             


***  site 1151 assertion-tests/bad-nested-let.toc: 10 
 (bad "99") 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity748")
(c/seq-c [(c/multi [c/int-constraint
(c/param (c/tag "fn-arity748") 0)])]
c/no-tail)
;; returns
c/substr-constraint)}) 

 arg-cs [(c/StrBuffConstraint 99empty-list c/no-symbol "")] 

 result-type (c/NoValues [c/int-constraint
(c/StrBuffConstraint 99empty-list c/no-symbol "")]) 

 Conflicting assertions (1157)  at assertion-tests/bad-nested-let.toc: 10
Integer from:            String 99from:
bad-nested-let.toc: 4                  
core: 1208                             
core: 1210                             
core: 95                               
core: 97                               
                                       
                                       


*** Conflicting assertions (785)  at assertion-tests/bad-or-2.toc: 5
Maybe from:    ArrayNodefrom:
               core: 2527    
               core: 2530    
                             
                             


*** Conflicting assertions (785)  at assertion-tests/bad-or-1.toc: 8
Maybe from:    ArrayNodefrom: 
               bad-or-1.toc: 3
               bad-or-1.toc: 4
               core: 2527     
               core: 2530     
                              
                              


***  site 1151 assertion-tests/bad-field-1.toc: 9 
 (.not-there (Bogus 99)) 

 target-c (c/ProtoImpls
(c/tag ".not-there")
(c/fn-c []
{2 (c/fn-arity
(c/tag ".not-there_setter")
(c/seq-c [(c/multi [(c/param (c/tag ".not-there_setter") 0)
(c/ReifiedConstraint 0 (c/tag "field 'not-there' required")
{}
{(c/Field (c/tag ".not-there")) c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
(c/param (c/tag ".not-there_setter") 1)]
c/no-tail)
;; returns
(c/type-op c/set-to-op
(c/param (c/tag ".not-there_setter") 0)
[[(c/Field (c/tag ".not-there"))]
(c/param (c/tag ".not-there_setter") 1)]
)), 1 (c/fn-arity
(c/tag ".not-there_getter")
(c/seq-c [(c/multi [(c/param (c/tag ".not-there_getter") 0)
(c/ReifiedConstraint 0 (c/tag "field 'not-there' required")
{}
{(c/Field (c/tag ".not-there")) c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])]
c/no-tail)
;; returns
(c/type-op c/get-from-op
(c/param (c/tag ".not-there_getter") 0)
[(c/Field (c/tag ".not-there"))]
))})

{70 (c/fn-c []
{2 (c/fn-arity
(c/tag "Ooops-.not-there-setter")
(c/seq-c [(c/multi [(c/param (c/tag "Ooops-.not-there-setter") 0)
(c/ReifiedConstraint 70 (c/tag "Ooops")
{(c/Field (c/tag ".not-there")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".not-there")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")])
(c/multi [(c/param (c/tag "Ooops-.not-there-setter") 1)
c/top-type])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/set-to-op
(c/param (c/tag "Ooops-.not-there-setter") 0)
[[(c/Field (c/tag ".not-there"))]
(c/param (c/tag "Ooops-.not-there-setter") 1)]
)])), 1 (c/fn-arity
(c/tag "Ooops-.not-there-getter")
(c/seq-c [(c/multi [(c/param (c/tag "Ooops-.not-there-getter") 0)
(c/ReifiedConstraint 70 (c/tag "Ooops")
{(c/Field (c/tag ".not-there")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".not-there")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "Ooops-.not-there-getter") 0)
[(c/Field (c/tag ".not-there"))]
)]))})}) 

 arg-cs [(c/ReifiedConstraint 93 (c/tag "Bogus")
{(c/Field (c/tag ".x-field")) c/top-type
}
{(c/Field (c/tag ".x-field")) (c/IntConstraint 99 2147483647 -2147483648)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")] 

 result-type (c/NoValues [(c/ReifiedConstraint 0 (c/tag "field 'not-there' required")
{}
{(c/Field (c/tag ".not-there")) c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 93 (c/tag "Bogus")
{(c/Field (c/tag ".x-field")) c/top-type
}
{(c/Field (c/tag ".x-field")) (c/IntConstraint 99 2147483647 -2147483648)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")]) 

 Conflicting assertions (1157)  at assertion-tests/bad-field-1.toc: 9
field 'not-there' requiredfrom:    Bogusfrom:
                                             
                                             


***  site 1151 assertion-tests/bad-field-4.toc: 11 
 (.not-there (.x-field (Bogus 99) 3)) 

 target-c (c/ProtoImpls
(c/tag ".not-there")
(c/fn-c []
{2 (c/fn-arity
(c/tag ".not-there_setter")
(c/seq-c [(c/multi [(c/param (c/tag ".not-there_setter") 0)
(c/ReifiedConstraint 0 (c/tag "field 'not-there' required")
{}
{(c/Field (c/tag ".not-there")) c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
(c/param (c/tag ".not-there_setter") 1)]
c/no-tail)
;; returns
(c/type-op c/set-to-op
(c/param (c/tag ".not-there_setter") 0)
[[(c/Field (c/tag ".not-there"))]
(c/param (c/tag ".not-there_setter") 1)]
)), 1 (c/fn-arity
(c/tag ".not-there_getter")
(c/seq-c [(c/multi [(c/param (c/tag ".not-there_getter") 0)
(c/ReifiedConstraint 0 (c/tag "field 'not-there' required")
{}
{(c/Field (c/tag ".not-there")) c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])]
c/no-tail)
;; returns
(c/type-op c/get-from-op
(c/param (c/tag ".not-there_getter") 0)
[(c/Field (c/tag ".not-there"))]
))})

{84 (c/fn-c []
{2 (c/fn-arity
(c/tag "Ooops-.not-there-setter")
(c/seq-c [(c/multi [(c/param (c/tag "Ooops-.not-there-setter") 0)
(c/ReifiedConstraint 84 (c/tag "Ooops")
{(c/Field (c/tag ".not-there")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".not-there")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")])
(c/multi [(c/param (c/tag "Ooops-.not-there-setter") 1)
c/top-type])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/set-to-op
(c/param (c/tag "Ooops-.not-there-setter") 0)
[[(c/Field (c/tag ".not-there"))]
(c/param (c/tag "Ooops-.not-there-setter") 1)]
)])), 1 (c/fn-arity
(c/tag "Ooops-.not-there-getter")
(c/seq-c [(c/multi [(c/param (c/tag "Ooops-.not-there-getter") 0)
(c/ReifiedConstraint 84 (c/tag "Ooops")
{(c/Field (c/tag ".not-there")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".not-there")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "Ooops-.not-there-getter") 0)
[(c/Field (c/tag ".not-there"))]
)]))})}) 

 arg-cs [(c/ReifiedConstraint 100 (c/tag "Bogus")
{(c/Field (c/tag ".x-field")) c/top-type
}
{(c/Field (c/tag ".x-field")) (c/IntConstraint 3 2147483647 -2147483648)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")] 

 result-type (c/NoValues [(c/ReifiedConstraint 0 (c/tag "field 'not-there' required")
{}
{(c/Field (c/tag ".not-there")) c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 100 (c/tag "Bogus")
{(c/Field (c/tag ".x-field")) c/top-type
}
{(c/Field (c/tag ".x-field")) (c/IntConstraint 3 2147483647 -2147483648)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")]) 

 Conflicting assertions (1157)  at assertion-tests/bad-field-4.toc: 11
field 'not-there' requiredfrom:    Bogusfrom:        
                                   bad-field-4.toc: 4
                                                     
                                                     


***  site 1151 assertion-tests/bad-inner-1.toc: 3 
 (map (vector 1 2 3) (fn  [s]
(subs s 1))) 

 target-c (c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/HashSetType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity630")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity630") 1)
0
))
(c/param (c/tag "fn-arity630") 0)
(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity630") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
c/contents (c/type-op c/call-value-op
(c/param (c/tag "fn-arity630") 1) c/no-args
)
}
(c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity643")
(c/seq-c [(c/multi [(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity643") 0)])
(c/param (c/tag "fn-arity643") 1)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "get")
(c/fn-c []
{2 (c/fn-arity
(c/tag "get")
(c/list-c [(c/param (c/tag "get") 0)
(c/param (c/tag "get") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "get") 0) c/no-args
) empty-list c/no-symbol ""))})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity134")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity134") 0)])
(c/param (c/tag "fn-arity134") 1)]
c/no-tail)
;; returns
(c/multi [(c/param (c/tag "fn-arity134") 0)
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity134") 0) c/no-args
) empty-list c/no-symbol "")]))})
c/BitmapIndexedType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity483")
(c/list-c [(c/multi [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity483") 0)])
(c/param (c/tag "fn-arity483") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity483") 0) c/no-args
) empty-list c/no-symbol ""))})
53 (c/fn-c []
{2 (c/fn-arity
(c/tag "Sorting_get")
(c/list-c [(c/multi [(c/ReifiedConstraint 53 (c/tag "Sorting")
{(c/Field (c/tag ".v")) c/top-type
(c/Field (c/tag ".k")) c/top-type
}
{(c/Field (c/tag ".v")) c/top-type
c/contents c/top-type
(c/Field (c/tag ".k")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "Sorting_get") 0)])
(c/param (c/tag "Sorting_get") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/get-from-op
(c/param (c/tag "Sorting_get") 0)
[(c/param (c/tag "Sorting_get") 1)]
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "Sorting_get") 0) c/no-args
)]) empty-list c/no-symbol ""))})
55 (c/fn-c []
{2 (c/fn-arity
(c/tag "RecurseWith_get")
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "RecurseWith_get") 0)])
(c/param (c/tag "RecurseWith_get") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/get-from-op
(c/param (c/tag "RecurseWith_get") 0)
[(c/param (c/tag "RecurseWith_get") 1)]
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "RecurseWith_get") 0) c/no-args
)]) empty-list c/no-symbol ""))})
c/HashCollisionNodeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity481")
(c/list-c [(c/multi [(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity481") 0)])
(c/param (c/tag "fn-arity481") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity481") 0) c/no-args
) empty-list c/no-symbol ""))})
56 (c/fn-c []
{2 (c/fn-arity
(c/tag "RecurseFinal_get")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "RecurseFinal_get") 0)])
(c/param (c/tag "RecurseFinal_get") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/get-from-op
(c/param (c/tag "RecurseFinal_get") 0)
[(c/param (c/tag "RecurseFinal_get") 1)]
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "RecurseFinal_get") 0) c/no-args
)]) empty-list c/no-symbol ""))})
c/ArrayNodeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity482")
(c/list-c [(c/multi [(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity482") 0)])
(c/param (c/tag "fn-arity482") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity482") 0) c/no-args
) empty-list c/no-symbol ""))})
c/VectorType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity86")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity86") 0)])
(c/multi [c/int-constraint
(c/IntConstraint c/no-int 2147483647 0)
(c/param (c/tag "fn-arity86") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity86") 0) c/no-args
) empty-list c/no-symbol ""))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity269")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity269") 0)])
(c/multi [c/int-constraint
(c/param (c/tag "fn-arity269") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity269") 0) c/no-args
) empty-list c/no-symbol ""))})})
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity643") 0)
[(c/Field (c/tag ".set-map"))]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])])
(c/param (c/tag "fn-arity643") 1)]
))})
 empty-list c/no-symbol ""))})
c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
55 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity552")
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity552") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity552") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity552") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity553") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity552") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity551")
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity551") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity551") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity551") 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
55 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity552")
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity552") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity552") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity552") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity553") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity552") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol ""))})
c/FutureType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity368")
(c/list-c [(c/multi [(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity368") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity368") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
c/PromiseType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity347")
(c/list-c [(c/multi [c/promise-constraint
(c/param (c/tag "fn-arity347") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity347") 1)])]
c/no-tail)
;; returns
c/promise-constraint)})
56 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity549")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity549") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity549") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity549") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity548")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity548") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity548") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity548") 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/FutureType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity368")
(c/list-c [(c/multi [(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity368") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity368") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
c/PromiseType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity347")
(c/list-c [(c/multi [c/promise-constraint
(c/param (c/tag "fn-arity347") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity347") 1)])]
c/no-tail)
;; returns
c/promise-constraint)})
56 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity549")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity549") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity549") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity549") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol ""))})
c/VectorType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity304")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity304") 1)
0
))
(c/param (c/tag "fn-arity304") 0)
(c/vect-c [] (c/coll-of-c c/top-type))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity304") 1)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/type-op c/call-value-op
(c/param (c/tag "fn-arity304") 1) c/no-args
)))), 3 (c/fn-arity
(c/tag "fn-arity303")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity303") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 2)])]
c/no-tail)
;; returns
c/top-type)})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)])))), 3 (c/fn-arity
(c/tag "fn-arity163")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity163") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)])
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity548") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity548") 0)
[(c/Field (c/tag ".x"))]
)])]
)
(c/ReifiedConstraint 59 (c/tag "* RecurseFinal constructor at core: 2585 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag "* RecurseFinal constructor at core: 2585 *")
(c/seq-c [c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "RecurseFinal")
{}
{(c/Field (c/tag ".x")) (c/param (c/tag "* RecurseFinal constructor at core: 2585 *") 1)
c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")]
))})
c/VectorType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity304")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity304") 1)
0
))
(c/param (c/tag "fn-arity304") 0)
(c/vect-c [] (c/coll-of-c c/top-type))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity304") 1)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/type-op c/call-value-op
(c/param (c/tag "fn-arity304") 1) c/no-args
)))), 3 (c/fn-arity
(c/tag "fn-arity303")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity303") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 2)])]
c/no-tail)
;; returns
c/top-type)})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)])))), 3 (c/fn-arity
(c/tag "fn-arity163")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity163") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)])
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity551") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity553") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity552") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity551") 0)
[(c/Field (c/tag ".x"))]
)])]
)
(c/ReifiedConstraint 60 (c/tag "* RecurseWith constructor at core: 2597 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag "* RecurseWith constructor at core: 2597 *")
(c/seq-c [c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "RecurseWith")
{}
{(c/Field (c/tag ".x")) (c/param (c/tag "* RecurseWith constructor at core: 2597 *") 1)
c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")]
))})
c/FutureType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity368")
(c/list-c [(c/multi [(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity368") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity368") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
c/PromiseType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity347")
(c/list-c [(c/multi [c/promise-constraint
(c/param (c/tag "fn-arity347") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity347") 1)])]
c/no-tail)
;; returns
c/promise-constraint)})
56 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity549")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity549") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity549") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity549") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity548")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity548") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity548") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity548") 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/FutureType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity368")
(c/list-c [(c/multi [(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity368") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity368") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
c/PromiseType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity347")
(c/list-c [(c/multi [c/promise-constraint
(c/param (c/tag "fn-arity347") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity347") 1)])]
c/no-tail)
;; returns
c/promise-constraint)})
56 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity549")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity549") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity549") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity549") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol ""))})
c/VectorType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity304")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity304") 1)
0
))
(c/param (c/tag "fn-arity304") 0)
(c/vect-c [] (c/coll-of-c c/top-type))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity304") 1)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/type-op c/call-value-op
(c/param (c/tag "fn-arity304") 1) c/no-args
)))), 3 (c/fn-arity
(c/tag "fn-arity303")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity303") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 2)])]
c/no-tail)
;; returns
c/top-type)})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)])))), 3 (c/fn-arity
(c/tag "fn-arity163")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity163") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)])
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity548") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity548") 0)
[(c/Field (c/tag ".x"))]
)])]
)
(c/ReifiedConstraint 59 (c/tag "* RecurseFinal constructor at core: 2585 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag "* RecurseFinal constructor at core: 2585 *")
(c/seq-c [c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "RecurseFinal")
{}
{(c/Field (c/tag ".x")) (c/param (c/tag "* RecurseFinal constructor at core: 2585 *") 1)
c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")]
))})
c/VectorType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity304")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity304") 1)
0
))
(c/param (c/tag "fn-arity304") 0)
(c/vect-c [] (c/coll-of-c c/top-type))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity304") 1)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/type-op c/call-value-op
(c/param (c/tag "fn-arity304") 1) c/no-args
)))), 3 (c/fn-arity
(c/tag "fn-arity303")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity303") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 2)])]
c/no-tail)
;; returns
c/top-type)})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)])))), 3 (c/fn-arity
(c/tag "fn-arity163")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity163") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)])
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)]))})}) 

 arg-cs [(c/vect-c [(c/IntConstraint 1 2147483647 -2147483648)
(c/IntConstraint 2 2147483647 -2147483648)
(c/IntConstraint 3 2147483647 -2147483648)]
c/no-tail), (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity729")
(c/seq-c [(c/multi [(c/sum-c [c/strbuff-constraint
c/substr-constraint])
(c/param (c/tag "fn-arity729") 0)])]
c/no-tail)
;; returns
c/substr-constraint)})] 

 result-type (c/NoValues [c/strbuff-constraint
(c/IntConstraint 1 2147483647 -2147483648)]) 

 Conflicting assertions (1157)  at assertion-tests/bad-inner-1.toc: 3
String from:    Integer 1from:
core: 336                     
core: 339                     
core: 22                      
                              
                              


***  site 1151 assertion-tests/bad-inner-or.toc: 9 
 (map (or (f )
(g )) inc) 

 target-c (c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/HashSetType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity630")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity630") 1)
0
))
(c/param (c/tag "fn-arity630") 0)
(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity630") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
c/contents (c/type-op c/call-value-op
(c/param (c/tag "fn-arity630") 1) c/no-args
)
}
(c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity643")
(c/seq-c [(c/multi [(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity643") 0)])
(c/param (c/tag "fn-arity643") 1)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "get")
(c/fn-c []
{2 (c/fn-arity
(c/tag "get")
(c/list-c [(c/param (c/tag "get") 0)
(c/param (c/tag "get") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "get") 0) c/no-args
) empty-list c/no-symbol ""))})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity134")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity134") 0)])
(c/param (c/tag "fn-arity134") 1)]
c/no-tail)
;; returns
(c/multi [(c/param (c/tag "fn-arity134") 0)
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity134") 0) c/no-args
) empty-list c/no-symbol "")]))})
c/BitmapIndexedType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity483")
(c/list-c [(c/multi [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity483") 0)])
(c/param (c/tag "fn-arity483") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity483") 0) c/no-args
) empty-list c/no-symbol ""))})
53 (c/fn-c []
{2 (c/fn-arity
(c/tag "Sorting_get")
(c/list-c [(c/multi [(c/ReifiedConstraint 53 (c/tag "Sorting")
{(c/Field (c/tag ".v")) c/top-type
(c/Field (c/tag ".k")) c/top-type
}
{(c/Field (c/tag ".v")) c/top-type
c/contents c/top-type
(c/Field (c/tag ".k")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "Sorting_get") 0)])
(c/param (c/tag "Sorting_get") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/get-from-op
(c/param (c/tag "Sorting_get") 0)
[(c/param (c/tag "Sorting_get") 1)]
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "Sorting_get") 0) c/no-args
)]) empty-list c/no-symbol ""))})
55 (c/fn-c []
{2 (c/fn-arity
(c/tag "RecurseWith_get")
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "RecurseWith_get") 0)])
(c/param (c/tag "RecurseWith_get") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/get-from-op
(c/param (c/tag "RecurseWith_get") 0)
[(c/param (c/tag "RecurseWith_get") 1)]
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "RecurseWith_get") 0) c/no-args
)]) empty-list c/no-symbol ""))})
c/HashCollisionNodeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity481")
(c/list-c [(c/multi [(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity481") 0)])
(c/param (c/tag "fn-arity481") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity481") 0) c/no-args
) empty-list c/no-symbol ""))})
56 (c/fn-c []
{2 (c/fn-arity
(c/tag "RecurseFinal_get")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "RecurseFinal_get") 0)])
(c/param (c/tag "RecurseFinal_get") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/get-from-op
(c/param (c/tag "RecurseFinal_get") 0)
[(c/param (c/tag "RecurseFinal_get") 1)]
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "RecurseFinal_get") 0) c/no-args
)]) empty-list c/no-symbol ""))})
c/ArrayNodeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity482")
(c/list-c [(c/multi [(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity482") 0)])
(c/param (c/tag "fn-arity482") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity482") 0) c/no-args
) empty-list c/no-symbol ""))})
c/VectorType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity86")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity86") 0)])
(c/multi [c/int-constraint
(c/IntConstraint c/no-int 2147483647 0)
(c/param (c/tag "fn-arity86") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity86") 0) c/no-args
) empty-list c/no-symbol ""))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity269")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity269") 0)])
(c/multi [c/int-constraint
(c/param (c/tag "fn-arity269") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity269") 0) c/no-args
) empty-list c/no-symbol ""))})})
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity643") 0)
[(c/Field (c/tag ".set-map"))]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])])
(c/param (c/tag "fn-arity643") 1)]
))})
 empty-list c/no-symbol ""))})
c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
55 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity552")
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity552") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity552") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity552") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity553") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity552") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity551")
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity551") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity551") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity551") 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
55 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity552")
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity552") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity552") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity552") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity553") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity552") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol ""))})
c/FutureType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity368")
(c/list-c [(c/multi [(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity368") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity368") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
c/PromiseType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity347")
(c/list-c [(c/multi [c/promise-constraint
(c/param (c/tag "fn-arity347") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity347") 1)])]
c/no-tail)
;; returns
c/promise-constraint)})
56 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity549")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity549") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity549") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity549") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity548")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity548") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity548") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity548") 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/FutureType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity368")
(c/list-c [(c/multi [(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity368") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity368") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
c/PromiseType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity347")
(c/list-c [(c/multi [c/promise-constraint
(c/param (c/tag "fn-arity347") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity347") 1)])]
c/no-tail)
;; returns
c/promise-constraint)})
56 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity549")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity549") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity549") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity549") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol ""))})
c/VectorType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity304")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity304") 1)
0
))
(c/param (c/tag "fn-arity304") 0)
(c/vect-c [] (c/coll-of-c c/top-type))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity304") 1)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/type-op c/call-value-op
(c/param (c/tag "fn-arity304") 1) c/no-args
)))), 3 (c/fn-arity
(c/tag "fn-arity303")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity303") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 2)])]
c/no-tail)
;; returns
c/top-type)})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)])))), 3 (c/fn-arity
(c/tag "fn-arity163")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity163") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)])
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity548") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity548") 0)
[(c/Field (c/tag ".x"))]
)])]
)
(c/ReifiedConstraint 59 (c/tag "* RecurseFinal constructor at core: 2585 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag "* RecurseFinal constructor at core: 2585 *")
(c/seq-c [c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "RecurseFinal")
{}
{(c/Field (c/tag ".x")) (c/param (c/tag "* RecurseFinal constructor at core: 2585 *") 1)
c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")]
))})
c/VectorType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity304")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity304") 1)
0
))
(c/param (c/tag "fn-arity304") 0)
(c/vect-c [] (c/coll-of-c c/top-type))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity304") 1)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/type-op c/call-value-op
(c/param (c/tag "fn-arity304") 1) c/no-args
)))), 3 (c/fn-arity
(c/tag "fn-arity303")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity303") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 2)])]
c/no-tail)
;; returns
c/top-type)})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)])))), 3 (c/fn-arity
(c/tag "fn-arity163")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity163") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)])
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity551") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity553") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity552") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity551") 0)
[(c/Field (c/tag ".x"))]
)])]
)
(c/ReifiedConstraint 60 (c/tag "* RecurseWith constructor at core: 2597 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag "* RecurseWith constructor at core: 2597 *")
(c/seq-c [c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "RecurseWith")
{}
{(c/Field (c/tag ".x")) (c/param (c/tag "* RecurseWith constructor at core: 2597 *") 1)
c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")]
))})
c/FutureType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity368")
(c/list-c [(c/multi [(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity368") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity368") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
c/PromiseType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity347")
(c/list-c [(c/multi [c/promise-constraint
(c/param (c/tag "fn-arity347") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity347") 1)])]
c/no-tail)
;; returns
c/promise-constraint)})
56 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity549")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity549") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity549") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity549") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity548")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity548") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity548") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity548") 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/FutureType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity368")
(c/list-c [(c/multi [(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity368") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity368") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
c/PromiseType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity347")
(c/list-c [(c/multi [c/promise-constraint
(c/param (c/tag "fn-arity347") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity347") 1)])]
c/no-tail)
;; returns
c/promise-constraint)})
56 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity549")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity549") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity549") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity549") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol ""))})
c/VectorType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity304")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity304") 1)
0
))
(c/param (c/tag "fn-arity304") 0)
(c/vect-c [] (c/coll-of-c c/top-type))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity304") 1)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/type-op c/call-value-op
(c/param (c/tag "fn-arity304") 1) c/no-args
)))), 3 (c/fn-arity
(c/tag "fn-arity303")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity303") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 2)])]
c/no-tail)
;; returns
c/top-type)})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)])))), 3 (c/fn-arity
(c/tag "fn-arity163")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity163") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)])
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity548") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity548") 0)
[(c/Field (c/tag ".x"))]
)])]
)
(c/ReifiedConstraint 59 (c/tag "* RecurseFinal constructor at core: 2585 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag "* RecurseFinal constructor at core: 2585 *")
(c/seq-c [c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "RecurseFinal")
{}
{(c/Field (c/tag ".x")) (c/param (c/tag "* RecurseFinal constructor at core: 2585 *") 1)
c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")]
))})
c/VectorType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity304")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity304") 1)
0
))
(c/param (c/tag "fn-arity304") 0)
(c/vect-c [] (c/coll-of-c c/top-type))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity304") 1)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/type-op c/call-value-op
(c/param (c/tag "fn-arity304") 1) c/no-args
)))), 3 (c/fn-arity
(c/tag "fn-arity303")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity303") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 2)])]
c/no-tail)
;; returns
c/top-type)})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)])))), 3 (c/fn-arity
(c/tag "fn-arity163")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity163") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)])
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)]))})}) 

 arg-cs [(c/sum-c [(c/MaybeConstraint (c/StrBuffConstraint 9empty-list c/no-symbol "") empty-list c/no-symbol "")
(c/MaybeConstraint (c/StrBuffConstraint 88empty-list c/no-symbol "") empty-list c/no-symbol "")]), (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity120")
(c/seq-c [(c/multi [c/int-constraint
(c/param (c/tag "fn-arity120") 0)])]
c/no-tail)
;; returns
c/int-constraint)})] 

 result-type (c/NoValues [(c/StrBuffConstraint 9empty-list c/no-symbol "")
c/int-constraint]) 

 Conflicting assertions (1157)  at assertion-tests/bad-inner-or.toc: 9
String 9from:    Integer from:
                 core: 1210   
                 core: 95     
                 core: 97     
                              
                              


***  site 1151 assertion-tests/bad-inner-2.toc: 3 
 (map (list (inc 3)) (fn  [n]
(subs n 1))) 

 target-c (c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/HashSetType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity630")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity630") 1)
0
))
(c/param (c/tag "fn-arity630") 0)
(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity630") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
c/contents (c/type-op c/call-value-op
(c/param (c/tag "fn-arity630") 1) c/no-args
)
}
(c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity643")
(c/seq-c [(c/multi [(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity643") 0)])
(c/param (c/tag "fn-arity643") 1)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "get")
(c/fn-c []
{2 (c/fn-arity
(c/tag "get")
(c/list-c [(c/param (c/tag "get") 0)
(c/param (c/tag "get") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "get") 0) c/no-args
) empty-list c/no-symbol ""))})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity134")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity134") 0)])
(c/param (c/tag "fn-arity134") 1)]
c/no-tail)
;; returns
(c/multi [(c/param (c/tag "fn-arity134") 0)
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity134") 0) c/no-args
) empty-list c/no-symbol "")]))})
c/BitmapIndexedType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity483")
(c/list-c [(c/multi [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity483") 0)])
(c/param (c/tag "fn-arity483") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity483") 0) c/no-args
) empty-list c/no-symbol ""))})
53 (c/fn-c []
{2 (c/fn-arity
(c/tag "Sorting_get")
(c/list-c [(c/multi [(c/ReifiedConstraint 53 (c/tag "Sorting")
{(c/Field (c/tag ".v")) c/top-type
(c/Field (c/tag ".k")) c/top-type
}
{(c/Field (c/tag ".v")) c/top-type
c/contents c/top-type
(c/Field (c/tag ".k")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "Sorting_get") 0)])
(c/param (c/tag "Sorting_get") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/get-from-op
(c/param (c/tag "Sorting_get") 0)
[(c/param (c/tag "Sorting_get") 1)]
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "Sorting_get") 0) c/no-args
)]) empty-list c/no-symbol ""))})
55 (c/fn-c []
{2 (c/fn-arity
(c/tag "RecurseWith_get")
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "RecurseWith_get") 0)])
(c/param (c/tag "RecurseWith_get") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/get-from-op
(c/param (c/tag "RecurseWith_get") 0)
[(c/param (c/tag "RecurseWith_get") 1)]
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "RecurseWith_get") 0) c/no-args
)]) empty-list c/no-symbol ""))})
c/HashCollisionNodeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity481")
(c/list-c [(c/multi [(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity481") 0)])
(c/param (c/tag "fn-arity481") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity481") 0) c/no-args
) empty-list c/no-symbol ""))})
56 (c/fn-c []
{2 (c/fn-arity
(c/tag "RecurseFinal_get")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "RecurseFinal_get") 0)])
(c/param (c/tag "RecurseFinal_get") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/get-from-op
(c/param (c/tag "RecurseFinal_get") 0)
[(c/param (c/tag "RecurseFinal_get") 1)]
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "RecurseFinal_get") 0) c/no-args
)]) empty-list c/no-symbol ""))})
c/ArrayNodeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity482")
(c/list-c [(c/multi [(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity482") 0)])
(c/param (c/tag "fn-arity482") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity482") 0) c/no-args
) empty-list c/no-symbol ""))})
c/VectorType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity86")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity86") 0)])
(c/multi [c/int-constraint
(c/IntConstraint c/no-int 2147483647 0)
(c/param (c/tag "fn-arity86") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity86") 0) c/no-args
) empty-list c/no-symbol ""))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity269")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity269") 0)])
(c/multi [c/int-constraint
(c/param (c/tag "fn-arity269") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity269") 0) c/no-args
) empty-list c/no-symbol ""))})})
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity643") 0)
[(c/Field (c/tag ".set-map"))]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])])
(c/param (c/tag "fn-arity643") 1)]
))})
 empty-list c/no-symbol ""))})
c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
55 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity552")
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity552") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity552") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity552") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity553") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity552") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity551")
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity551") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity551") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity551") 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
55 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity552")
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity552") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity552") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity552") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity553") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity552") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol ""))})
c/FutureType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity368")
(c/list-c [(c/multi [(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity368") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity368") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
c/PromiseType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity347")
(c/list-c [(c/multi [c/promise-constraint
(c/param (c/tag "fn-arity347") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity347") 1)])]
c/no-tail)
;; returns
c/promise-constraint)})
56 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity549")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity549") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity549") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity549") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity548")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity548") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity548") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity548") 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/FutureType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity368")
(c/list-c [(c/multi [(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity368") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity368") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
c/PromiseType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity347")
(c/list-c [(c/multi [c/promise-constraint
(c/param (c/tag "fn-arity347") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity347") 1)])]
c/no-tail)
;; returns
c/promise-constraint)})
56 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity549")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity549") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity549") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity549") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol ""))})
c/VectorType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity304")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity304") 1)
0
))
(c/param (c/tag "fn-arity304") 0)
(c/vect-c [] (c/coll-of-c c/top-type))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity304") 1)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/type-op c/call-value-op
(c/param (c/tag "fn-arity304") 1) c/no-args
)))), 3 (c/fn-arity
(c/tag "fn-arity303")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity303") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 2)])]
c/no-tail)
;; returns
c/top-type)})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)])))), 3 (c/fn-arity
(c/tag "fn-arity163")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity163") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)])
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity548") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity548") 0)
[(c/Field (c/tag ".x"))]
)])]
)
(c/ReifiedConstraint 59 (c/tag "* RecurseFinal constructor at core: 2585 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag "* RecurseFinal constructor at core: 2585 *")
(c/seq-c [c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "RecurseFinal")
{}
{(c/Field (c/tag ".x")) (c/param (c/tag "* RecurseFinal constructor at core: 2585 *") 1)
c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")]
))})
c/VectorType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity304")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity304") 1)
0
))
(c/param (c/tag "fn-arity304") 0)
(c/vect-c [] (c/coll-of-c c/top-type))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity304") 1)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/type-op c/call-value-op
(c/param (c/tag "fn-arity304") 1) c/no-args
)))), 3 (c/fn-arity
(c/tag "fn-arity303")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity303") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 2)])]
c/no-tail)
;; returns
c/top-type)})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)])))), 3 (c/fn-arity
(c/tag "fn-arity163")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity163") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)])
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity551") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity553") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity552") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity551") 0)
[(c/Field (c/tag ".x"))]
)])]
)
(c/ReifiedConstraint 60 (c/tag "* RecurseWith constructor at core: 2597 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag "* RecurseWith constructor at core: 2597 *")
(c/seq-c [c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "RecurseWith")
{}
{(c/Field (c/tag ".x")) (c/param (c/tag "* RecurseWith constructor at core: 2597 *") 1)
c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")]
))})
c/FutureType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity368")
(c/list-c [(c/multi [(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity368") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity368") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
c/PromiseType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity347")
(c/list-c [(c/multi [c/promise-constraint
(c/param (c/tag "fn-arity347") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity347") 1)])]
c/no-tail)
;; returns
c/promise-constraint)})
56 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity549")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity549") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity549") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity549") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity548")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity548") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity548") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity548") 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/FutureType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity368")
(c/list-c [(c/multi [(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity368") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity368") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
c/PromiseType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity347")
(c/list-c [(c/multi [c/promise-constraint
(c/param (c/tag "fn-arity347") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity347") 1)])]
c/no-tail)
;; returns
c/promise-constraint)})
56 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity549")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity549") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity549") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity549") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol ""))})
c/VectorType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity304")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity304") 1)
0
))
(c/param (c/tag "fn-arity304") 0)
(c/vect-c [] (c/coll-of-c c/top-type))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity304") 1)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/type-op c/call-value-op
(c/param (c/tag "fn-arity304") 1) c/no-args
)))), 3 (c/fn-arity
(c/tag "fn-arity303")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity303") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 2)])]
c/no-tail)
;; returns
c/top-type)})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)])))), 3 (c/fn-arity
(c/tag "fn-arity163")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity163") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)])
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity548") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity548") 0)
[(c/Field (c/tag ".x"))]
)])]
)
(c/ReifiedConstraint 59 (c/tag "* RecurseFinal constructor at core: 2585 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag "* RecurseFinal constructor at core: 2585 *")
(c/seq-c [c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "RecurseFinal")
{}
{(c/Field (c/tag ".x")) (c/param (c/tag "* RecurseFinal constructor at core: 2585 *") 1)
c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")]
))})
c/VectorType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity304")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity304") 1)
0
))
(c/param (c/tag "fn-arity304") 0)
(c/vect-c [] (c/coll-of-c c/top-type))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity304") 1)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/type-op c/call-value-op
(c/param (c/tag "fn-arity304") 1) c/no-args
)))), 3 (c/fn-arity
(c/tag "fn-arity303")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity303") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 2)])]
c/no-tail)
;; returns
c/top-type)})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)])))), 3 (c/fn-arity
(c/tag "fn-arity163")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity163") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)])
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)]))})}) 

 arg-cs [(c/list-c [c/int-constraint]
c/no-tail), (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity736")
(c/seq-c [(c/multi [(c/sum-c [c/strbuff-constraint
c/substr-constraint])
(c/param (c/tag "fn-arity736") 0)])]
c/no-tail)
;; returns
c/substr-constraint)})] 

 result-type (c/NoValues [c/strbuff-constraint
c/int-constraint]) 

 Conflicting assertions (1157)  at assertion-tests/bad-inner-2.toc: 3
String from:    Integer from:
core: 336       core: 1208   
core: 339       core: 1210   
core: 22        core: 95     
                core: 98     
                             
                             


***  site 1151 assertion-tests/bad-inner-9.toc: 8 
 (f (vector (list 1 2) (vector ) (vector 3 6))) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity742")
(c/seq-c [(c/multi [(c/seq-c [] (c/coll-of-c (c/sum-c [(c/list-c [] (c/coll-of-c c/top-type))
(c/vect-c [] (c/coll-of-c c/top-type))])))
(c/param (c/tag "fn-arity742") 0)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/HashSetType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity630")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity630") 1)
0
))
(c/param (c/tag "fn-arity630") 0)
(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity630") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
c/contents (c/type-op c/call-value-op
(c/param (c/tag "fn-arity630") 1) c/no-args
)
}
(c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity643")
(c/seq-c [(c/multi [(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity643") 0)])
(c/param (c/tag "fn-arity643") 1)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "get")
(c/fn-c []
{2 (c/fn-arity
(c/tag "get")
(c/list-c [(c/param (c/tag "get") 0)
(c/param (c/tag "get") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "get") 0) c/no-args
) empty-list c/no-symbol ""))})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity134")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity134") 0)])
(c/param (c/tag "fn-arity134") 1)]
c/no-tail)
;; returns
(c/multi [(c/param (c/tag "fn-arity134") 0)
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity134") 0) c/no-args
) empty-list c/no-symbol "")]))})
c/BitmapIndexedType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity483")
(c/list-c [(c/multi [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity483") 0)])
(c/param (c/tag "fn-arity483") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity483") 0) c/no-args
) empty-list c/no-symbol ""))})
53 (c/fn-c []
{2 (c/fn-arity
(c/tag "Sorting_get")
(c/list-c [(c/multi [(c/ReifiedConstraint 53 (c/tag "Sorting")
{(c/Field (c/tag ".v")) c/top-type
(c/Field (c/tag ".k")) c/top-type
}
{(c/Field (c/tag ".v")) c/top-type
c/contents c/top-type
(c/Field (c/tag ".k")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "Sorting_get") 0)])
(c/param (c/tag "Sorting_get") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/get-from-op
(c/param (c/tag "Sorting_get") 0)
[(c/param (c/tag "Sorting_get") 1)]
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "Sorting_get") 0) c/no-args
)]) empty-list c/no-symbol ""))})
55 (c/fn-c []
{2 (c/fn-arity
(c/tag "RecurseWith_get")
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "RecurseWith_get") 0)])
(c/param (c/tag "RecurseWith_get") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/get-from-op
(c/param (c/tag "RecurseWith_get") 0)
[(c/param (c/tag "RecurseWith_get") 1)]
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "RecurseWith_get") 0) c/no-args
)]) empty-list c/no-symbol ""))})
c/HashCollisionNodeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity481")
(c/list-c [(c/multi [(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity481") 0)])
(c/param (c/tag "fn-arity481") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity481") 0) c/no-args
) empty-list c/no-symbol ""))})
56 (c/fn-c []
{2 (c/fn-arity
(c/tag "RecurseFinal_get")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "RecurseFinal_get") 0)])
(c/param (c/tag "RecurseFinal_get") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/get-from-op
(c/param (c/tag "RecurseFinal_get") 0)
[(c/param (c/tag "RecurseFinal_get") 1)]
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "RecurseFinal_get") 0) c/no-args
)]) empty-list c/no-symbol ""))})
c/ArrayNodeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity482")
(c/list-c [(c/multi [(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity482") 0)])
(c/param (c/tag "fn-arity482") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity482") 0) c/no-args
) empty-list c/no-symbol ""))})
c/VectorType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity86")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity86") 0)])
(c/multi [c/int-constraint
(c/IntConstraint c/no-int 2147483647 0)
(c/param (c/tag "fn-arity86") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity86") 0) c/no-args
) empty-list c/no-symbol ""))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity269")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity269") 0)])
(c/multi [c/int-constraint
(c/param (c/tag "fn-arity269") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity269") 0) c/no-args
) empty-list c/no-symbol ""))})})
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity643") 0)
[(c/Field (c/tag ".set-map"))]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])])
(c/param (c/tag "fn-arity643") 1)]
))})
 empty-list c/no-symbol ""))})
c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
55 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity552")
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity552") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity552") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity552") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity553") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity552") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity551")
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity551") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity551") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity551") 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
55 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity552")
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity552") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity552") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity552") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity553") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity552") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol ""))})
c/FutureType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity368")
(c/list-c [(c/multi [(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity368") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity368") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
c/PromiseType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity347")
(c/list-c [(c/multi [c/promise-constraint
(c/param (c/tag "fn-arity347") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity347") 1)])]
c/no-tail)
;; returns
c/promise-constraint)})
56 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity549")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity549") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity549") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity549") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity548")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity548") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity548") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity548") 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/FutureType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity368")
(c/list-c [(c/multi [(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity368") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity368") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
c/PromiseType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity347")
(c/list-c [(c/multi [c/promise-constraint
(c/param (c/tag "fn-arity347") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity347") 1)])]
c/no-tail)
;; returns
c/promise-constraint)})
56 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity549")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity549") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity549") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity549") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol ""))})
c/VectorType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity304")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity304") 1)
0
))
(c/param (c/tag "fn-arity304") 0)
(c/vect-c [] (c/coll-of-c c/top-type))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity304") 1)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/type-op c/call-value-op
(c/param (c/tag "fn-arity304") 1) c/no-args
)))), 3 (c/fn-arity
(c/tag "fn-arity303")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity303") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 2)])]
c/no-tail)
;; returns
c/top-type)})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)])))), 3 (c/fn-arity
(c/tag "fn-arity163")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity163") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)])
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity548") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity548") 0)
[(c/Field (c/tag ".x"))]
)])]
)
(c/ReifiedConstraint 59 (c/tag "* RecurseFinal constructor at core: 2585 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag "* RecurseFinal constructor at core: 2585 *")
(c/seq-c [c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "RecurseFinal")
{}
{(c/Field (c/tag ".x")) (c/param (c/tag "* RecurseFinal constructor at core: 2585 *") 1)
c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")]
))})
c/VectorType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity304")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity304") 1)
0
))
(c/param (c/tag "fn-arity304") 0)
(c/vect-c [] (c/coll-of-c c/top-type))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity304") 1)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/type-op c/call-value-op
(c/param (c/tag "fn-arity304") 1) c/no-args
)))), 3 (c/fn-arity
(c/tag "fn-arity303")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity303") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 2)])]
c/no-tail)
;; returns
c/top-type)})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)])))), 3 (c/fn-arity
(c/tag "fn-arity163")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity163") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)])
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity551") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity553") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity552") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity551") 0)
[(c/Field (c/tag ".x"))]
)])]
)
(c/ReifiedConstraint 60 (c/tag "* RecurseWith constructor at core: 2597 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag "* RecurseWith constructor at core: 2597 *")
(c/seq-c [c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "RecurseWith")
{}
{(c/Field (c/tag ".x")) (c/param (c/tag "* RecurseWith constructor at core: 2597 *") 1)
c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")]
))})
c/FutureType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity368")
(c/list-c [(c/multi [(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity368") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity368") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
c/PromiseType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity347")
(c/list-c [(c/multi [c/promise-constraint
(c/param (c/tag "fn-arity347") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity347") 1)])]
c/no-tail)
;; returns
c/promise-constraint)})
56 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity549")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity549") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity549") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity549") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity548")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity548") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity548") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity548") 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/FutureType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity368")
(c/list-c [(c/multi [(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity368") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity368") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
c/PromiseType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity347")
(c/list-c [(c/multi [c/promise-constraint
(c/param (c/tag "fn-arity347") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity347") 1)])]
c/no-tail)
;; returns
c/promise-constraint)})
56 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity549")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity549") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity549") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity549") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol ""))})
c/VectorType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity304")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity304") 1)
0
))
(c/param (c/tag "fn-arity304") 0)
(c/vect-c [] (c/coll-of-c c/top-type))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity304") 1)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/type-op c/call-value-op
(c/param (c/tag "fn-arity304") 1) c/no-args
)))), 3 (c/fn-arity
(c/tag "fn-arity303")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity303") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 2)])]
c/no-tail)
;; returns
c/top-type)})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)])))), 3 (c/fn-arity
(c/tag "fn-arity163")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity163") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)])
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity548") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity548") 0)
[(c/Field (c/tag ".x"))]
)])]
)
(c/ReifiedConstraint 59 (c/tag "* RecurseFinal constructor at core: 2585 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag "* RecurseFinal constructor at core: 2585 *")
(c/seq-c [c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "RecurseFinal")
{}
{(c/Field (c/tag ".x")) (c/param (c/tag "* RecurseFinal constructor at core: 2585 *") 1)
c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")]
))})
c/VectorType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity304")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity304") 1)
0
))
(c/param (c/tag "fn-arity304") 0)
(c/vect-c [] (c/coll-of-c c/top-type))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity304") 1)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/type-op c/call-value-op
(c/param (c/tag "fn-arity304") 1) c/no-args
)))), 3 (c/fn-arity
(c/tag "fn-arity303")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity303") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 2)])]
c/no-tail)
;; returns
c/top-type)})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)])))), 3 (c/fn-arity
(c/tag "fn-arity163")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity163") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)])
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)]))})})
[(c/multi [(c/seq-c [] (c/coll-of-c (c/sum-c [(c/list-c [] (c/coll-of-c c/top-type))
(c/vect-c [] (c/coll-of-c c/top-type))])))
(c/param (c/tag "fn-arity742") 0)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity744")
(c/seq-c [(c/seq-c [c/int-constraint
c/top-type]
c/no-tail)]
c/no-tail)
;; returns
(c/vect-c [c/int-constraint
c/top-type]
c/no-tail))})]
))}) 

 arg-cs [(c/vect-c [(c/list-c [(c/IntConstraint 1 2147483647 -2147483648)
(c/IntConstraint 2 2147483647 -2147483648)]
c/no-tail)
(c/vect-c [] c/no-tail)
(c/vect-c [(c/IntConstraint 3 2147483647 -2147483648)
(c/IntConstraint 6 2147483647 -2147483648)]
c/no-tail)]
c/no-tail)] 

 result-type (c/NoValues [c/no-tail
(c/ReifiedConstraint 0 (c/tag "Can not contain other values")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")]) 

 Conflicting assertions (1157)  at assertion-tests/bad-inner-9.toc: 8
No Tail for sequence    Can not contain other valuesfrom:


***  site 1151 assertion-tests/bad-constructor-param-2.toc: 19 
 (pook (Boogie (vector 1 2 'p))) 

 target-c (c/ProtoImpls
(c/tag "pook")
(c/fn-c []
{1 (c/fn-arity
(c/tag "pook")
(c/list-c [c/top-type]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/sum-c [c/strbuff-constraint
c/substr-constraint]))))})

{96 (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity703")
(c/list-c [(c/multi [(c/ReifiedConstraint 96 (c/tag "Boogie")
{(c/Field (c/tag ".xs")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".xs")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity703") 0)])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/HashSetType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity630")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity630") 1)
0
))
(c/param (c/tag "fn-arity630") 0)
(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity630") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
c/contents (c/type-op c/call-value-op
(c/param (c/tag "fn-arity630") 1) c/no-args
)
}
(c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity643")
(c/seq-c [(c/multi [(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity643") 0)])
(c/param (c/tag "fn-arity643") 1)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "get")
(c/fn-c []
{2 (c/fn-arity
(c/tag "get")
(c/list-c [(c/param (c/tag "get") 0)
(c/param (c/tag "get") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "get") 0) c/no-args
) empty-list c/no-symbol ""))})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity134")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity134") 0)])
(c/param (c/tag "fn-arity134") 1)]
c/no-tail)
;; returns
(c/multi [(c/param (c/tag "fn-arity134") 0)
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity134") 0) c/no-args
) empty-list c/no-symbol "")]))})
c/BitmapIndexedType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity483")
(c/list-c [(c/multi [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity483") 0)])
(c/param (c/tag "fn-arity483") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity483") 0) c/no-args
) empty-list c/no-symbol ""))})
53 (c/fn-c []
{2 (c/fn-arity
(c/tag "Sorting_get")
(c/list-c [(c/multi [(c/ReifiedConstraint 53 (c/tag "Sorting")
{(c/Field (c/tag ".v")) c/top-type
(c/Field (c/tag ".k")) c/top-type
}
{(c/Field (c/tag ".v")) c/top-type
c/contents c/top-type
(c/Field (c/tag ".k")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "Sorting_get") 0)])
(c/param (c/tag "Sorting_get") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/get-from-op
(c/param (c/tag "Sorting_get") 0)
[(c/param (c/tag "Sorting_get") 1)]
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "Sorting_get") 0) c/no-args
)]) empty-list c/no-symbol ""))})
55 (c/fn-c []
{2 (c/fn-arity
(c/tag "RecurseWith_get")
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "RecurseWith_get") 0)])
(c/param (c/tag "RecurseWith_get") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/get-from-op
(c/param (c/tag "RecurseWith_get") 0)
[(c/param (c/tag "RecurseWith_get") 1)]
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "RecurseWith_get") 0) c/no-args
)]) empty-list c/no-symbol ""))})
c/HashCollisionNodeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity481")
(c/list-c [(c/multi [(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity481") 0)])
(c/param (c/tag "fn-arity481") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity481") 0) c/no-args
) empty-list c/no-symbol ""))})
56 (c/fn-c []
{2 (c/fn-arity
(c/tag "RecurseFinal_get")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "RecurseFinal_get") 0)])
(c/param (c/tag "RecurseFinal_get") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/get-from-op
(c/param (c/tag "RecurseFinal_get") 0)
[(c/param (c/tag "RecurseFinal_get") 1)]
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "RecurseFinal_get") 0) c/no-args
)]) empty-list c/no-symbol ""))})
c/ArrayNodeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity482")
(c/list-c [(c/multi [(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity482") 0)])
(c/param (c/tag "fn-arity482") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity482") 0) c/no-args
) empty-list c/no-symbol ""))})
c/VectorType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity86")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity86") 0)])
(c/multi [c/int-constraint
(c/IntConstraint c/no-int 2147483647 0)
(c/param (c/tag "fn-arity86") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity86") 0) c/no-args
) empty-list c/no-symbol ""))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity269")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity269") 0)])
(c/multi [c/int-constraint
(c/param (c/tag "fn-arity269") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity269") 0) c/no-args
) empty-list c/no-symbol ""))})})
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity643") 0)
[(c/Field (c/tag ".set-map"))]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])])
(c/param (c/tag "fn-arity643") 1)]
))})
 empty-list c/no-symbol ""))})
c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
55 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity552")
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity552") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity552") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity552") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity553") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity552") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity551")
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity551") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity551") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity551") 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
55 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity552")
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity552") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity552") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity552") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity553") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity552") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol ""))})
c/FutureType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity368")
(c/list-c [(c/multi [(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity368") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity368") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
c/PromiseType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity347")
(c/list-c [(c/multi [c/promise-constraint
(c/param (c/tag "fn-arity347") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity347") 1)])]
c/no-tail)
;; returns
c/promise-constraint)})
56 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity549")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity549") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity549") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity549") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity548")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity548") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity548") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity548") 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/FutureType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity368")
(c/list-c [(c/multi [(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity368") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity368") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
c/PromiseType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity347")
(c/list-c [(c/multi [c/promise-constraint
(c/param (c/tag "fn-arity347") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity347") 1)])]
c/no-tail)
;; returns
c/promise-constraint)})
56 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity549")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity549") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity549") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity549") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol ""))})
c/VectorType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity304")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity304") 1)
0
))
(c/param (c/tag "fn-arity304") 0)
(c/vect-c [] (c/coll-of-c c/top-type))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity304") 1)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/type-op c/call-value-op
(c/param (c/tag "fn-arity304") 1) c/no-args
)))), 3 (c/fn-arity
(c/tag "fn-arity303")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity303") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 2)])]
c/no-tail)
;; returns
c/top-type)})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)])))), 3 (c/fn-arity
(c/tag "fn-arity163")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity163") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)])
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity548") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity548") 0)
[(c/Field (c/tag ".x"))]
)])]
)
(c/ReifiedConstraint 59 (c/tag "* RecurseFinal constructor at core: 2585 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag "* RecurseFinal constructor at core: 2585 *")
(c/seq-c [c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "RecurseFinal")
{}
{(c/Field (c/tag ".x")) (c/param (c/tag "* RecurseFinal constructor at core: 2585 *") 1)
c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")]
))})
c/VectorType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity304")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity304") 1)
0
))
(c/param (c/tag "fn-arity304") 0)
(c/vect-c [] (c/coll-of-c c/top-type))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity304") 1)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/type-op c/call-value-op
(c/param (c/tag "fn-arity304") 1) c/no-args
)))), 3 (c/fn-arity
(c/tag "fn-arity303")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity303") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 2)])]
c/no-tail)
;; returns
c/top-type)})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)])))), 3 (c/fn-arity
(c/tag "fn-arity163")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity163") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)])
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity551") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity553") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity552") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity551") 0)
[(c/Field (c/tag ".x"))]
)])]
)
(c/ReifiedConstraint 60 (c/tag "* RecurseWith constructor at core: 2597 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag "* RecurseWith constructor at core: 2597 *")
(c/seq-c [c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "RecurseWith")
{}
{(c/Field (c/tag ".x")) (c/param (c/tag "* RecurseWith constructor at core: 2597 *") 1)
c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")]
))})
c/FutureType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity368")
(c/list-c [(c/multi [(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity368") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity368") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
c/PromiseType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity347")
(c/list-c [(c/multi [c/promise-constraint
(c/param (c/tag "fn-arity347") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity347") 1)])]
c/no-tail)
;; returns
c/promise-constraint)})
56 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity549")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity549") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity549") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity549") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity548")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity548") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity548") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity548") 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/FutureType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity368")
(c/list-c [(c/multi [(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity368") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity368") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
c/PromiseType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity347")
(c/list-c [(c/multi [c/promise-constraint
(c/param (c/tag "fn-arity347") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity347") 1)])]
c/no-tail)
;; returns
c/promise-constraint)})
56 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity549")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity549") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity549") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity549") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol ""))})
c/VectorType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity304")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity304") 1)
0
))
(c/param (c/tag "fn-arity304") 0)
(c/vect-c [] (c/coll-of-c c/top-type))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity304") 1)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/type-op c/call-value-op
(c/param (c/tag "fn-arity304") 1) c/no-args
)))), 3 (c/fn-arity
(c/tag "fn-arity303")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity303") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 2)])]
c/no-tail)
;; returns
c/top-type)})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)])))), 3 (c/fn-arity
(c/tag "fn-arity163")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity163") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)])
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity548") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity548") 0)
[(c/Field (c/tag ".x"))]
)])]
)
(c/ReifiedConstraint 59 (c/tag "* RecurseFinal constructor at core: 2585 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag "* RecurseFinal constructor at core: 2585 *")
(c/seq-c [c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "RecurseFinal")
{}
{(c/Field (c/tag ".x")) (c/param (c/tag "* RecurseFinal constructor at core: 2585 *") 1)
c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")]
))})
c/VectorType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity304")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity304") 1)
0
))
(c/param (c/tag "fn-arity304") 0)
(c/vect-c [] (c/coll-of-c c/top-type))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity304") 1)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/type-op c/call-value-op
(c/param (c/tag "fn-arity304") 1) c/no-args
)))), 3 (c/fn-arity
(c/tag "fn-arity303")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity303") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 2)])]
c/no-tail)
;; returns
c/top-type)})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)])))), 3 (c/fn-arity
(c/tag "fn-arity163")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity163") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)])
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)]))})})
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity704") 0)
[(c/Field (c/tag ".xs"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity703") 0)
[(c/Field (c/tag ".xs"))]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity713")
(c/seq-c [(c/multi [c/int-constraint
(c/param (c/tag "fn-arity713") 0)])]
c/no-tail)
;; returns
c/strbuff-constraint)})]
)
(c/list-c [] (c/coll-of-c (c/sum-c [c/strbuff-constraint
c/substr-constraint])))]))})}) 

 arg-cs [(c/ReifiedConstraint 96 (c/tag "Boogie")
{(c/Field (c/tag ".xs")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".xs")) (c/vect-c [(c/IntConstraint 1 2147483647 -2147483648)
(c/IntConstraint 2 2147483647 -2147483648)
(c/SymConstraint p)]
c/no-tail)
}
c/fn-constraint
 empty-list c/no-symbol "")] 

 result-type (c/NoValues [c/int-constraint
(c/SymConstraint p)]) 

 Conflicting assertions (1157)  at assertion-tests/bad-constructor-param-2.toc: 19
Integer from:    Symbol pfrom:
core: 1208                    
core: 1210                    
core: 95                      
core: 97                      
                              
                              


*** Conflicting assertions (528)  at assertion-tests/bad-list-of-1.toc: 10
String from:            Integer from:       
bad-list-of-1.toc: 4    bad-list-of-1.toc: 6
core: 22                bad-list-of-1.toc: 7
                                            
                                            


*** Conflicting assertions (528)  at assertion-tests/bad-result-sum-type.toc: 8
String 88from:    Integer from:
                               
                               


*** Loaded assertion-tests/comp-bad-type-1.toc

***  site 1151 assertion-tests/closure-2.toc: 8 
 (foo (vector "xx") "p") 

 target-c (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity760")
(c/seq-c [(c/param (c/tag "fn-arity760") 0)
(c/multi [c/int-constraint
(c/param (c/tag "fn-arity760") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c c/int-constraint)))}) 

 arg-cs [(c/vect-c [(c/StrBuffConstraint xxempty-list c/no-symbol "")]
c/no-tail), (c/StrBuffConstraint pempty-list c/no-symbol "")] 

 result-type (c/NoValues [c/int-constraint
(c/StrBuffConstraint pempty-list c/no-symbol "")]) 

 Conflicting assertions (1157)  at assertion-tests/closure-2.toc: 8
Integer from:       String pfrom:
closure-2.toc: 5                 
core: 1208                       
core: 1210                       
core: 95                         
core: 97                         
                                 
                                 


*** Loaded assertion-tests/comp-bad-type-2.toc

*** Conflicting assertions (528)  at assertion-tests/bad-proto-impl.toc: 3
Maybe from:    Bogfrom:
core: 819              
                       
                       


***  site 1151 assertion-tests/butlast-inner.toc: 7 
 (map init-ints (fn  [s]
(subs s 1))) 

 target-c (c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/HashSetType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity630")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity630") 1)
0
))
(c/param (c/tag "fn-arity630") 0)
(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity630") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
c/contents (c/type-op c/call-value-op
(c/param (c/tag "fn-arity630") 1) c/no-args
)
}
(c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity643")
(c/seq-c [(c/multi [(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity643") 0)])
(c/param (c/tag "fn-arity643") 1)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "get")
(c/fn-c []
{2 (c/fn-arity
(c/tag "get")
(c/list-c [(c/param (c/tag "get") 0)
(c/param (c/tag "get") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "get") 0) c/no-args
) empty-list c/no-symbol ""))})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity134")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity134") 0)])
(c/param (c/tag "fn-arity134") 1)]
c/no-tail)
;; returns
(c/multi [(c/param (c/tag "fn-arity134") 0)
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity134") 0) c/no-args
) empty-list c/no-symbol "")]))})
c/BitmapIndexedType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity483")
(c/list-c [(c/multi [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity483") 0)])
(c/param (c/tag "fn-arity483") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity483") 0) c/no-args
) empty-list c/no-symbol ""))})
53 (c/fn-c []
{2 (c/fn-arity
(c/tag "Sorting_get")
(c/list-c [(c/multi [(c/ReifiedConstraint 53 (c/tag "Sorting")
{(c/Field (c/tag ".v")) c/top-type
(c/Field (c/tag ".k")) c/top-type
}
{(c/Field (c/tag ".v")) c/top-type
c/contents c/top-type
(c/Field (c/tag ".k")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "Sorting_get") 0)])
(c/param (c/tag "Sorting_get") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/get-from-op
(c/param (c/tag "Sorting_get") 0)
[(c/param (c/tag "Sorting_get") 1)]
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "Sorting_get") 0) c/no-args
)]) empty-list c/no-symbol ""))})
55 (c/fn-c []
{2 (c/fn-arity
(c/tag "RecurseWith_get")
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "RecurseWith_get") 0)])
(c/param (c/tag "RecurseWith_get") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/get-from-op
(c/param (c/tag "RecurseWith_get") 0)
[(c/param (c/tag "RecurseWith_get") 1)]
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "RecurseWith_get") 0) c/no-args
)]) empty-list c/no-symbol ""))})
c/HashCollisionNodeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity481")
(c/list-c [(c/multi [(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity481") 0)])
(c/param (c/tag "fn-arity481") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity481") 0) c/no-args
) empty-list c/no-symbol ""))})
56 (c/fn-c []
{2 (c/fn-arity
(c/tag "RecurseFinal_get")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "RecurseFinal_get") 0)])
(c/param (c/tag "RecurseFinal_get") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/get-from-op
(c/param (c/tag "RecurseFinal_get") 0)
[(c/param (c/tag "RecurseFinal_get") 1)]
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "RecurseFinal_get") 0) c/no-args
)]) empty-list c/no-symbol ""))})
c/ArrayNodeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity482")
(c/list-c [(c/multi [(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity482") 0)])
(c/param (c/tag "fn-arity482") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity482") 0) c/no-args
) empty-list c/no-symbol ""))})
c/VectorType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity86")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity86") 0)])
(c/multi [c/int-constraint
(c/IntConstraint c/no-int 2147483647 0)
(c/param (c/tag "fn-arity86") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity86") 0) c/no-args
) empty-list c/no-symbol ""))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity269")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity269") 0)])
(c/multi [c/int-constraint
(c/param (c/tag "fn-arity269") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity269") 0) c/no-args
) empty-list c/no-symbol ""))})})
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity643") 0)
[(c/Field (c/tag ".set-map"))]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])])
(c/param (c/tag "fn-arity643") 1)]
))})
 empty-list c/no-symbol ""))})
c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
55 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity552")
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity552") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity552") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity552") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity553") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity552") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity551")
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity551") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity551") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity551") 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
55 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity552")
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity552") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity552") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity552") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity553") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity552") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol ""))})
c/FutureType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity368")
(c/list-c [(c/multi [(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity368") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity368") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
c/PromiseType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity347")
(c/list-c [(c/multi [c/promise-constraint
(c/param (c/tag "fn-arity347") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity347") 1)])]
c/no-tail)
;; returns
c/promise-constraint)})
56 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity549")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity549") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity549") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity549") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity548")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity548") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity548") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity548") 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/FutureType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity368")
(c/list-c [(c/multi [(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity368") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity368") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
c/PromiseType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity347")
(c/list-c [(c/multi [c/promise-constraint
(c/param (c/tag "fn-arity347") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity347") 1)])]
c/no-tail)
;; returns
c/promise-constraint)})
56 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity549")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity549") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity549") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity549") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol ""))})
c/VectorType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity304")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity304") 1)
0
))
(c/param (c/tag "fn-arity304") 0)
(c/vect-c [] (c/coll-of-c c/top-type))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity304") 1)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/type-op c/call-value-op
(c/param (c/tag "fn-arity304") 1) c/no-args
)))), 3 (c/fn-arity
(c/tag "fn-arity303")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity303") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 2)])]
c/no-tail)
;; returns
c/top-type)})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)])))), 3 (c/fn-arity
(c/tag "fn-arity163")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity163") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)])
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity548") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity548") 0)
[(c/Field (c/tag ".x"))]
)])]
)
(c/ReifiedConstraint 59 (c/tag "* RecurseFinal constructor at core: 2585 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag "* RecurseFinal constructor at core: 2585 *")
(c/seq-c [c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "RecurseFinal")
{}
{(c/Field (c/tag ".x")) (c/param (c/tag "* RecurseFinal constructor at core: 2585 *") 1)
c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")]
))})
c/VectorType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity304")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity304") 1)
0
))
(c/param (c/tag "fn-arity304") 0)
(c/vect-c [] (c/coll-of-c c/top-type))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity304") 1)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/type-op c/call-value-op
(c/param (c/tag "fn-arity304") 1) c/no-args
)))), 3 (c/fn-arity
(c/tag "fn-arity303")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity303") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 2)])]
c/no-tail)
;; returns
c/top-type)})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)])))), 3 (c/fn-arity
(c/tag "fn-arity163")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity163") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)])
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity551") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity553") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity552") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity551") 0)
[(c/Field (c/tag ".x"))]
)])]
)
(c/ReifiedConstraint 60 (c/tag "* RecurseWith constructor at core: 2597 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag "* RecurseWith constructor at core: 2597 *")
(c/seq-c [c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "RecurseWith")
{}
{(c/Field (c/tag ".x")) (c/param (c/tag "* RecurseWith constructor at core: 2597 *") 1)
c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")]
))})
c/FutureType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity368")
(c/list-c [(c/multi [(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity368") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity368") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
c/PromiseType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity347")
(c/list-c [(c/multi [c/promise-constraint
(c/param (c/tag "fn-arity347") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity347") 1)])]
c/no-tail)
;; returns
c/promise-constraint)})
56 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity549")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity549") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity549") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity549") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity548")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity548") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity548") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity548") 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/FutureType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity368")
(c/list-c [(c/multi [(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity368") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity368") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
c/PromiseType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity347")
(c/list-c [(c/multi [c/promise-constraint
(c/param (c/tag "fn-arity347") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity347") 1)])]
c/no-tail)
;; returns
c/promise-constraint)})
56 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity549")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity549") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity549") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity549") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol ""))})
c/VectorType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity304")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity304") 1)
0
))
(c/param (c/tag "fn-arity304") 0)
(c/vect-c [] (c/coll-of-c c/top-type))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity304") 1)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/type-op c/call-value-op
(c/param (c/tag "fn-arity304") 1) c/no-args
)))), 3 (c/fn-arity
(c/tag "fn-arity303")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity303") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 2)])]
c/no-tail)
;; returns
c/top-type)})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)])))), 3 (c/fn-arity
(c/tag "fn-arity163")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity163") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)])
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity548") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity548") 0)
[(c/Field (c/tag ".x"))]
)])]
)
(c/ReifiedConstraint 59 (c/tag "* RecurseFinal constructor at core: 2585 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag "* RecurseFinal constructor at core: 2585 *")
(c/seq-c [c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "RecurseFinal")
{}
{(c/Field (c/tag ".x")) (c/param (c/tag "* RecurseFinal constructor at core: 2585 *") 1)
c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")]
))})
c/VectorType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity304")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity304") 1)
0
))
(c/param (c/tag "fn-arity304") 0)
(c/vect-c [] (c/coll-of-c c/top-type))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity304") 1)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/type-op c/call-value-op
(c/param (c/tag "fn-arity304") 1) c/no-args
)))), 3 (c/fn-arity
(c/tag "fn-arity303")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity303") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 2)])]
c/no-tail)
;; returns
c/top-type)})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)])))), 3 (c/fn-arity
(c/tag "fn-arity163")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity163") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)])
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)]))})}) 

 arg-cs [(c/vect-c [(c/IntConstraint 1 2147483647 -2147483648)
(c/IntConstraint 2 2147483647 -2147483648)]
c/no-tail), (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity752")
(c/seq-c [(c/multi [(c/sum-c [c/strbuff-constraint
c/substr-constraint])
(c/param (c/tag "fn-arity752") 0)])]
c/no-tail)
;; returns
c/substr-constraint)})] 

 result-type (c/NoValues [c/strbuff-constraint
(c/IntConstraint 1 2147483647 -2147483648)]) 

 Conflicting assertions (1157)  at assertion-tests/butlast-inner.toc: 7
String from:    Integer 1from:      
core: 336       butlast-inner.toc: 2
core: 339                           
core: 22                            
                                    
                                    


***  site 1151 assertion-tests/butlast-inner-list.toc: 7 
 (map init-ints (fn  [s]
(subs s 1))) 

 target-c (c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/HashSetType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity630")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity630") 1)
0
))
(c/param (c/tag "fn-arity630") 0)
(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity630") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
c/contents (c/type-op c/call-value-op
(c/param (c/tag "fn-arity630") 1) c/no-args
)
}
(c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity643")
(c/seq-c [(c/multi [(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity643") 0)])
(c/param (c/tag "fn-arity643") 1)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "get")
(c/fn-c []
{2 (c/fn-arity
(c/tag "get")
(c/list-c [(c/param (c/tag "get") 0)
(c/param (c/tag "get") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "get") 0) c/no-args
) empty-list c/no-symbol ""))})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity134")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity134") 0)])
(c/param (c/tag "fn-arity134") 1)]
c/no-tail)
;; returns
(c/multi [(c/param (c/tag "fn-arity134") 0)
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity134") 0) c/no-args
) empty-list c/no-symbol "")]))})
c/BitmapIndexedType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity483")
(c/list-c [(c/multi [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity483") 0)])
(c/param (c/tag "fn-arity483") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity483") 0) c/no-args
) empty-list c/no-symbol ""))})
53 (c/fn-c []
{2 (c/fn-arity
(c/tag "Sorting_get")
(c/list-c [(c/multi [(c/ReifiedConstraint 53 (c/tag "Sorting")
{(c/Field (c/tag ".v")) c/top-type
(c/Field (c/tag ".k")) c/top-type
}
{(c/Field (c/tag ".v")) c/top-type
c/contents c/top-type
(c/Field (c/tag ".k")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "Sorting_get") 0)])
(c/param (c/tag "Sorting_get") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/get-from-op
(c/param (c/tag "Sorting_get") 0)
[(c/param (c/tag "Sorting_get") 1)]
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "Sorting_get") 0) c/no-args
)]) empty-list c/no-symbol ""))})
55 (c/fn-c []
{2 (c/fn-arity
(c/tag "RecurseWith_get")
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "RecurseWith_get") 0)])
(c/param (c/tag "RecurseWith_get") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/get-from-op
(c/param (c/tag "RecurseWith_get") 0)
[(c/param (c/tag "RecurseWith_get") 1)]
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "RecurseWith_get") 0) c/no-args
)]) empty-list c/no-symbol ""))})
c/HashCollisionNodeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity481")
(c/list-c [(c/multi [(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity481") 0)])
(c/param (c/tag "fn-arity481") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity481") 0) c/no-args
) empty-list c/no-symbol ""))})
56 (c/fn-c []
{2 (c/fn-arity
(c/tag "RecurseFinal_get")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "RecurseFinal_get") 0)])
(c/param (c/tag "RecurseFinal_get") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/get-from-op
(c/param (c/tag "RecurseFinal_get") 0)
[(c/param (c/tag "RecurseFinal_get") 1)]
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "RecurseFinal_get") 0) c/no-args
)]) empty-list c/no-symbol ""))})
c/ArrayNodeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity482")
(c/list-c [(c/multi [(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity482") 0)])
(c/param (c/tag "fn-arity482") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity482") 0) c/no-args
) empty-list c/no-symbol ""))})
c/VectorType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity86")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity86") 0)])
(c/multi [c/int-constraint
(c/IntConstraint c/no-int 2147483647 0)
(c/param (c/tag "fn-arity86") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity86") 0) c/no-args
) empty-list c/no-symbol ""))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity269")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity269") 0)])
(c/multi [c/int-constraint
(c/param (c/tag "fn-arity269") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity269") 0) c/no-args
) empty-list c/no-symbol ""))})})
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity643") 0)
[(c/Field (c/tag ".set-map"))]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])])
(c/param (c/tag "fn-arity643") 1)]
))})
 empty-list c/no-symbol ""))})
c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
55 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity552")
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity552") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity552") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity552") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity553") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity552") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity551")
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity551") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity551") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity551") 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
55 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity552")
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity552") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity552") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity552") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity553") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity552") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol ""))})
c/FutureType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity368")
(c/list-c [(c/multi [(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity368") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity368") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
c/PromiseType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity347")
(c/list-c [(c/multi [c/promise-constraint
(c/param (c/tag "fn-arity347") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity347") 1)])]
c/no-tail)
;; returns
c/promise-constraint)})
56 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity549")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity549") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity549") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity549") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity548")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity548") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity548") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity548") 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/FutureType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity368")
(c/list-c [(c/multi [(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity368") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity368") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
c/PromiseType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity347")
(c/list-c [(c/multi [c/promise-constraint
(c/param (c/tag "fn-arity347") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity347") 1)])]
c/no-tail)
;; returns
c/promise-constraint)})
56 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity549")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity549") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity549") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity549") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol ""))})
c/VectorType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity304")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity304") 1)
0
))
(c/param (c/tag "fn-arity304") 0)
(c/vect-c [] (c/coll-of-c c/top-type))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity304") 1)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/type-op c/call-value-op
(c/param (c/tag "fn-arity304") 1) c/no-args
)))), 3 (c/fn-arity
(c/tag "fn-arity303")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity303") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 2)])]
c/no-tail)
;; returns
c/top-type)})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)])))), 3 (c/fn-arity
(c/tag "fn-arity163")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity163") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)])
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity548") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity548") 0)
[(c/Field (c/tag ".x"))]
)])]
)
(c/ReifiedConstraint 59 (c/tag "* RecurseFinal constructor at core: 2585 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag "* RecurseFinal constructor at core: 2585 *")
(c/seq-c [c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "RecurseFinal")
{}
{(c/Field (c/tag ".x")) (c/param (c/tag "* RecurseFinal constructor at core: 2585 *") 1)
c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")]
))})
c/VectorType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity304")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity304") 1)
0
))
(c/param (c/tag "fn-arity304") 0)
(c/vect-c [] (c/coll-of-c c/top-type))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity304") 1)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/type-op c/call-value-op
(c/param (c/tag "fn-arity304") 1) c/no-args
)))), 3 (c/fn-arity
(c/tag "fn-arity303")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity303") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 2)])]
c/no-tail)
;; returns
c/top-type)})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)])))), 3 (c/fn-arity
(c/tag "fn-arity163")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity163") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)])
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity551") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity553") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity552") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity551") 0)
[(c/Field (c/tag ".x"))]
)])]
)
(c/ReifiedConstraint 60 (c/tag "* RecurseWith constructor at core: 2597 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag "* RecurseWith constructor at core: 2597 *")
(c/seq-c [c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "RecurseWith")
{}
{(c/Field (c/tag ".x")) (c/param (c/tag "* RecurseWith constructor at core: 2597 *") 1)
c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")]
))})
c/FutureType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity368")
(c/list-c [(c/multi [(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity368") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity368") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
c/PromiseType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity347")
(c/list-c [(c/multi [c/promise-constraint
(c/param (c/tag "fn-arity347") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity347") 1)])]
c/no-tail)
;; returns
c/promise-constraint)})
56 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity549")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity549") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity549") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity549") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity548")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity548") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity548") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity548") 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/FutureType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity368")
(c/list-c [(c/multi [(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity368") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity368") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
c/PromiseType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity347")
(c/list-c [(c/multi [c/promise-constraint
(c/param (c/tag "fn-arity347") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity347") 1)])]
c/no-tail)
;; returns
c/promise-constraint)})
56 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity549")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity549") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity549") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity549") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol ""))})
c/VectorType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity304")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity304") 1)
0
))
(c/param (c/tag "fn-arity304") 0)
(c/vect-c [] (c/coll-of-c c/top-type))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity304") 1)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/type-op c/call-value-op
(c/param (c/tag "fn-arity304") 1) c/no-args
)))), 3 (c/fn-arity
(c/tag "fn-arity303")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity303") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 2)])]
c/no-tail)
;; returns
c/top-type)})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)])))), 3 (c/fn-arity
(c/tag "fn-arity163")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity163") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)])
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity548") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity548") 0)
[(c/Field (c/tag ".x"))]
)])]
)
(c/ReifiedConstraint 59 (c/tag "* RecurseFinal constructor at core: 2585 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag "* RecurseFinal constructor at core: 2585 *")
(c/seq-c [c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "RecurseFinal")
{}
{(c/Field (c/tag ".x")) (c/param (c/tag "* RecurseFinal constructor at core: 2585 *") 1)
c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")]
))})
c/VectorType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity304")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity304") 1)
0
))
(c/param (c/tag "fn-arity304") 0)
(c/vect-c [] (c/coll-of-c c/top-type))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity304") 1)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/type-op c/call-value-op
(c/param (c/tag "fn-arity304") 1) c/no-args
)))), 3 (c/fn-arity
(c/tag "fn-arity303")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity303") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 2)])]
c/no-tail)
;; returns
c/top-type)})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)])))), 3 (c/fn-arity
(c/tag "fn-arity163")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity163") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)])
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)]))})}) 

 arg-cs [(c/list-c [(c/IntConstraint 1 2147483647 -2147483648)
(c/IntConstraint 2 2147483647 -2147483648)]
c/no-tail), (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity753")
(c/seq-c [(c/multi [(c/sum-c [c/strbuff-constraint
c/substr-constraint])
(c/param (c/tag "fn-arity753") 0)])]
c/no-tail)
;; returns
c/substr-constraint)})] 

 result-type (c/NoValues [c/strbuff-constraint
(c/IntConstraint 1 2147483647 -2147483648)]) 

 Conflicting assertions (1157)  at assertion-tests/butlast-inner-list.toc: 7
String from:    Integer 1from:           
core: 336       butlast-inner-list.toc: 2
core: 339                                
core: 22                                 
                                         
                                         


***  site 1151 assertion-tests/bad-vect-wrap.toc: 4 
 (map (wrap (vector ) 'bogus) inc) 

 target-c (c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/HashSetType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity630")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity630") 1)
0
))
(c/param (c/tag "fn-arity630") 0)
(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity630") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
c/contents (c/type-op c/call-value-op
(c/param (c/tag "fn-arity630") 1) c/no-args
)
}
(c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity643")
(c/seq-c [(c/multi [(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity643") 0)])
(c/param (c/tag "fn-arity643") 1)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "get")
(c/fn-c []
{2 (c/fn-arity
(c/tag "get")
(c/list-c [(c/param (c/tag "get") 0)
(c/param (c/tag "get") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "get") 0) c/no-args
) empty-list c/no-symbol ""))})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity134")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity134") 0)])
(c/param (c/tag "fn-arity134") 1)]
c/no-tail)
;; returns
(c/multi [(c/param (c/tag "fn-arity134") 0)
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity134") 0) c/no-args
) empty-list c/no-symbol "")]))})
c/BitmapIndexedType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity483")
(c/list-c [(c/multi [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity483") 0)])
(c/param (c/tag "fn-arity483") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity483") 0) c/no-args
) empty-list c/no-symbol ""))})
53 (c/fn-c []
{2 (c/fn-arity
(c/tag "Sorting_get")
(c/list-c [(c/multi [(c/ReifiedConstraint 53 (c/tag "Sorting")
{(c/Field (c/tag ".v")) c/top-type
(c/Field (c/tag ".k")) c/top-type
}
{(c/Field (c/tag ".v")) c/top-type
c/contents c/top-type
(c/Field (c/tag ".k")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "Sorting_get") 0)])
(c/param (c/tag "Sorting_get") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/get-from-op
(c/param (c/tag "Sorting_get") 0)
[(c/param (c/tag "Sorting_get") 1)]
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "Sorting_get") 0) c/no-args
)]) empty-list c/no-symbol ""))})
55 (c/fn-c []
{2 (c/fn-arity
(c/tag "RecurseWith_get")
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "RecurseWith_get") 0)])
(c/param (c/tag "RecurseWith_get") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/get-from-op
(c/param (c/tag "RecurseWith_get") 0)
[(c/param (c/tag "RecurseWith_get") 1)]
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "RecurseWith_get") 0) c/no-args
)]) empty-list c/no-symbol ""))})
c/HashCollisionNodeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity481")
(c/list-c [(c/multi [(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity481") 0)])
(c/param (c/tag "fn-arity481") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity481") 0) c/no-args
) empty-list c/no-symbol ""))})
56 (c/fn-c []
{2 (c/fn-arity
(c/tag "RecurseFinal_get")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "RecurseFinal_get") 0)])
(c/param (c/tag "RecurseFinal_get") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/get-from-op
(c/param (c/tag "RecurseFinal_get") 0)
[(c/param (c/tag "RecurseFinal_get") 1)]
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "RecurseFinal_get") 0) c/no-args
)]) empty-list c/no-symbol ""))})
c/ArrayNodeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity482")
(c/list-c [(c/multi [(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity482") 0)])
(c/param (c/tag "fn-arity482") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity482") 0) c/no-args
) empty-list c/no-symbol ""))})
c/VectorType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity86")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity86") 0)])
(c/multi [c/int-constraint
(c/IntConstraint c/no-int 2147483647 0)
(c/param (c/tag "fn-arity86") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity86") 0) c/no-args
) empty-list c/no-symbol ""))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity269")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity269") 0)])
(c/multi [c/int-constraint
(c/param (c/tag "fn-arity269") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity269") 0) c/no-args
) empty-list c/no-symbol ""))})})
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity643") 0)
[(c/Field (c/tag ".set-map"))]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])])
(c/param (c/tag "fn-arity643") 1)]
))})
 empty-list c/no-symbol ""))})
c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
55 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity552")
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity552") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity552") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity552") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity553") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity552") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity551")
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity551") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity551") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity551") 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
55 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity552")
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity552") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity552") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity552") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity553") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity552") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol ""))})
c/FutureType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity368")
(c/list-c [(c/multi [(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity368") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity368") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
c/PromiseType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity347")
(c/list-c [(c/multi [c/promise-constraint
(c/param (c/tag "fn-arity347") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity347") 1)])]
c/no-tail)
;; returns
c/promise-constraint)})
56 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity549")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity549") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity549") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity549") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity548")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity548") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity548") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity548") 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/FutureType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity368")
(c/list-c [(c/multi [(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity368") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity368") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
c/PromiseType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity347")
(c/list-c [(c/multi [c/promise-constraint
(c/param (c/tag "fn-arity347") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity347") 1)])]
c/no-tail)
;; returns
c/promise-constraint)})
56 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity549")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity549") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity549") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity549") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol ""))})
c/VectorType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity304")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity304") 1)
0
))
(c/param (c/tag "fn-arity304") 0)
(c/vect-c [] (c/coll-of-c c/top-type))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity304") 1)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/type-op c/call-value-op
(c/param (c/tag "fn-arity304") 1) c/no-args
)))), 3 (c/fn-arity
(c/tag "fn-arity303")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity303") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 2)])]
c/no-tail)
;; returns
c/top-type)})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)])))), 3 (c/fn-arity
(c/tag "fn-arity163")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity163") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)])
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity548") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity548") 0)
[(c/Field (c/tag ".x"))]
)])]
)
(c/ReifiedConstraint 59 (c/tag "* RecurseFinal constructor at core: 2585 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag "* RecurseFinal constructor at core: 2585 *")
(c/seq-c [c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "RecurseFinal")
{}
{(c/Field (c/tag ".x")) (c/param (c/tag "* RecurseFinal constructor at core: 2585 *") 1)
c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")]
))})
c/VectorType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity304")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity304") 1)
0
))
(c/param (c/tag "fn-arity304") 0)
(c/vect-c [] (c/coll-of-c c/top-type))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity304") 1)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/type-op c/call-value-op
(c/param (c/tag "fn-arity304") 1) c/no-args
)))), 3 (c/fn-arity
(c/tag "fn-arity303")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity303") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 2)])]
c/no-tail)
;; returns
c/top-type)})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)])))), 3 (c/fn-arity
(c/tag "fn-arity163")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity163") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)])
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity551") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity553") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity552") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity551") 0)
[(c/Field (c/tag ".x"))]
)])]
)
(c/ReifiedConstraint 60 (c/tag "* RecurseWith constructor at core: 2597 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag "* RecurseWith constructor at core: 2597 *")
(c/seq-c [c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "RecurseWith")
{}
{(c/Field (c/tag ".x")) (c/param (c/tag "* RecurseWith constructor at core: 2597 *") 1)
c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")]
))})
c/FutureType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity368")
(c/list-c [(c/multi [(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity368") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity368") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
c/PromiseType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity347")
(c/list-c [(c/multi [c/promise-constraint
(c/param (c/tag "fn-arity347") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity347") 1)])]
c/no-tail)
;; returns
c/promise-constraint)})
56 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity549")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity549") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity549") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity549") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity548")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity548") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity548") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity548") 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/FutureType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity368")
(c/list-c [(c/multi [(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity368") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity368") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
c/PromiseType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity347")
(c/list-c [(c/multi [c/promise-constraint
(c/param (c/tag "fn-arity347") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity347") 1)])]
c/no-tail)
;; returns
c/promise-constraint)})
56 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity549")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity549") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity549") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity549") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol ""))})
c/VectorType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity304")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity304") 1)
0
))
(c/param (c/tag "fn-arity304") 0)
(c/vect-c [] (c/coll-of-c c/top-type))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity304") 1)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/type-op c/call-value-op
(c/param (c/tag "fn-arity304") 1) c/no-args
)))), 3 (c/fn-arity
(c/tag "fn-arity303")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity303") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 2)])]
c/no-tail)
;; returns
c/top-type)})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)])))), 3 (c/fn-arity
(c/tag "fn-arity163")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity163") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)])
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity548") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity548") 0)
[(c/Field (c/tag ".x"))]
)])]
)
(c/ReifiedConstraint 59 (c/tag "* RecurseFinal constructor at core: 2585 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag "* RecurseFinal constructor at core: 2585 *")
(c/seq-c [c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "RecurseFinal")
{}
{(c/Field (c/tag ".x")) (c/param (c/tag "* RecurseFinal constructor at core: 2585 *") 1)
c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")]
))})
c/VectorType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity304")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity304") 1)
0
))
(c/param (c/tag "fn-arity304") 0)
(c/vect-c [] (c/coll-of-c c/top-type))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity304") 1)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/type-op c/call-value-op
(c/param (c/tag "fn-arity304") 1) c/no-args
)))), 3 (c/fn-arity
(c/tag "fn-arity303")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity303") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 2)])]
c/no-tail)
;; returns
c/top-type)})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)])))), 3 (c/fn-arity
(c/tag "fn-arity163")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity163") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)])
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)]))})}) 

 arg-cs [(c/vect-c [(c/SymConstraint bogus)]
c/no-tail), (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity120")
(c/seq-c [(c/multi [c/int-constraint
(c/param (c/tag "fn-arity120") 0)])]
c/no-tail)
;; returns
c/int-constraint)})] 

 result-type (c/NoValues [c/int-constraint
(c/SymConstraint bogus)]) 

 Conflicting assertions (1157)  at assertion-tests/bad-vect-wrap.toc: 4
Integer from:    Symbol bogusfrom:
core: 1210                        
core: 95                          
core: 97                          
                                  
                                  


***  site 1151 assertion-tests/closure-1.toc: 8 
 (inc p) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity120")
(c/seq-c [(c/multi [c/int-constraint
(c/param (c/tag "fn-arity120") 0)])]
c/no-tail)
;; returns
c/int-constraint)}) 

 arg-cs [(c/multi [(c/sum-c [c/strbuff-constraint
c/substr-constraint])
(c/param (c/tag "fn-arity767") 1)])] 

 result-type (c/NoValues [c/strbuff-constraint
c/int-constraint]) 

 Conflicting assertions (1157)  at assertion-tests/closure-1.toc: 8
String from:    Integer from:
core: 336       core: 1210   
core: 339       core: 95     
core: 22        core: 97     
                             
                             


***  site 1151 assertion-tests/destruct-variadic-tail-2.toc: 14 
 (g ) 

 target-c (c/fn-c []
{c/variadic (c/fn-arity
(c/tag "fn-arity771")
(c/seq-c [] (c/multi [(c/list-c [c/int-constraint]
(c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity771") 0)]))
;; returns
c/strbuff-constraint)}) 

 arg-cs [] 

 result-type (c/NoValues [c/no-tail
(c/ReifiedConstraint 0 (c/tag "Can not contain other values")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")]) 

 Conflicting assertions (1157)  at assertion-tests/destruct-variadic-tail-2.toc: 14
No Tail for sequence    Can not contain other valuesfrom:


***  site 1151 assertion-tests/dup-protocol-name.toc: 8 
 (pf 'x 3 3) 

 target-c (c/ProtoImpls
(c/tag "pf")
(c/fn-c []
{3 (c/fn-arity
(c/tag "pf")
(c/list-c [(c/param (c/tag "pf") 0)
(c/multi [c/int-constraint
(c/param (c/tag "pf") 1)])
(c/multi [(c/sum-c [c/strbuff-constraint
c/substr-constraint])
(c/param (c/tag "pf") 2)])]
c/no-tail)
;; returns
c/top-type)})

{}) 

 arg-cs [(c/SymConstraint x), (c/IntConstraint 3 2147483647 -2147483648), (c/IntConstraint 3 2147483647 -2147483648)] 

 result-type (c/NoValues [c/strbuff-constraint
(c/IntConstraint 3 2147483647 -2147483648)]) 

 Conflicting assertions (1157)  at assertion-tests/dup-protocol-name.toc: 8
String from:    Integer 3from:
core: 336                     
core: 339                     
core: 22                      
                              
                              


***  site 1151 assertion-tests/dynamic-call-3.toc: 12 
 (inc (g f)) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity120")
(c/seq-c [(c/multi [c/int-constraint
(c/param (c/tag "fn-arity120") 0)])]
c/no-tail)
;; returns
c/int-constraint)}) 

 arg-cs [c/strbuff-constraint] 

 result-type (c/NoValues [c/int-constraint
c/strbuff-constraint]) 

 Conflicting assertions (1157)  at assertion-tests/dynamic-call-3.toc: 12
Integer from:    String from:         
core: 1210       dynamic-call-3.toc: 9
core: 95         core: 1719           
core: 97         core: 1722           
                 core: 22             
                                      
                                      


***  site 1151 assertion-tests/bad-vector-of-1.toc: 5 
 (map v (fn  [x]
(subs x 1))) 

 target-c (c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/HashSetType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity630")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity630") 1)
0
))
(c/param (c/tag "fn-arity630") 0)
(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity630") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
c/contents (c/type-op c/call-value-op
(c/param (c/tag "fn-arity630") 1) c/no-args
)
}
(c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity643")
(c/seq-c [(c/multi [(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity643") 0)])
(c/param (c/tag "fn-arity643") 1)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "get")
(c/fn-c []
{2 (c/fn-arity
(c/tag "get")
(c/list-c [(c/param (c/tag "get") 0)
(c/param (c/tag "get") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "get") 0) c/no-args
) empty-list c/no-symbol ""))})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity134")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity134") 0)])
(c/param (c/tag "fn-arity134") 1)]
c/no-tail)
;; returns
(c/multi [(c/param (c/tag "fn-arity134") 0)
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity134") 0) c/no-args
) empty-list c/no-symbol "")]))})
c/BitmapIndexedType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity483")
(c/list-c [(c/multi [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity483") 0)])
(c/param (c/tag "fn-arity483") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity483") 0) c/no-args
) empty-list c/no-symbol ""))})
53 (c/fn-c []
{2 (c/fn-arity
(c/tag "Sorting_get")
(c/list-c [(c/multi [(c/ReifiedConstraint 53 (c/tag "Sorting")
{(c/Field (c/tag ".v")) c/top-type
(c/Field (c/tag ".k")) c/top-type
}
{(c/Field (c/tag ".v")) c/top-type
c/contents c/top-type
(c/Field (c/tag ".k")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "Sorting_get") 0)])
(c/param (c/tag "Sorting_get") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/get-from-op
(c/param (c/tag "Sorting_get") 0)
[(c/param (c/tag "Sorting_get") 1)]
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "Sorting_get") 0) c/no-args
)]) empty-list c/no-symbol ""))})
55 (c/fn-c []
{2 (c/fn-arity
(c/tag "RecurseWith_get")
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "RecurseWith_get") 0)])
(c/param (c/tag "RecurseWith_get") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/get-from-op
(c/param (c/tag "RecurseWith_get") 0)
[(c/param (c/tag "RecurseWith_get") 1)]
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "RecurseWith_get") 0) c/no-args
)]) empty-list c/no-symbol ""))})
c/HashCollisionNodeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity481")
(c/list-c [(c/multi [(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity481") 0)])
(c/param (c/tag "fn-arity481") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity481") 0) c/no-args
) empty-list c/no-symbol ""))})
56 (c/fn-c []
{2 (c/fn-arity
(c/tag "RecurseFinal_get")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "RecurseFinal_get") 0)])
(c/param (c/tag "RecurseFinal_get") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/get-from-op
(c/param (c/tag "RecurseFinal_get") 0)
[(c/param (c/tag "RecurseFinal_get") 1)]
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "RecurseFinal_get") 0) c/no-args
)]) empty-list c/no-symbol ""))})
c/ArrayNodeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity482")
(c/list-c [(c/multi [(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity482") 0)])
(c/param (c/tag "fn-arity482") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity482") 0) c/no-args
) empty-list c/no-symbol ""))})
c/VectorType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity86")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity86") 0)])
(c/multi [c/int-constraint
(c/IntConstraint c/no-int 2147483647 0)
(c/param (c/tag "fn-arity86") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity86") 0) c/no-args
) empty-list c/no-symbol ""))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity269")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity269") 0)])
(c/multi [c/int-constraint
(c/param (c/tag "fn-arity269") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity269") 0) c/no-args
) empty-list c/no-symbol ""))})})
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity643") 0)
[(c/Field (c/tag ".set-map"))]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])])
(c/param (c/tag "fn-arity643") 1)]
))})
 empty-list c/no-symbol ""))})
c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
55 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity552")
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity552") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity552") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity552") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity553") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity552") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity551")
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity551") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity551") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity551") 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
55 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity552")
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity552") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity552") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity552") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity553") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity552") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol ""))})
c/FutureType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity368")
(c/list-c [(c/multi [(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity368") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity368") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
c/PromiseType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity347")
(c/list-c [(c/multi [c/promise-constraint
(c/param (c/tag "fn-arity347") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity347") 1)])]
c/no-tail)
;; returns
c/promise-constraint)})
56 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity549")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity549") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity549") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity549") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity548")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity548") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity548") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity548") 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/FutureType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity368")
(c/list-c [(c/multi [(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity368") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity368") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
c/PromiseType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity347")
(c/list-c [(c/multi [c/promise-constraint
(c/param (c/tag "fn-arity347") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity347") 1)])]
c/no-tail)
;; returns
c/promise-constraint)})
56 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity549")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity549") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity549") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity549") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol ""))})
c/VectorType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity304")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity304") 1)
0
))
(c/param (c/tag "fn-arity304") 0)
(c/vect-c [] (c/coll-of-c c/top-type))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity304") 1)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/type-op c/call-value-op
(c/param (c/tag "fn-arity304") 1) c/no-args
)))), 3 (c/fn-arity
(c/tag "fn-arity303")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity303") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 2)])]
c/no-tail)
;; returns
c/top-type)})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)])))), 3 (c/fn-arity
(c/tag "fn-arity163")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity163") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)])
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity548") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity548") 0)
[(c/Field (c/tag ".x"))]
)])]
)
(c/ReifiedConstraint 59 (c/tag "* RecurseFinal constructor at core: 2585 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag "* RecurseFinal constructor at core: 2585 *")
(c/seq-c [c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "RecurseFinal")
{}
{(c/Field (c/tag ".x")) (c/param (c/tag "* RecurseFinal constructor at core: 2585 *") 1)
c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")]
))})
c/VectorType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity304")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity304") 1)
0
))
(c/param (c/tag "fn-arity304") 0)
(c/vect-c [] (c/coll-of-c c/top-type))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity304") 1)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/type-op c/call-value-op
(c/param (c/tag "fn-arity304") 1) c/no-args
)))), 3 (c/fn-arity
(c/tag "fn-arity303")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity303") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 2)])]
c/no-tail)
;; returns
c/top-type)})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)])))), 3 (c/fn-arity
(c/tag "fn-arity163")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity163") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)])
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity551") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity553") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity552") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity551") 0)
[(c/Field (c/tag ".x"))]
)])]
)
(c/ReifiedConstraint 60 (c/tag "* RecurseWith constructor at core: 2597 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag "* RecurseWith constructor at core: 2597 *")
(c/seq-c [c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "RecurseWith")
{}
{(c/Field (c/tag ".x")) (c/param (c/tag "* RecurseWith constructor at core: 2597 *") 1)
c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")]
))})
c/FutureType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity368")
(c/list-c [(c/multi [(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity368") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity368") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
c/PromiseType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity347")
(c/list-c [(c/multi [c/promise-constraint
(c/param (c/tag "fn-arity347") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity347") 1)])]
c/no-tail)
;; returns
c/promise-constraint)})
56 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity549")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity549") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity549") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity549") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity548")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity548") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity548") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity548") 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/FutureType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity368")
(c/list-c [(c/multi [(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity368") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity368") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
c/PromiseType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity347")
(c/list-c [(c/multi [c/promise-constraint
(c/param (c/tag "fn-arity347") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity347") 1)])]
c/no-tail)
;; returns
c/promise-constraint)})
56 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity549")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity549") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity549") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity549") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol ""))})
c/VectorType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity304")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity304") 1)
0
))
(c/param (c/tag "fn-arity304") 0)
(c/vect-c [] (c/coll-of-c c/top-type))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity304") 1)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/type-op c/call-value-op
(c/param (c/tag "fn-arity304") 1) c/no-args
)))), 3 (c/fn-arity
(c/tag "fn-arity303")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity303") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 2)])]
c/no-tail)
;; returns
c/top-type)})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)])))), 3 (c/fn-arity
(c/tag "fn-arity163")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity163") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)])
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity548") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity548") 0)
[(c/Field (c/tag ".x"))]
)])]
)
(c/ReifiedConstraint 59 (c/tag "* RecurseFinal constructor at core: 2585 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag "* RecurseFinal constructor at core: 2585 *")
(c/seq-c [c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "RecurseFinal")
{}
{(c/Field (c/tag ".x")) (c/param (c/tag "* RecurseFinal constructor at core: 2585 *") 1)
c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")]
))})
c/VectorType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity304")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity304") 1)
0
))
(c/param (c/tag "fn-arity304") 0)
(c/vect-c [] (c/coll-of-c c/top-type))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity304") 1)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/type-op c/call-value-op
(c/param (c/tag "fn-arity304") 1) c/no-args
)))), 3 (c/fn-arity
(c/tag "fn-arity303")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity303") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 2)])]
c/no-tail)
;; returns
c/top-type)})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)])))), 3 (c/fn-arity
(c/tag "fn-arity163")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity163") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)])
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)]))})}) 

 arg-cs [(c/multi [(c/vect-c [] (c/coll-of-c c/int-constraint))
(c/param (c/tag "fn-arity755") 0)]), (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity756")
(c/seq-c [(c/multi [(c/sum-c [c/strbuff-constraint
c/substr-constraint])
(c/param (c/tag "fn-arity756") 0)])]
c/no-tail)
;; returns
c/substr-constraint)})] 

 result-type (c/NoValues [c/strbuff-constraint
c/int-constraint]) 

 Conflicting assertions (1157)  at assertion-tests/bad-vector-of-1.toc: 5
String from:    Integer from:
core: 336                    
core: 339                    
core: 22                     
                             
                             


***  site 1151 assertion-tests/contents-2.toc: 10 
 (g (f empty-list)) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity763")
(c/seq-c [(c/param (c/tag "fn-arity763") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/HashSetType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity630")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity630") 1)
0
))
(c/param (c/tag "fn-arity630") 0)
(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity630") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
c/contents (c/type-op c/call-value-op
(c/param (c/tag "fn-arity630") 1) c/no-args
)
}
(c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity643")
(c/seq-c [(c/multi [(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity643") 0)])
(c/param (c/tag "fn-arity643") 1)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "get")
(c/fn-c []
{2 (c/fn-arity
(c/tag "get")
(c/list-c [(c/param (c/tag "get") 0)
(c/param (c/tag "get") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "get") 0) c/no-args
) empty-list c/no-symbol ""))})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity134")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity134") 0)])
(c/param (c/tag "fn-arity134") 1)]
c/no-tail)
;; returns
(c/multi [(c/param (c/tag "fn-arity134") 0)
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity134") 0) c/no-args
) empty-list c/no-symbol "")]))})
c/BitmapIndexedType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity483")
(c/list-c [(c/multi [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity483") 0)])
(c/param (c/tag "fn-arity483") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity483") 0) c/no-args
) empty-list c/no-symbol ""))})
53 (c/fn-c []
{2 (c/fn-arity
(c/tag "Sorting_get")
(c/list-c [(c/multi [(c/ReifiedConstraint 53 (c/tag "Sorting")
{(c/Field (c/tag ".v")) c/top-type
(c/Field (c/tag ".k")) c/top-type
}
{(c/Field (c/tag ".v")) c/top-type
c/contents c/top-type
(c/Field (c/tag ".k")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "Sorting_get") 0)])
(c/param (c/tag "Sorting_get") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/get-from-op
(c/param (c/tag "Sorting_get") 0)
[(c/param (c/tag "Sorting_get") 1)]
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "Sorting_get") 0) c/no-args
)]) empty-list c/no-symbol ""))})
55 (c/fn-c []
{2 (c/fn-arity
(c/tag "RecurseWith_get")
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "RecurseWith_get") 0)])
(c/param (c/tag "RecurseWith_get") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/get-from-op
(c/param (c/tag "RecurseWith_get") 0)
[(c/param (c/tag "RecurseWith_get") 1)]
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "RecurseWith_get") 0) c/no-args
)]) empty-list c/no-symbol ""))})
c/HashCollisionNodeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity481")
(c/list-c [(c/multi [(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity481") 0)])
(c/param (c/tag "fn-arity481") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity481") 0) c/no-args
) empty-list c/no-symbol ""))})
56 (c/fn-c []
{2 (c/fn-arity
(c/tag "RecurseFinal_get")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "RecurseFinal_get") 0)])
(c/param (c/tag "RecurseFinal_get") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/get-from-op
(c/param (c/tag "RecurseFinal_get") 0)
[(c/param (c/tag "RecurseFinal_get") 1)]
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "RecurseFinal_get") 0) c/no-args
)]) empty-list c/no-symbol ""))})
c/ArrayNodeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity482")
(c/list-c [(c/multi [(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity482") 0)])
(c/param (c/tag "fn-arity482") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity482") 0) c/no-args
) empty-list c/no-symbol ""))})
c/VectorType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity86")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity86") 0)])
(c/multi [c/int-constraint
(c/IntConstraint c/no-int 2147483647 0)
(c/param (c/tag "fn-arity86") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity86") 0) c/no-args
) empty-list c/no-symbol ""))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity269")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity269") 0)])
(c/multi [c/int-constraint
(c/param (c/tag "fn-arity269") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity269") 0) c/no-args
) empty-list c/no-symbol ""))})})
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity643") 0)
[(c/Field (c/tag ".set-map"))]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])])
(c/param (c/tag "fn-arity643") 1)]
))})
 empty-list c/no-symbol ""))})
c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
55 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity552")
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity552") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity552") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity552") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity553") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity552") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity551")
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity551") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity551") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity551") 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
55 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity552")
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity552") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity552") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity552") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity553") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity552") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol ""))})
c/FutureType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity368")
(c/list-c [(c/multi [(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity368") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity368") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
c/PromiseType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity347")
(c/list-c [(c/multi [c/promise-constraint
(c/param (c/tag "fn-arity347") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity347") 1)])]
c/no-tail)
;; returns
c/promise-constraint)})
56 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity549")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity549") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity549") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity549") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity548")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity548") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity548") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity548") 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/FutureType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity368")
(c/list-c [(c/multi [(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity368") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity368") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
c/PromiseType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity347")
(c/list-c [(c/multi [c/promise-constraint
(c/param (c/tag "fn-arity347") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity347") 1)])]
c/no-tail)
;; returns
c/promise-constraint)})
56 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity549")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity549") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity549") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity549") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol ""))})
c/VectorType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity304")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity304") 1)
0
))
(c/param (c/tag "fn-arity304") 0)
(c/vect-c [] (c/coll-of-c c/top-type))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity304") 1)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/type-op c/call-value-op
(c/param (c/tag "fn-arity304") 1) c/no-args
)))), 3 (c/fn-arity
(c/tag "fn-arity303")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity303") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 2)])]
c/no-tail)
;; returns
c/top-type)})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)])))), 3 (c/fn-arity
(c/tag "fn-arity163")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity163") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)])
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity548") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity548") 0)
[(c/Field (c/tag ".x"))]
)])]
)
(c/ReifiedConstraint 59 (c/tag "* RecurseFinal constructor at core: 2585 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag "* RecurseFinal constructor at core: 2585 *")
(c/seq-c [c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "RecurseFinal")
{}
{(c/Field (c/tag ".x")) (c/param (c/tag "* RecurseFinal constructor at core: 2585 *") 1)
c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")]
))})
c/VectorType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity304")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity304") 1)
0
))
(c/param (c/tag "fn-arity304") 0)
(c/vect-c [] (c/coll-of-c c/top-type))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity304") 1)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/type-op c/call-value-op
(c/param (c/tag "fn-arity304") 1) c/no-args
)))), 3 (c/fn-arity
(c/tag "fn-arity303")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity303") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 2)])]
c/no-tail)
;; returns
c/top-type)})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)])))), 3 (c/fn-arity
(c/tag "fn-arity163")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity163") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)])
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity551") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity553") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity552") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity551") 0)
[(c/Field (c/tag ".x"))]
)])]
)
(c/ReifiedConstraint 60 (c/tag "* RecurseWith constructor at core: 2597 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag "* RecurseWith constructor at core: 2597 *")
(c/seq-c [c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "RecurseWith")
{}
{(c/Field (c/tag ".x")) (c/param (c/tag "* RecurseWith constructor at core: 2597 *") 1)
c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")]
))})
c/FutureType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity368")
(c/list-c [(c/multi [(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity368") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity368") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
c/PromiseType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity347")
(c/list-c [(c/multi [c/promise-constraint
(c/param (c/tag "fn-arity347") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity347") 1)])]
c/no-tail)
;; returns
c/promise-constraint)})
56 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity549")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity549") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity549") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity549") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity548")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity548") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity548") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity548") 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/FutureType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity368")
(c/list-c [(c/multi [(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity368") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity368") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
c/PromiseType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity347")
(c/list-c [(c/multi [c/promise-constraint
(c/param (c/tag "fn-arity347") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity347") 1)])]
c/no-tail)
;; returns
c/promise-constraint)})
56 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity549")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity549") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity549") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity549") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol ""))})
c/VectorType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity304")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity304") 1)
0
))
(c/param (c/tag "fn-arity304") 0)
(c/vect-c [] (c/coll-of-c c/top-type))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity304") 1)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/type-op c/call-value-op
(c/param (c/tag "fn-arity304") 1) c/no-args
)))), 3 (c/fn-arity
(c/tag "fn-arity303")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity303") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 2)])]
c/no-tail)
;; returns
c/top-type)})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)])))), 3 (c/fn-arity
(c/tag "fn-arity163")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity163") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)])
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity548") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity548") 0)
[(c/Field (c/tag ".x"))]
)])]
)
(c/ReifiedConstraint 59 (c/tag "* RecurseFinal constructor at core: 2585 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag "* RecurseFinal constructor at core: 2585 *")
(c/seq-c [c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "RecurseFinal")
{}
{(c/Field (c/tag ".x")) (c/param (c/tag "* RecurseFinal constructor at core: 2585 *") 1)
c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")]
))})
c/VectorType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity304")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity304") 1)
0
))
(c/param (c/tag "fn-arity304") 0)
(c/vect-c [] (c/coll-of-c c/top-type))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity304") 1)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/type-op c/call-value-op
(c/param (c/tag "fn-arity304") 1) c/no-args
)))), 3 (c/fn-arity
(c/tag "fn-arity303")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity303") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 2)])]
c/no-tail)
;; returns
c/top-type)})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)])))), 3 (c/fn-arity
(c/tag "fn-arity163")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity163") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)])
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)]))})})
[(c/param (c/tag "fn-arity763") 0)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity120")
(c/seq-c [(c/multi [c/int-constraint
(c/param (c/tag "fn-arity120") 0)])]
c/no-tail)
;; returns
c/int-constraint)})]
))}) 

 arg-cs [(c/list-c []
c/no-tail)] 

 result-type (c/NoValues [c/int-constraint
(c/SymConstraint bogus)]) 

 Conflicting assertions (1157)  at assertion-tests/contents-2.toc: 10
Integer from:    Symbol bogusfrom:
core: 1208       contents-2.toc: 3
core: 1210       contents-2.toc: 4
core: 95                          
core: 97                          
                                  
                                  


***  site 1151 assertion-tests/dynamic-call-9.toc: 6 
 (f (reify c/no-int 
{Function {invoke [invoke [x y]
(inc y)]}})) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity775")
(c/seq-c [(c/param (c/tag "fn-arity775") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity775") 0)
[(c/SymConstraint a)]
))}) 

 arg-cs [(c/ReifiedConstraint 123 (c/tag "reified value at assertion-tests/dynamic-call-9.toc: 7")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity776")
(c/seq-c [(c/param (c/tag "fn-arity776") 0)
(c/multi [c/int-constraint
(c/param (c/tag "fn-arity776") 1)])]
c/no-tail)
;; returns
c/int-constraint)})
 empty-list c/no-symbol "")] 

 result-type (c/NoValues [c/int-constraint
(c/SymConstraint a)]) 

 Conflicting assertions (1157)  at assertion-tests/dynamic-call-9.toc: 6
Integer from:    Symbol afrom:        
core: 1208       dynamic-call-9.toc: 3
core: 1210                            
core: 95                              
core: 97                              
                                      
                                      


***  site 1151 assertion-tests/dynamic-call-7.toc: 12 
 (inc (g (f 77))) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity120")
(c/seq-c [(c/multi [c/int-constraint
(c/param (c/tag "fn-arity120") 0)])]
c/no-tail)
;; returns
c/int-constraint)}) 

 arg-cs [c/strbuff-constraint] 

 result-type (c/NoValues [c/int-constraint
c/strbuff-constraint]) 

 Conflicting assertions (1157)  at assertion-tests/dynamic-call-7.toc: 12
Integer from:    String from:         
core: 1210       dynamic-call-7.toc: 5
core: 95         dynamic-call-7.toc: 9
core: 97         core: 1719           
                 core: 1722           
                 core: 22             
                                      
                                      


***  site 1151 assertion-tests/dynamic-field-type-12.toc: 8 
 (inc (.x (f (RecurseFinal 'a)))) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity120")
(c/seq-c [(c/multi [c/int-constraint
(c/param (c/tag "fn-arity120") 0)])]
c/no-tail)
;; returns
c/int-constraint)}) 

 arg-cs [(c/StrBuffConstraint stringempty-list c/no-symbol "")] 

 result-type (c/NoValues [c/int-constraint
(c/StrBuffConstraint stringempty-list c/no-symbol "")]) 

 Conflicting assertions (1157)  at assertion-tests/dynamic-field-type-12.toc: 8
Integer from:    String stringfrom:          
core: 1210       dynamic-field-type-12.toc: 2
core: 95                                     
core: 97                                     
                                             
                                             


***  site 1151 assertion-tests/dynamic-call-2.toc: 13 
 (inc (g f)) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity120")
(c/seq-c [(c/multi [c/int-constraint
(c/param (c/tag "fn-arity120") 0)])]
c/no-tail)
;; returns
c/int-constraint)}) 

 arg-cs [c/strbuff-constraint] 

 result-type (c/NoValues [c/int-constraint
c/strbuff-constraint]) 

 Conflicting assertions (1157)  at assertion-tests/dynamic-call-2.toc: 13
Integer from:    String from:          
core: 1210       dynamic-call-2.toc: 9 
core: 95         dynamic-call-2.toc: 10
core: 97         core: 1719            
                 core: 1722            
                 core: 22              
                                       
                                       


***  site 1151 assertion-tests/dynamic-call-5.toc: 11 
 (map (g f) inc) 

 target-c (c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/HashSetType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity630")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity630") 1)
0
))
(c/param (c/tag "fn-arity630") 0)
(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity630") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
c/contents (c/type-op c/call-value-op
(c/param (c/tag "fn-arity630") 1) c/no-args
)
}
(c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity643")
(c/seq-c [(c/multi [(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity643") 0)])
(c/param (c/tag "fn-arity643") 1)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "get")
(c/fn-c []
{2 (c/fn-arity
(c/tag "get")
(c/list-c [(c/param (c/tag "get") 0)
(c/param (c/tag "get") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "get") 0) c/no-args
) empty-list c/no-symbol ""))})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity134")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity134") 0)])
(c/param (c/tag "fn-arity134") 1)]
c/no-tail)
;; returns
(c/multi [(c/param (c/tag "fn-arity134") 0)
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity134") 0) c/no-args
) empty-list c/no-symbol "")]))})
c/BitmapIndexedType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity483")
(c/list-c [(c/multi [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity483") 0)])
(c/param (c/tag "fn-arity483") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity483") 0) c/no-args
) empty-list c/no-symbol ""))})
53 (c/fn-c []
{2 (c/fn-arity
(c/tag "Sorting_get")
(c/list-c [(c/multi [(c/ReifiedConstraint 53 (c/tag "Sorting")
{(c/Field (c/tag ".v")) c/top-type
(c/Field (c/tag ".k")) c/top-type
}
{(c/Field (c/tag ".v")) c/top-type
c/contents c/top-type
(c/Field (c/tag ".k")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "Sorting_get") 0)])
(c/param (c/tag "Sorting_get") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/get-from-op
(c/param (c/tag "Sorting_get") 0)
[(c/param (c/tag "Sorting_get") 1)]
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "Sorting_get") 0) c/no-args
)]) empty-list c/no-symbol ""))})
55 (c/fn-c []
{2 (c/fn-arity
(c/tag "RecurseWith_get")
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "RecurseWith_get") 0)])
(c/param (c/tag "RecurseWith_get") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/get-from-op
(c/param (c/tag "RecurseWith_get") 0)
[(c/param (c/tag "RecurseWith_get") 1)]
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "RecurseWith_get") 0) c/no-args
)]) empty-list c/no-symbol ""))})
c/HashCollisionNodeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity481")
(c/list-c [(c/multi [(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity481") 0)])
(c/param (c/tag "fn-arity481") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity481") 0) c/no-args
) empty-list c/no-symbol ""))})
56 (c/fn-c []
{2 (c/fn-arity
(c/tag "RecurseFinal_get")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "RecurseFinal_get") 0)])
(c/param (c/tag "RecurseFinal_get") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/get-from-op
(c/param (c/tag "RecurseFinal_get") 0)
[(c/param (c/tag "RecurseFinal_get") 1)]
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "RecurseFinal_get") 0) c/no-args
)]) empty-list c/no-symbol ""))})
c/ArrayNodeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity482")
(c/list-c [(c/multi [(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity482") 0)])
(c/param (c/tag "fn-arity482") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity482") 0) c/no-args
) empty-list c/no-symbol ""))})
c/VectorType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity86")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity86") 0)])
(c/multi [c/int-constraint
(c/IntConstraint c/no-int 2147483647 0)
(c/param (c/tag "fn-arity86") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity86") 0) c/no-args
) empty-list c/no-symbol ""))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity269")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity269") 0)])
(c/multi [c/int-constraint
(c/param (c/tag "fn-arity269") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity269") 0) c/no-args
) empty-list c/no-symbol ""))})})
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity643") 0)
[(c/Field (c/tag ".set-map"))]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])])
(c/param (c/tag "fn-arity643") 1)]
))})
 empty-list c/no-symbol ""))})
c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
55 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity552")
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity552") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity552") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity552") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity553") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity552") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity551")
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity551") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity551") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity551") 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
55 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity552")
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity552") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity552") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity552") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity553") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity552") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol ""))})
c/FutureType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity368")
(c/list-c [(c/multi [(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity368") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity368") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
c/PromiseType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity347")
(c/list-c [(c/multi [c/promise-constraint
(c/param (c/tag "fn-arity347") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity347") 1)])]
c/no-tail)
;; returns
c/promise-constraint)})
56 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity549")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity549") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity549") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity549") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity548")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity548") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity548") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity548") 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/FutureType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity368")
(c/list-c [(c/multi [(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity368") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity368") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
c/PromiseType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity347")
(c/list-c [(c/multi [c/promise-constraint
(c/param (c/tag "fn-arity347") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity347") 1)])]
c/no-tail)
;; returns
c/promise-constraint)})
56 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity549")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity549") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity549") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity549") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol ""))})
c/VectorType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity304")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity304") 1)
0
))
(c/param (c/tag "fn-arity304") 0)
(c/vect-c [] (c/coll-of-c c/top-type))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity304") 1)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/type-op c/call-value-op
(c/param (c/tag "fn-arity304") 1) c/no-args
)))), 3 (c/fn-arity
(c/tag "fn-arity303")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity303") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 2)])]
c/no-tail)
;; returns
c/top-type)})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)])))), 3 (c/fn-arity
(c/tag "fn-arity163")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity163") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)])
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity548") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity548") 0)
[(c/Field (c/tag ".x"))]
)])]
)
(c/ReifiedConstraint 59 (c/tag "* RecurseFinal constructor at core: 2585 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag "* RecurseFinal constructor at core: 2585 *")
(c/seq-c [c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "RecurseFinal")
{}
{(c/Field (c/tag ".x")) (c/param (c/tag "* RecurseFinal constructor at core: 2585 *") 1)
c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")]
))})
c/VectorType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity304")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity304") 1)
0
))
(c/param (c/tag "fn-arity304") 0)
(c/vect-c [] (c/coll-of-c c/top-type))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity304") 1)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/type-op c/call-value-op
(c/param (c/tag "fn-arity304") 1) c/no-args
)))), 3 (c/fn-arity
(c/tag "fn-arity303")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity303") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 2)])]
c/no-tail)
;; returns
c/top-type)})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)])))), 3 (c/fn-arity
(c/tag "fn-arity163")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity163") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)])
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity551") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity553") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity552") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity551") 0)
[(c/Field (c/tag ".x"))]
)])]
)
(c/ReifiedConstraint 60 (c/tag "* RecurseWith constructor at core: 2597 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag "* RecurseWith constructor at core: 2597 *")
(c/seq-c [c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "RecurseWith")
{}
{(c/Field (c/tag ".x")) (c/param (c/tag "* RecurseWith constructor at core: 2597 *") 1)
c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")]
))})
c/FutureType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity368")
(c/list-c [(c/multi [(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity368") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity368") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
c/PromiseType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity347")
(c/list-c [(c/multi [c/promise-constraint
(c/param (c/tag "fn-arity347") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity347") 1)])]
c/no-tail)
;; returns
c/promise-constraint)})
56 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity549")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity549") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity549") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity549") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity548")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity548") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity548") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity548") 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/FutureType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity368")
(c/list-c [(c/multi [(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity368") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity368") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
c/PromiseType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity347")
(c/list-c [(c/multi [c/promise-constraint
(c/param (c/tag "fn-arity347") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity347") 1)])]
c/no-tail)
;; returns
c/promise-constraint)})
56 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity549")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity549") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity549") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity549") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol ""))})
c/VectorType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity304")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity304") 1)
0
))
(c/param (c/tag "fn-arity304") 0)
(c/vect-c [] (c/coll-of-c c/top-type))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity304") 1)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/type-op c/call-value-op
(c/param (c/tag "fn-arity304") 1) c/no-args
)))), 3 (c/fn-arity
(c/tag "fn-arity303")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity303") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 2)])]
c/no-tail)
;; returns
c/top-type)})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)])))), 3 (c/fn-arity
(c/tag "fn-arity163")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity163") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)])
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity548") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity548") 0)
[(c/Field (c/tag ".x"))]
)])]
)
(c/ReifiedConstraint 59 (c/tag "* RecurseFinal constructor at core: 2585 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag "* RecurseFinal constructor at core: 2585 *")
(c/seq-c [c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "RecurseFinal")
{}
{(c/Field (c/tag ".x")) (c/param (c/tag "* RecurseFinal constructor at core: 2585 *") 1)
c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")]
))})
c/VectorType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity304")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity304") 1)
0
))
(c/param (c/tag "fn-arity304") 0)
(c/vect-c [] (c/coll-of-c c/top-type))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity304") 1)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/type-op c/call-value-op
(c/param (c/tag "fn-arity304") 1) c/no-args
)))), 3 (c/fn-arity
(c/tag "fn-arity303")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity303") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 2)])]
c/no-tail)
;; returns
c/top-type)})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)])))), 3 (c/fn-arity
(c/tag "fn-arity163")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity163") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)])
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)]))})}) 

 arg-cs [(c/vect-c [(c/SymConstraint a)]
c/no-tail), (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity120")
(c/seq-c [(c/multi [c/int-constraint
(c/param (c/tag "fn-arity120") 0)])]
c/no-tail)
;; returns
c/int-constraint)})] 

 result-type (c/NoValues [c/int-constraint
(c/SymConstraint a)]) 

 Conflicting assertions (1157)  at assertion-tests/dynamic-call-5.toc: 11
Integer from:    Symbol afrom:        
core: 1210       dynamic-call-5.toc: 2
core: 95         dynamic-call-5.toc: 5
core: 97                              
                                      
                                      


***  site 1151 assertion-tests/dynamic-call-6.toc: 12 
 (map (g f) inc) 

 target-c (c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/HashSetType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity630")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity630") 1)
0
))
(c/param (c/tag "fn-arity630") 0)
(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity630") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
c/contents (c/type-op c/call-value-op
(c/param (c/tag "fn-arity630") 1) c/no-args
)
}
(c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity643")
(c/seq-c [(c/multi [(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity643") 0)])
(c/param (c/tag "fn-arity643") 1)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "get")
(c/fn-c []
{2 (c/fn-arity
(c/tag "get")
(c/list-c [(c/param (c/tag "get") 0)
(c/param (c/tag "get") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "get") 0) c/no-args
) empty-list c/no-symbol ""))})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity134")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity134") 0)])
(c/param (c/tag "fn-arity134") 1)]
c/no-tail)
;; returns
(c/multi [(c/param (c/tag "fn-arity134") 0)
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity134") 0) c/no-args
) empty-list c/no-symbol "")]))})
c/BitmapIndexedType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity483")
(c/list-c [(c/multi [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity483") 0)])
(c/param (c/tag "fn-arity483") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity483") 0) c/no-args
) empty-list c/no-symbol ""))})
53 (c/fn-c []
{2 (c/fn-arity
(c/tag "Sorting_get")
(c/list-c [(c/multi [(c/ReifiedConstraint 53 (c/tag "Sorting")
{(c/Field (c/tag ".v")) c/top-type
(c/Field (c/tag ".k")) c/top-type
}
{(c/Field (c/tag ".v")) c/top-type
c/contents c/top-type
(c/Field (c/tag ".k")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "Sorting_get") 0)])
(c/param (c/tag "Sorting_get") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/get-from-op
(c/param (c/tag "Sorting_get") 0)
[(c/param (c/tag "Sorting_get") 1)]
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "Sorting_get") 0) c/no-args
)]) empty-list c/no-symbol ""))})
55 (c/fn-c []
{2 (c/fn-arity
(c/tag "RecurseWith_get")
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "RecurseWith_get") 0)])
(c/param (c/tag "RecurseWith_get") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/get-from-op
(c/param (c/tag "RecurseWith_get") 0)
[(c/param (c/tag "RecurseWith_get") 1)]
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "RecurseWith_get") 0) c/no-args
)]) empty-list c/no-symbol ""))})
c/HashCollisionNodeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity481")
(c/list-c [(c/multi [(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity481") 0)])
(c/param (c/tag "fn-arity481") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity481") 0) c/no-args
) empty-list c/no-symbol ""))})
56 (c/fn-c []
{2 (c/fn-arity
(c/tag "RecurseFinal_get")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "RecurseFinal_get") 0)])
(c/param (c/tag "RecurseFinal_get") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/get-from-op
(c/param (c/tag "RecurseFinal_get") 0)
[(c/param (c/tag "RecurseFinal_get") 1)]
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "RecurseFinal_get") 0) c/no-args
)]) empty-list c/no-symbol ""))})
c/ArrayNodeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity482")
(c/list-c [(c/multi [(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity482") 0)])
(c/param (c/tag "fn-arity482") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity482") 0) c/no-args
) empty-list c/no-symbol ""))})
c/VectorType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity86")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity86") 0)])
(c/multi [c/int-constraint
(c/IntConstraint c/no-int 2147483647 0)
(c/param (c/tag "fn-arity86") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity86") 0) c/no-args
) empty-list c/no-symbol ""))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity269")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity269") 0)])
(c/multi [c/int-constraint
(c/param (c/tag "fn-arity269") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity269") 0) c/no-args
) empty-list c/no-symbol ""))})})
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity643") 0)
[(c/Field (c/tag ".set-map"))]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])])
(c/param (c/tag "fn-arity643") 1)]
))})
 empty-list c/no-symbol ""))})
c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
55 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity552")
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity552") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity552") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity552") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity553") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity552") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity551")
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity551") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity551") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity551") 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
55 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity552")
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity552") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity552") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity552") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity553") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity552") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol ""))})
c/FutureType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity368")
(c/list-c [(c/multi [(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity368") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity368") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
c/PromiseType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity347")
(c/list-c [(c/multi [c/promise-constraint
(c/param (c/tag "fn-arity347") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity347") 1)])]
c/no-tail)
;; returns
c/promise-constraint)})
56 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity549")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity549") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity549") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity549") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity548")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity548") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity548") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity548") 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/FutureType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity368")
(c/list-c [(c/multi [(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity368") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity368") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
c/PromiseType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity347")
(c/list-c [(c/multi [c/promise-constraint
(c/param (c/tag "fn-arity347") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity347") 1)])]
c/no-tail)
;; returns
c/promise-constraint)})
56 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity549")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity549") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity549") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity549") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol ""))})
c/VectorType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity304")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity304") 1)
0
))
(c/param (c/tag "fn-arity304") 0)
(c/vect-c [] (c/coll-of-c c/top-type))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity304") 1)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/type-op c/call-value-op
(c/param (c/tag "fn-arity304") 1) c/no-args
)))), 3 (c/fn-arity
(c/tag "fn-arity303")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity303") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 2)])]
c/no-tail)
;; returns
c/top-type)})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)])))), 3 (c/fn-arity
(c/tag "fn-arity163")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity163") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)])
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity548") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity548") 0)
[(c/Field (c/tag ".x"))]
)])]
)
(c/ReifiedConstraint 59 (c/tag "* RecurseFinal constructor at core: 2585 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag "* RecurseFinal constructor at core: 2585 *")
(c/seq-c [c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "RecurseFinal")
{}
{(c/Field (c/tag ".x")) (c/param (c/tag "* RecurseFinal constructor at core: 2585 *") 1)
c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")]
))})
c/VectorType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity304")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity304") 1)
0
))
(c/param (c/tag "fn-arity304") 0)
(c/vect-c [] (c/coll-of-c c/top-type))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity304") 1)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/type-op c/call-value-op
(c/param (c/tag "fn-arity304") 1) c/no-args
)))), 3 (c/fn-arity
(c/tag "fn-arity303")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity303") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 2)])]
c/no-tail)
;; returns
c/top-type)})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)])))), 3 (c/fn-arity
(c/tag "fn-arity163")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity163") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)])
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity551") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity553") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity552") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity551") 0)
[(c/Field (c/tag ".x"))]
)])]
)
(c/ReifiedConstraint 60 (c/tag "* RecurseWith constructor at core: 2597 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag "* RecurseWith constructor at core: 2597 *")
(c/seq-c [c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "RecurseWith")
{}
{(c/Field (c/tag ".x")) (c/param (c/tag "* RecurseWith constructor at core: 2597 *") 1)
c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")]
))})
c/FutureType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity368")
(c/list-c [(c/multi [(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity368") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity368") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
c/PromiseType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity347")
(c/list-c [(c/multi [c/promise-constraint
(c/param (c/tag "fn-arity347") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity347") 1)])]
c/no-tail)
;; returns
c/promise-constraint)})
56 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity549")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity549") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity549") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity549") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity548")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity548") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity548") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity548") 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/FutureType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity368")
(c/list-c [(c/multi [(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity368") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity368") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
c/PromiseType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity347")
(c/list-c [(c/multi [c/promise-constraint
(c/param (c/tag "fn-arity347") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity347") 1)])]
c/no-tail)
;; returns
c/promise-constraint)})
56 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity549")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity549") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity549") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity549") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol ""))})
c/VectorType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity304")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity304") 1)
0
))
(c/param (c/tag "fn-arity304") 0)
(c/vect-c [] (c/coll-of-c c/top-type))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity304") 1)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/type-op c/call-value-op
(c/param (c/tag "fn-arity304") 1) c/no-args
)))), 3 (c/fn-arity
(c/tag "fn-arity303")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity303") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 2)])]
c/no-tail)
;; returns
c/top-type)})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)])))), 3 (c/fn-arity
(c/tag "fn-arity163")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity163") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)])
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity548") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity548") 0)
[(c/Field (c/tag ".x"))]
)])]
)
(c/ReifiedConstraint 59 (c/tag "* RecurseFinal constructor at core: 2585 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag "* RecurseFinal constructor at core: 2585 *")
(c/seq-c [c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "RecurseFinal")
{}
{(c/Field (c/tag ".x")) (c/param (c/tag "* RecurseFinal constructor at core: 2585 *") 1)
c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")]
))})
c/VectorType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity304")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity304") 1)
0
))
(c/param (c/tag "fn-arity304") 0)
(c/vect-c [] (c/coll-of-c c/top-type))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity304") 1)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/type-op c/call-value-op
(c/param (c/tag "fn-arity304") 1) c/no-args
)))), 3 (c/fn-arity
(c/tag "fn-arity303")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity303") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 2)])]
c/no-tail)
;; returns
c/top-type)})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)])))), 3 (c/fn-arity
(c/tag "fn-arity163")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity163") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)])
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)]))})}) 

 arg-cs [(c/vect-c [(c/SymConstraint a)]
c/no-tail), (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity120")
(c/seq-c [(c/multi [c/int-constraint
(c/param (c/tag "fn-arity120") 0)])]
c/no-tail)
;; returns
c/int-constraint)})] 

 result-type (c/NoValues [c/int-constraint
(c/SymConstraint a)]) 

 Conflicting assertions (1157)  at assertion-tests/dynamic-call-6.toc: 12
Integer from:    Symbol afrom:        
core: 1210       dynamic-call-6.toc: 2
core: 95         dynamic-call-6.toc: 3
core: 97                              
                                      
                                      


*** Conflicting assertions (528)  at assertion-tests/bad-return-value.toc: 16
Maybe from:    Vector from:           
               bad-return-value.toc: 6
                                      
                                      


***  site 1151 assertion-tests/constructor-param-1.toc: 7 
 (SomeType (str 'symbol) "9") 

 target-c (c/ReifiedConstraint 119 (c/tag "* SomeType constructor at assertion-tests/constructor-param-1.toc: 2 *")
{}
{}
(c/fn-c []
{3 (c/fn-arity
(c/tag "* SomeType constructor at assertion-tests/constructor-param-1.toc: 2 *")
(c/seq-c [c/top-type
c/sym-constraint
(c/sum-c [c/strbuff-constraint
c/substr-constraint])]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "SomeType")
{}
{c/contents c/top-type
(c/Field (c/tag ".a")) (c/multi [c/sym-constraint
(c/param (c/tag "* SomeType constructor at assertion-tests/constructor-param-1.toc: 2 *") 1)])
(c/Field (c/tag ".b")) (c/multi [(c/sum-c [c/strbuff-constraint
c/substr-constraint])
(c/param (c/tag "* SomeType constructor at assertion-tests/constructor-param-1.toc: 2 *") 2)])
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "") 

 arg-cs [c/strbuff-constraint, (c/StrBuffConstraint 9empty-list c/no-symbol "")] 

 result-type (c/NoValues [c/sym-constraint
c/strbuff-constraint]) 

 Conflicting assertions (1157)  at assertion-tests/constructor-param-1.toc: 7
Symbol from:    String from:
                core: 1719  
                core: 1722  
                core: 22    
                            
                            


***  site 1151 assertion-tests/bad-setter-call-1.toc: 15 
 (.xs (Boogie (vector 1 2 3)) (vector 1 2 'plop)) 

 target-c (c/ProtoImpls
(c/tag ".xs")
(c/fn-c []
{2 (c/fn-arity
(c/tag ".xs_setter")
(c/seq-c [(c/multi [(c/param (c/tag ".xs_setter") 0)
(c/ReifiedConstraint 0 (c/tag "field 'xs' required")
{}
{(c/Field (c/tag ".xs")) c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
(c/param (c/tag ".xs_setter") 1)]
c/no-tail)
;; returns
(c/type-op c/set-to-op
(c/param (c/tag ".xs_setter") 0)
[[(c/Field (c/tag ".xs"))]
(c/param (c/tag ".xs_setter") 1)]
)), 1 (c/fn-arity
(c/tag ".xs_getter")
(c/seq-c [(c/multi [(c/param (c/tag ".xs_getter") 0)
(c/ReifiedConstraint 0 (c/tag "field 'xs' required")
{}
{(c/Field (c/tag ".xs")) c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])]
c/no-tail)
;; returns
(c/type-op c/get-from-op
(c/param (c/tag ".xs_getter") 0)
[(c/Field (c/tag ".xs"))]
))})

{128 (c/fn-c []
{2 (c/fn-arity
(c/tag "Boogie-.xs-setter")
(c/seq-c [(c/multi [(c/param (c/tag "Boogie-.xs-setter") 0)
(c/ReifiedConstraint 128 (c/tag "Boogie")
{(c/Field (c/tag ".xs")) (c/vect-c [] (c/coll-of-c c/int-constraint))
}
{c/contents c/top-type
(c/Field (c/tag ".xs")) (c/vect-c [] (c/coll-of-c c/int-constraint))
}
c/fn-constraint
 empty-list c/no-symbol "")])
(c/multi [(c/param (c/tag "Boogie-.xs-setter") 1)
(c/vect-c [] (c/coll-of-c c/int-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/set-to-op
(c/param (c/tag "Boogie-.xs-setter") 0)
[[(c/Field (c/tag ".xs"))]
(c/param (c/tag "Boogie-.xs-setter") 1)]
)])), 1 (c/fn-arity
(c/tag "Boogie-.xs-getter")
(c/seq-c [(c/multi [(c/param (c/tag "Boogie-.xs-getter") 0)
(c/ReifiedConstraint 128 (c/tag "Boogie")
{(c/Field (c/tag ".xs")) (c/vect-c [] (c/coll-of-c c/int-constraint))
}
{c/contents c/top-type
(c/Field (c/tag ".xs")) (c/vect-c [] (c/coll-of-c c/int-constraint))
}
c/fn-constraint
 empty-list c/no-symbol "")])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "Boogie-.xs-getter") 0)
[(c/Field (c/tag ".xs"))]
)
(c/vect-c [] (c/coll-of-c c/int-constraint))]))})}) 

 arg-cs [(c/ReifiedConstraint 128 (c/tag "Boogie")
{(c/Field (c/tag ".xs")) (c/vect-c [] (c/coll-of-c c/int-constraint))
}
{c/contents c/top-type
(c/Field (c/tag ".xs")) (c/vect-c [(c/IntConstraint 1 2147483647 -2147483648)
(c/IntConstraint 2 2147483647 -2147483648)
(c/IntConstraint 3 2147483647 -2147483648)]
c/no-tail)
}
c/fn-constraint
 empty-list c/no-symbol ""), (c/vect-c [(c/IntConstraint 1 2147483647 -2147483648)
(c/IntConstraint 2 2147483647 -2147483648)
(c/SymConstraint plop)]
c/no-tail)] 

 result-type (c/NoValues [c/int-constraint
(c/SymConstraint plop)]) 

 Conflicting assertions (1157)  at assertion-tests/bad-setter-call-1.toc: 15
Integer from:    Symbol plopfrom:
                                 
                                 


***  site 1151 assertion-tests/constructor-param-2.toc: 10 
 (f (str 'symbol)) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity791")
(c/seq-c [(c/multi [c/sym-constraint
(c/param (c/tag "fn-arity791") 0)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 116 (c/tag "SomeType")
{(c/Field (c/tag ".a")) c/sym-constraint
(c/Field (c/tag ".b")) (c/sum-c [c/strbuff-constraint
c/substr-constraint])
}
{c/contents c/top-type
(c/Field (c/tag ".a")) (c/multi [c/sym-constraint
(c/param (c/tag "fn-arity791") 0)])
(c/Field (c/tag ".b")) (c/StrBuffConstraint 9empty-list c/no-symbol "")
}
c/fn-constraint
 empty-list c/no-symbol ""))}) 

 arg-cs [c/strbuff-constraint] 

 result-type (c/NoValues [c/sym-constraint
c/strbuff-constraint]) 

 Conflicting assertions (1157)  at assertion-tests/constructor-param-2.toc: 10
Symbol from:                  String from:
constructor-param-2.toc: 7    core: 1719  
constructor-param-2.toc: 3    core: 1722  
                              core: 22    
                                          
                                          


***  site 1151 assertion-tests/dynamic-field-type-15.toc: 13 
 (inc (.y (f (AType 'a 'b)))) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity120")
(c/seq-c [(c/multi [c/int-constraint
(c/param (c/tag "fn-arity120") 0)])]
c/no-tail)
;; returns
c/int-constraint)}) 

 arg-cs [(c/StrBuffConstraint stringempty-list c/no-symbol "")] 

 result-type (c/NoValues [c/int-constraint
(c/StrBuffConstraint stringempty-list c/no-symbol "")]) 

 Conflicting assertions (1157)  at assertion-tests/dynamic-field-type-15.toc: 13
Integer from:    String stringfrom:          
core: 1210       dynamic-field-type-15.toc: 4
core: 95                                     
core: 97                                     
                                             
                                             


***  site 1151 assertion-tests/constructor-param-3.toc: 10 
 (f (vector )) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity793")
(c/seq-c [(c/multi [(c/seq-c [c/top-type]
(c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity793") 0)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 120 (c/tag "SomeType")
{(c/Field (c/tag ".a")) (c/seq-c [c/top-type]
(c/coll-of-c c/top-type))
(c/Field (c/tag ".b")) (c/sum-c [c/strbuff-constraint
c/substr-constraint])
}
{c/contents c/top-type
(c/Field (c/tag ".a")) (c/multi [(c/seq-c [c/top-type]
(c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity793") 0)])
(c/Field (c/tag ".b")) (c/StrBuffConstraint 9empty-list c/no-symbol "")
}
c/fn-constraint
 empty-list c/no-symbol ""))}) 

 arg-cs [(c/vect-c [] c/no-tail)] 

 result-type (c/NoValues [c/no-tail
(c/ReifiedConstraint 0 (c/tag "Can not contain other values")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")]) 

 Conflicting assertions (1157)  at assertion-tests/constructor-param-3.toc: 10
No Tail for sequence    Can not contain other valuesfrom:


*** Loaded assertion-tests/bad-type-comp.toc

***  site 1151 assertion-tests/dynamic-field-type-5.toc: 9 
 (inc (.x (f (RecurseWith 9) 'q))) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity120")
(c/seq-c [(c/multi [c/int-constraint
(c/param (c/tag "fn-arity120") 0)])]
c/no-tail)
;; returns
c/int-constraint)}) 

 arg-cs [(c/SymConstraint q)] 

 result-type (c/NoValues [c/int-constraint
(c/SymConstraint q)]) 

 Conflicting assertions (1157)  at assertion-tests/dynamic-field-type-5.toc: 9
Integer from:    Symbol qfrom:              
core: 1210       dynamic-field-type-5.toc: 7
core: 95                                    
core: 97                                    
                                            
                                            


***  site 1151 assertion-tests/bad-setter-call-2.toc: 15 
 (assoc (Boogie (vector 1 2 3)) .xs (vector 1 2 'plop)) 

 target-c (c/ProtoImpls
(c/tag "assoc")
(c/fn-c []
{3 (c/fn-arity
(c/tag "assoc")
(c/list-c [(c/param (c/tag "assoc") 0)
(c/param (c/tag "assoc") 1)
(c/param (c/tag "assoc") 2)]
c/no-tail)
;; returns
c/top-type)})

{c/HashSetType (c/fn-c []
{3 (c/fn-arity
(c/tag "HashSet_get")
(c/list-c [(c/multi [(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "HashSet_get") 0)])
(c/param (c/tag "HashSet_get") 1)
(c/param (c/tag "HashSet_get") 2)]
c/no-tail)
;; returns
(c/type-op c/set-to-op
(c/param (c/tag "HashSet_get") 0)
[[(c/param (c/tag "HashSet_get") 1)]
(c/param (c/tag "HashSet_get") 2)]
))})
64 (c/fn-c []
{3 (c/fn-arity
(c/tag "LazyList_get")
(c/list-c [(c/multi [(c/ReifiedConstraint 64 (c/tag "LazyList")
{(c/Field (c/tag ".lazy")) (c/list-c [] (c/coll-of-c c/top-type))
(c/Field (c/tag ".tail")) c/top-type
(c/Field (c/tag ".container")) c/top-type
}
{(c/Field (c/tag ".lazy")) (c/list-c [] (c/coll-of-c c/top-type))
(c/Field (c/tag ".tail")) c/top-type
c/contents c/top-type
(c/Field (c/tag ".container")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "LazyList_get") 0)])
(c/param (c/tag "LazyList_get") 1)
(c/param (c/tag "LazyList_get") 2)]
c/no-tail)
;; returns
(c/type-op c/set-to-op
(c/param (c/tag "LazyList_get") 0)
[[(c/param (c/tag "LazyList_get") 1)]
(c/param (c/tag "LazyList_get") 2)]
))})
c/MaybeType (c/fn-c []
{3 (c/fn-arity
(c/tag "fn-arity135")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity135") 0)])
(c/param (c/tag "fn-arity135") 1)
(c/param (c/tag "fn-arity135") 2)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity135") 2) empty-list c/no-symbol ""))})
c/BitmapIndexedType (c/fn-c []
{3 (c/fn-arity
(c/tag "fn-arity486")
(c/list-c [(c/multi [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity486") 0)])
(c/param (c/tag "fn-arity486") 1)
(c/param (c/tag "fn-arity486") 2)]
c/no-tail)
;; returns
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")]))})
134 (c/fn-c []
{3 (c/fn-arity
(c/tag "Boogie_get")
(c/list-c [(c/multi [(c/ReifiedConstraint 134 (c/tag "Boogie")
{(c/Field (c/tag ".xs")) (c/vect-c [] (c/coll-of-c c/int-constraint))
}
{c/contents c/top-type
(c/Field (c/tag ".xs")) (c/vect-c [] (c/coll-of-c c/int-constraint))
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "Boogie_get") 0)])
(c/param (c/tag "Boogie_get") 1)
(c/param (c/tag "Boogie_get") 2)]
c/no-tail)
;; returns
(c/type-op c/set-to-op
(c/param (c/tag "Boogie_get") 0)
[[(c/param (c/tag "Boogie_get") 1)]
(c/param (c/tag "Boogie_get") 2)]
))})
53 (c/fn-c []
{3 (c/fn-arity
(c/tag "Sorting_get")
(c/list-c [(c/multi [(c/ReifiedConstraint 53 (c/tag "Sorting")
{(c/Field (c/tag ".v")) c/top-type
(c/Field (c/tag ".k")) c/top-type
}
{(c/Field (c/tag ".v")) c/top-type
c/contents c/top-type
(c/Field (c/tag ".k")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "Sorting_get") 0)])
(c/param (c/tag "Sorting_get") 1)
(c/param (c/tag "Sorting_get") 2)]
c/no-tail)
;; returns
(c/type-op c/set-to-op
(c/param (c/tag "Sorting_get") 0)
[[(c/param (c/tag "Sorting_get") 1)]
(c/param (c/tag "Sorting_get") 2)]
))})
55 (c/fn-c []
{3 (c/fn-arity
(c/tag "RecurseWith_get")
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "RecurseWith_get") 0)])
(c/param (c/tag "RecurseWith_get") 1)
(c/param (c/tag "RecurseWith_get") 2)]
c/no-tail)
;; returns
(c/type-op c/set-to-op
(c/param (c/tag "RecurseWith_get") 0)
[[(c/param (c/tag "RecurseWith_get") 1)]
(c/param (c/tag "RecurseWith_get") 2)]
))})
c/HashCollisionNodeType (c/fn-c []
{3 (c/fn-arity
(c/tag "fn-arity484")
(c/list-c [(c/multi [(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity484") 0)])
(c/param (c/tag "fn-arity484") 1)
(c/param (c/tag "fn-arity484") 2)]
c/no-tail)
;; returns
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")]))})
56 (c/fn-c []
{3 (c/fn-arity
(c/tag "RecurseFinal_get")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "RecurseFinal_get") 0)])
(c/param (c/tag "RecurseFinal_get") 1)
(c/param (c/tag "RecurseFinal_get") 2)]
c/no-tail)
;; returns
(c/type-op c/set-to-op
(c/param (c/tag "RecurseFinal_get") 0)
[[(c/param (c/tag "RecurseFinal_get") 1)]
(c/param (c/tag "RecurseFinal_get") 2)]
))})
c/ArrayNodeType (c/fn-c []
{3 (c/fn-arity
(c/tag "fn-arity485")
(c/list-c [(c/multi [(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity485") 0)])
(c/param (c/tag "fn-arity485") 1)
(c/param (c/tag "fn-arity485") 2)]
c/no-tail)
;; returns
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")]))})
62 (c/fn-c []
{3 (c/fn-arity
(c/tag "IntGenerator_get")
(c/list-c [(c/multi [(c/ReifiedConstraint 62 (c/tag "IntGenerator")
{(c/Field (c/tag ".gen")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".gen")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "IntGenerator_get") 0)])
(c/param (c/tag "IntGenerator_get") 1)
(c/param (c/tag "IntGenerator_get") 2)]
c/no-tail)
;; returns
(c/type-op c/set-to-op
(c/param (c/tag "IntGenerator_get") 0)
[[(c/param (c/tag "IntGenerator_get") 1)]
(c/param (c/tag "IntGenerator_get") 2)]
))})
112 (c/fn-c []
{3 (c/fn-arity
(c/tag "Bogus_get")
(c/list-c [(c/multi [(c/ReifiedConstraint 112 (c/tag "Bogus")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "Bogus_get") 0)])
(c/param (c/tag "Bogus_get") 1)
(c/param (c/tag "Bogus_get") 2)]
c/no-tail)
;; returns
(c/type-op c/set-to-op
(c/param (c/tag "Bogus_get") 0)
[[(c/param (c/tag "Bogus_get") 1)]
(c/param (c/tag "Bogus_get") 2)]
))})}) 

 arg-cs [(c/ReifiedConstraint 134 (c/tag "Boogie")
{(c/Field (c/tag ".xs")) (c/vect-c [] (c/coll-of-c c/int-constraint))
}
{c/contents c/top-type
(c/Field (c/tag ".xs")) (c/vect-c [(c/IntConstraint 1 2147483647 -2147483648)
(c/IntConstraint 2 2147483647 -2147483648)
(c/IntConstraint 3 2147483647 -2147483648)]
c/no-tail)
}
c/fn-constraint
 empty-list c/no-symbol ""), (c/ProtoImpls
(c/tag ".xs")
(c/fn-c []
{2 (c/fn-arity
(c/tag ".xs_setter")
(c/seq-c [(c/multi [(c/param (c/tag ".xs_setter") 0)
(c/ReifiedConstraint 0 (c/tag "field 'xs' required")
{}
{(c/Field (c/tag ".xs")) c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
(c/param (c/tag ".xs_setter") 1)]
c/no-tail)
;; returns
(c/type-op c/set-to-op
(c/param (c/tag ".xs_setter") 0)
[[(c/Field (c/tag ".xs"))]
(c/param (c/tag ".xs_setter") 1)]
)), 1 (c/fn-arity
(c/tag ".xs_getter")
(c/seq-c [(c/multi [(c/param (c/tag ".xs_getter") 0)
(c/ReifiedConstraint 0 (c/tag "field 'xs' required")
{}
{(c/Field (c/tag ".xs")) c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])]
c/no-tail)
;; returns
(c/type-op c/get-from-op
(c/param (c/tag ".xs_getter") 0)
[(c/Field (c/tag ".xs"))]
))})

{134 (c/fn-c []
{2 (c/fn-arity
(c/tag "Boogie-.xs-setter")
(c/seq-c [(c/multi [(c/param (c/tag "Boogie-.xs-setter") 0)
(c/ReifiedConstraint 134 (c/tag "Boogie")
{(c/Field (c/tag ".xs")) (c/vect-c [] (c/coll-of-c c/int-constraint))
}
{c/contents c/top-type
(c/Field (c/tag ".xs")) (c/vect-c [] (c/coll-of-c c/int-constraint))
}
c/fn-constraint
 empty-list c/no-symbol "")])
(c/multi [(c/param (c/tag "Boogie-.xs-setter") 1)
(c/vect-c [] (c/coll-of-c c/int-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/set-to-op
(c/param (c/tag "Boogie-.xs-setter") 0)
[[(c/Field (c/tag ".xs"))]
(c/param (c/tag "Boogie-.xs-setter") 1)]
)])), 1 (c/fn-arity
(c/tag "Boogie-.xs-getter")
(c/seq-c [(c/multi [(c/param (c/tag "Boogie-.xs-getter") 0)
(c/ReifiedConstraint 134 (c/tag "Boogie")
{(c/Field (c/tag ".xs")) (c/vect-c [] (c/coll-of-c c/int-constraint))
}
{c/contents c/top-type
(c/Field (c/tag ".xs")) (c/vect-c [] (c/coll-of-c c/int-constraint))
}
c/fn-constraint
 empty-list c/no-symbol "")])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "Boogie-.xs-getter") 0)
[(c/Field (c/tag ".xs"))]
)
(c/vect-c [] (c/coll-of-c c/int-constraint))]))})}), (c/vect-c [(c/IntConstraint 1 2147483647 -2147483648)
(c/IntConstraint 2 2147483647 -2147483648)
(c/SymConstraint plop)]
c/no-tail)] 

 result-type (c/NoValues [c/int-constraint
(c/SymConstraint plop)]) 

 Conflicting assertions (1157)  at assertion-tests/bad-setter-call-2.toc: 15
Integer from:               Symbol plopfrom:
bad-setter-call-2.toc: 8                    
                                            
                                            


***  site 1151 assertion-tests/dynamic-field-type-6.toc: 8 
 (inc (.x (f 'q (RecurseWith 9)))) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity120")
(c/seq-c [(c/multi [c/int-constraint
(c/param (c/tag "fn-arity120") 0)])]
c/no-tail)
;; returns
c/int-constraint)}) 

 arg-cs [(c/SymConstraint q)] 

 result-type (c/NoValues [c/int-constraint
(c/SymConstraint q)]) 

 Conflicting assertions (1157)  at assertion-tests/dynamic-field-type-6.toc: 8
Integer from:    Symbol qfrom:              
core: 1210       dynamic-field-type-6.toc: 6
core: 95                                    
core: 97                                    
                                            
                                            


***  site 1151 assertion-tests/dynamic-field-type-17.toc: 11 
 (inc (.x (f (AType 'a 'b)))) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity120")
(c/seq-c [(c/multi [c/int-constraint
(c/param (c/tag "fn-arity120") 0)])]
c/no-tail)
;; returns
c/int-constraint)}) 

 arg-cs [(c/SymConstraint bogus)] 

 result-type (c/NoValues [c/int-constraint
(c/SymConstraint bogus)]) 

 Conflicting assertions (1157)  at assertion-tests/dynamic-field-type-17.toc: 11
Integer from:    Symbol bogusfrom:            
core: 1210       dynamic-field-type-17.toc: 13
core: 95         dynamic-field-type-17.toc: 4 
core: 97         dynamic-field-type-17.toc: 7 
                                              
                                              


***  site 1151 assertion-tests/dynamic-field-type-3.toc: 8 
 (inc (.x (.x (apply AType (vector 9)) 'x))) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity120")
(c/seq-c [(c/multi [c/int-constraint
(c/param (c/tag "fn-arity120") 0)])]
c/no-tail)
;; returns
c/int-constraint)}) 

 arg-cs [(c/SymConstraint x)] 

 result-type (c/NoValues [c/int-constraint
(c/SymConstraint x)]) 

 Conflicting assertions (1157)  at assertion-tests/dynamic-field-type-3.toc: 8
Integer from:    Symbol xfrom:              
core: 1210       dynamic-field-type-3.toc: 6
core: 95                                    
core: 97                                    
                                            
                                            


***  site 1151 assertion-tests/dynamic-field-type-19.toc: 13 
 (inc (.x (f (AType 'a 'b)))) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity120")
(c/seq-c [(c/multi [c/int-constraint
(c/param (c/tag "fn-arity120") 0)])]
c/no-tail)
;; returns
c/int-constraint)}) 

 arg-cs [(c/SymConstraint bogus)] 

 result-type (c/NoValues [c/int-constraint
(c/SymConstraint bogus)]) 

 Conflicting assertions (1157)  at assertion-tests/dynamic-field-type-19.toc: 13
Integer from:    Symbol bogusfrom:            
core: 1210       dynamic-field-type-19.toc: 15
core: 95         dynamic-field-type-19.toc: 4 
core: 97         dynamic-field-type-19.toc: 9 
                                              
                                              


***  site 1151 assertion-tests/dynamic-field-type-1.toc: 5 
 (inc (.x (AType 'x))) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity120")
(c/seq-c [(c/multi [c/int-constraint
(c/param (c/tag "fn-arity120") 0)])]
c/no-tail)
;; returns
c/int-constraint)}) 

 arg-cs [(c/SymConstraint x)] 

 result-type (c/NoValues [c/int-constraint
(c/SymConstraint x)]) 

 Conflicting assertions (1157)  at assertion-tests/dynamic-field-type-1.toc: 5
Integer from:    Symbol xfrom:
core: 1210                    
core: 95                      
core: 97                      
                              
                              


***  site 1151 assertion-tests/dynamic-field-type-2.toc: 8 
 (inc (.x (.x (AType 9) 'x))) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity120")
(c/seq-c [(c/multi [c/int-constraint
(c/param (c/tag "fn-arity120") 0)])]
c/no-tail)
;; returns
c/int-constraint)}) 

 arg-cs [(c/SymConstraint x)] 

 result-type (c/NoValues [c/int-constraint
(c/SymConstraint x)]) 

 Conflicting assertions (1157)  at assertion-tests/dynamic-field-type-2.toc: 8
Integer from:    Symbol xfrom:              
core: 1210       dynamic-field-type-2.toc: 6
core: 95                                    
core: 97                                    
                                            
                                            


***  site 1151 assertion-tests/dynamic-field-type-4.toc: 11 
 (inc (.x (f (AType 9)))) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity120")
(c/seq-c [(c/multi [c/int-constraint
(c/param (c/tag "fn-arity120") 0)])]
c/no-tail)
;; returns
c/int-constraint)}) 

 arg-cs [(c/SymConstraint x)] 

 result-type (c/NoValues [c/int-constraint
(c/SymConstraint x)]) 

 Conflicting assertions (1157)  at assertion-tests/dynamic-field-type-4.toc: 11
Integer from:    Symbol xfrom:              
core: 1210       dynamic-field-type-4.toc: 9
core: 95         dynamic-field-type-4.toc: 4
core: 97         dynamic-field-type-4.toc: 5
                                            
                                            


***  site 1151 assertion-tests/dynamic-field-type-16.toc: 27 
 (inc (.x (.z (f 'wur (Second 's (Third 9)) (Second 's (Third 9)))))) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity120")
(c/seq-c [(c/multi [c/int-constraint
(c/param (c/tag "fn-arity120") 0)])]
c/no-tail)
;; returns
c/int-constraint)}) 

 arg-cs [(c/SymConstraint w)] 

 result-type (c/NoValues [c/int-constraint
(c/SymConstraint w)]) 

 Conflicting assertions (1157)  at assertion-tests/dynamic-field-type-16.toc: 27
Integer from:    Symbol wfrom:                
core: 1210       dynamic-field-type-16.toc: 25
core: 95         dynamic-field-type-16.toc: 23
core: 97         dynamic-field-type-16.toc: 16
                 dynamic-field-type-16.toc: 20
                                              
                                              


***  site 1151 assertion-tests/extract-type-failure.toc: 4 
 (inc (extract (first v))) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity120")
(c/seq-c [(c/multi [c/int-constraint
(c/param (c/tag "fn-arity120") 0)])]
c/no-tail)
;; returns
c/int-constraint)}) 

 arg-cs [(c/multi [(c/type-op c/inner-type-of-op
(c/type-op c/first-of-op
(c/param (c/tag "fn-arity803") 0) c/no-args
) c/no-args
)
(c/sum-c [(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity803") 0) c/no-args
)
c/strbuff-constraint])
(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity803") 0) c/no-args
)
c/substr-constraint])])])] 

 result-type (c/NoValues [c/strbuff-constraint
c/int-constraint]) 

 Conflicting assertions (1157)  at assertion-tests/extract-type-failure.toc: 4
String from:    Integer from:
core: 22        core: 1210   
                core: 95     
                core: 97     
                             
                             


***  site 1151 assertion-tests/dynamic-nested-value-1.toc: 7 
 (map (either (g 'nope 'bogus)
(vector 'nada)) inc) 

 target-c (c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/HashSetType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity630")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity630") 1)
0
))
(c/param (c/tag "fn-arity630") 0)
(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity630") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
c/contents (c/type-op c/call-value-op
(c/param (c/tag "fn-arity630") 1) c/no-args
)
}
(c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity643")
(c/seq-c [(c/multi [(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity643") 0)])
(c/param (c/tag "fn-arity643") 1)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "get")
(c/fn-c []
{2 (c/fn-arity
(c/tag "get")
(c/list-c [(c/param (c/tag "get") 0)
(c/param (c/tag "get") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "get") 0) c/no-args
) empty-list c/no-symbol ""))})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity134")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity134") 0)])
(c/param (c/tag "fn-arity134") 1)]
c/no-tail)
;; returns
(c/multi [(c/param (c/tag "fn-arity134") 0)
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity134") 0) c/no-args
) empty-list c/no-symbol "")]))})
c/BitmapIndexedType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity483")
(c/list-c [(c/multi [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity483") 0)])
(c/param (c/tag "fn-arity483") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity483") 0) c/no-args
) empty-list c/no-symbol ""))})
53 (c/fn-c []
{2 (c/fn-arity
(c/tag "Sorting_get")
(c/list-c [(c/multi [(c/ReifiedConstraint 53 (c/tag "Sorting")
{(c/Field (c/tag ".v")) c/top-type
(c/Field (c/tag ".k")) c/top-type
}
{(c/Field (c/tag ".v")) c/top-type
c/contents c/top-type
(c/Field (c/tag ".k")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "Sorting_get") 0)])
(c/param (c/tag "Sorting_get") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/get-from-op
(c/param (c/tag "Sorting_get") 0)
[(c/param (c/tag "Sorting_get") 1)]
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "Sorting_get") 0) c/no-args
)]) empty-list c/no-symbol ""))})
55 (c/fn-c []
{2 (c/fn-arity
(c/tag "RecurseWith_get")
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "RecurseWith_get") 0)])
(c/param (c/tag "RecurseWith_get") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/get-from-op
(c/param (c/tag "RecurseWith_get") 0)
[(c/param (c/tag "RecurseWith_get") 1)]
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "RecurseWith_get") 0) c/no-args
)]) empty-list c/no-symbol ""))})
c/HashCollisionNodeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity481")
(c/list-c [(c/multi [(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity481") 0)])
(c/param (c/tag "fn-arity481") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity481") 0) c/no-args
) empty-list c/no-symbol ""))})
56 (c/fn-c []
{2 (c/fn-arity
(c/tag "RecurseFinal_get")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "RecurseFinal_get") 0)])
(c/param (c/tag "RecurseFinal_get") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/get-from-op
(c/param (c/tag "RecurseFinal_get") 0)
[(c/param (c/tag "RecurseFinal_get") 1)]
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "RecurseFinal_get") 0) c/no-args
)]) empty-list c/no-symbol ""))})
c/ArrayNodeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity482")
(c/list-c [(c/multi [(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity482") 0)])
(c/param (c/tag "fn-arity482") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity482") 0) c/no-args
) empty-list c/no-symbol ""))})
c/VectorType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity86")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity86") 0)])
(c/multi [c/int-constraint
(c/IntConstraint c/no-int 2147483647 0)
(c/param (c/tag "fn-arity86") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity86") 0) c/no-args
) empty-list c/no-symbol ""))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity269")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity269") 0)])
(c/multi [c/int-constraint
(c/param (c/tag "fn-arity269") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity269") 0) c/no-args
) empty-list c/no-symbol ""))})})
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity643") 0)
[(c/Field (c/tag ".set-map"))]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])])
(c/param (c/tag "fn-arity643") 1)]
))})
 empty-list c/no-symbol ""))})
c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
55 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity552")
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity552") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity552") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity552") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity553") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity552") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity551")
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity551") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity551") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity551") 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
55 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity552")
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity552") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity552") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity552") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity553") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity552") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol ""))})
c/FutureType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity368")
(c/list-c [(c/multi [(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity368") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity368") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
c/PromiseType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity347")
(c/list-c [(c/multi [c/promise-constraint
(c/param (c/tag "fn-arity347") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity347") 1)])]
c/no-tail)
;; returns
c/promise-constraint)})
56 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity549")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity549") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity549") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity549") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity548")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity548") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity548") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity548") 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/FutureType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity368")
(c/list-c [(c/multi [(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity368") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity368") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
c/PromiseType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity347")
(c/list-c [(c/multi [c/promise-constraint
(c/param (c/tag "fn-arity347") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity347") 1)])]
c/no-tail)
;; returns
c/promise-constraint)})
56 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity549")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity549") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity549") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity549") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol ""))})
c/VectorType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity304")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity304") 1)
0
))
(c/param (c/tag "fn-arity304") 0)
(c/vect-c [] (c/coll-of-c c/top-type))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity304") 1)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/type-op c/call-value-op
(c/param (c/tag "fn-arity304") 1) c/no-args
)))), 3 (c/fn-arity
(c/tag "fn-arity303")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity303") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 2)])]
c/no-tail)
;; returns
c/top-type)})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)])))), 3 (c/fn-arity
(c/tag "fn-arity163")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity163") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)])
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity548") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity548") 0)
[(c/Field (c/tag ".x"))]
)])]
)
(c/ReifiedConstraint 59 (c/tag "* RecurseFinal constructor at core: 2585 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag "* RecurseFinal constructor at core: 2585 *")
(c/seq-c [c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "RecurseFinal")
{}
{(c/Field (c/tag ".x")) (c/param (c/tag "* RecurseFinal constructor at core: 2585 *") 1)
c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")]
))})
c/VectorType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity304")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity304") 1)
0
))
(c/param (c/tag "fn-arity304") 0)
(c/vect-c [] (c/coll-of-c c/top-type))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity304") 1)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/type-op c/call-value-op
(c/param (c/tag "fn-arity304") 1) c/no-args
)))), 3 (c/fn-arity
(c/tag "fn-arity303")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity303") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 2)])]
c/no-tail)
;; returns
c/top-type)})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)])))), 3 (c/fn-arity
(c/tag "fn-arity163")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity163") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)])
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity551") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity553") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity552") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity551") 0)
[(c/Field (c/tag ".x"))]
)])]
)
(c/ReifiedConstraint 60 (c/tag "* RecurseWith constructor at core: 2597 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag "* RecurseWith constructor at core: 2597 *")
(c/seq-c [c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "RecurseWith")
{}
{(c/Field (c/tag ".x")) (c/param (c/tag "* RecurseWith constructor at core: 2597 *") 1)
c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")]
))})
c/FutureType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity368")
(c/list-c [(c/multi [(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity368") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity368") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
c/PromiseType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity347")
(c/list-c [(c/multi [c/promise-constraint
(c/param (c/tag "fn-arity347") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity347") 1)])]
c/no-tail)
;; returns
c/promise-constraint)})
56 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity549")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity549") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity549") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity549") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity548")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity548") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity548") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity548") 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/FutureType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity368")
(c/list-c [(c/multi [(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity368") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity368") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
c/PromiseType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity347")
(c/list-c [(c/multi [c/promise-constraint
(c/param (c/tag "fn-arity347") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity347") 1)])]
c/no-tail)
;; returns
c/promise-constraint)})
56 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity549")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity549") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity549") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity549") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol ""))})
c/VectorType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity304")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity304") 1)
0
))
(c/param (c/tag "fn-arity304") 0)
(c/vect-c [] (c/coll-of-c c/top-type))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity304") 1)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/type-op c/call-value-op
(c/param (c/tag "fn-arity304") 1) c/no-args
)))), 3 (c/fn-arity
(c/tag "fn-arity303")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity303") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 2)])]
c/no-tail)
;; returns
c/top-type)})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)])))), 3 (c/fn-arity
(c/tag "fn-arity163")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity163") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)])
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity548") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity548") 0)
[(c/Field (c/tag ".x"))]
)])]
)
(c/ReifiedConstraint 59 (c/tag "* RecurseFinal constructor at core: 2585 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag "* RecurseFinal constructor at core: 2585 *")
(c/seq-c [c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "RecurseFinal")
{}
{(c/Field (c/tag ".x")) (c/param (c/tag "* RecurseFinal constructor at core: 2585 *") 1)
c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")]
))})
c/VectorType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity304")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity304") 1)
0
))
(c/param (c/tag "fn-arity304") 0)
(c/vect-c [] (c/coll-of-c c/top-type))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity304") 1)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/type-op c/call-value-op
(c/param (c/tag "fn-arity304") 1) c/no-args
)))), 3 (c/fn-arity
(c/tag "fn-arity303")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity303") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 2)])]
c/no-tail)
;; returns
c/top-type)})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)])))), 3 (c/fn-arity
(c/tag "fn-arity163")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity163") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)])
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)]))})}) 

 arg-cs [(c/sum-c [(c/vect-c [(c/SymConstraint bogus)]
c/no-tail)
(c/vect-c [(c/SymConstraint nada)]
c/no-tail)]), (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity120")
(c/seq-c [(c/multi [c/int-constraint
(c/param (c/tag "fn-arity120") 0)])]
c/no-tail)
;; returns
c/int-constraint)})] 

 result-type (c/NoValues [c/int-constraint
(c/SymConstraint bogus)]) 

 Conflicting assertions (1157)  at assertion-tests/dynamic-nested-value-1.toc: 7
Integer from:    Symbol bogusfrom:
core: 1210                        
core: 95                          
core: 97                          
                                  
                                  


*** Conflicting assertions (785)  at assertion-tests/insufficient-static-elements-1.toc: 6
No Tail for sequence    Can not contain other valuesfrom:


*** Conflicting assertions (785)  at assertion-tests/insufficient-static-elements-2.toc: 3
Symbol afrom:    Integer from:
                 core: 1208   
                 core: 1210   
                 core: 95     
                 core: 97     
                              
                              


***  site 1151 assertion-tests/dynamic-proto-param-1.toc: 11 
 (inc (dorf (AType 99) 'nope)) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity120")
(c/seq-c [(c/multi [c/int-constraint
(c/param (c/tag "fn-arity120") 0)])]
c/no-tail)
;; returns
c/int-constraint)}) 

 arg-cs [(c/SymConstraint nope)] 

 result-type (c/NoValues [c/int-constraint
(c/SymConstraint nope)]) 

 Conflicting assertions (1157)  at assertion-tests/dynamic-proto-param-1.toc: 11
Integer from:    Symbol nopefrom:
core: 1210                       
core: 95                         
core: 97                         
                                 
                                 


***  site 1151 assertion-tests/incompatible-tails.toc: 17 
 (g ys) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity807")
(c/seq-c [(c/multi [(c/seq-c [c/int-constraint
(c/sum-c [c/strbuff-constraint
c/substr-constraint])
c/top-type]
(c/coll-of-c (c/sum-c [c/strbuff-constraint
c/substr-constraint])))
(c/param (c/tag "fn-arity807") 0)])]
c/no-tail)
;; returns
c/substr-constraint)}) 

 arg-cs [(c/multi [(c/seq-c [c/int-constraint
(c/sum-c [c/strbuff-constraint
c/substr-constraint])
c/top-type]
(c/coll-of-c c/int-constraint))
(c/param (c/tag "fn-arity809") 0)])] 

 result-type (c/NoValues [c/strbuff-constraint
c/int-constraint]) 

 Conflicting assertions (1157)  at assertion-tests/incompatible-tails.toc: 17
String from:                  Integer from:            
incompatible-tails.toc: 9     incompatible-tails.toc: 2
incompatible-tails.toc: 10    incompatible-tails.toc: 3
incompatible-tails.toc: 11    incompatible-tails.toc: 4
core: 336                     core: 1208               
core: 339                     core: 1210               
core: 22                      core: 95                 
                              core: 97                 
                                                       
                                                       


***  site 1151 assertion-tests/insufficient-static-elements-4.toc: 7 
 (f (vector 9)) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity810")
(c/seq-c [(c/multi [(c/seq-c [c/int-constraint
c/top-type]
c/top-type)
(c/param (c/tag "fn-arity810") 0)])]
c/no-tail)
;; returns
c/int-constraint)}) 

 arg-cs [(c/vect-c [(c/IntConstraint 9 2147483647 -2147483648)]
c/no-tail)] 

 result-type (c/NoValues [c/no-tail
(c/ReifiedConstraint 0 (c/tag "Can not contain other values")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")]) 

 Conflicting assertions (1157)  at assertion-tests/insufficient-static-elements-4.toc: 7
No Tail for sequence    Can not contain other valuesfrom:


*** Conflicting assertions (785)  at assertion-tests/items-constraints-1.toc: 3
Symbol afrom:    Integer from:
                 core: 1208   
                 core: 1210   
                 core: 95     
                 core: 97     
                              
                              


*** Conflicting assertions (785)  at assertion-tests/insufficient-static-elements-3.toc: 3
No Tail for sequence    Can not contain other valuesfrom:


***  site 1151 assertion-tests/int-too-large.toc: 7 
 (f 5) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity813")
(c/seq-c [(c/multi [(c/IntConstraint c/no-int 4 -2147483648)
(c/param (c/tag "fn-arity813") 0)])]
c/no-tail)
;; returns
c/int-constraint)}) 

 arg-cs [(c/IntConstraint 5 2147483647 -2147483648)] 

 result-type (c/NoValues [(c/IntConstraint c/no-int 4 -2147483648)
(c/IntConstraint 5 2147483647 -2147483648)]) 

 Conflicting assertions (1157)  at assertion-tests/int-too-large.toc: 7
Integer from:           Integer 5from:
int-too-large.toc: 4                  
int-too-large.toc: 3                  
                                      
                                      


***  site 1151 assertion-tests/items-constraints-3.toc: 10 
 (f (vector 'a 9)) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity814")
(c/seq-c [(c/multi [(c/seq-c [c/int-constraint
c/top-type]
c/top-type)
(c/param (c/tag "fn-arity814") 0)])]
c/no-tail)
;; returns
c/strbuff-constraint)}) 

 arg-cs [(c/vect-c [(c/SymConstraint a)
(c/IntConstraint 9 2147483647 -2147483648)]
c/no-tail)] 

 result-type (c/NoValues [c/int-constraint
(c/SymConstraint a)]) 

 Conflicting assertions (1157)  at assertion-tests/items-constraints-3.toc: 10
Integer from:                 Symbol afrom:
items-constraints-3.toc: 3                 
items-constraints-3.toc: 4                 
core: 1208                                 
core: 1210                                 
core: 95                                   
core: 97                                   
                                           
                                           


*** Conflicting assertions (785)  at assertion-tests/list-items-types.toc: 6
Symbol bfrom:    Integer from:          
                 list-items-types.toc: 2
                 list-items-types.toc: 3
                 core: 1208             
                 core: 1210             
                 core: 95               
                 core: 97               
                                        
                                        


*** Loaded assertion-tests/missing-namespaced-sym.toc

*** Conflicting assertions (785)  at assertion-tests/list-butlast.toc: 3
No Tail for sequence    Can not contain other valuesfrom:


***  site 1151 assertion-tests/min-count.toc: 7 
 (f (vector 1 2)) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity816")
(c/seq-c [(c/multi [(c/seq-c [c/top-type
c/top-type
c/top-type]
(c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity816") 0)])]
c/no-tail)
;; returns
(c/multi [(c/seq-c [c/top-type
c/top-type
c/top-type]
(c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity816") 0)]))}) 

 arg-cs [(c/vect-c [(c/IntConstraint 1 2147483647 -2147483648)
(c/IntConstraint 2 2147483647 -2147483648)]
c/no-tail)] 

 result-type (c/NoValues [c/no-tail
(c/ReifiedConstraint 0 (c/tag "Can not contain other values")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")]) 

 Conflicting assertions (1157)  at assertion-tests/min-count.toc: 7
No Tail for sequence    Can not contain other valuesfrom:


*** Conflicting assertions (433)  at assertion-tests/items-constraints-4.toc: 3
String from:                  Integer from:             
items-constraints-4.toc: 6    items-constraints-4.toc: 5
core: 336                     core: 1208                
core: 339                     core: 1210                
core: 22                      core: 95                  
                              core: 97                  
                                                        
                                                        


*** Conflicting assertions (785)  at assertion-tests/nested-destruct-1.toc: 10
Vector from:    Integer from:           
                nested-destruct-1.toc: 4
                nested-destruct-1.toc: 5
                core: 1208              
                core: 1210              
                core: 95                
                core: 97                
                                        
                                        


*** Conflicting assertions (785)  at assertion-tests/nested-destruct-2.toc: 9
Symbol afrom:    Integer from:           
                 nested-destruct-2.toc: 2
                 nested-destruct-2.toc: 3
                 core: 1208              
                 core: 1210              
                 core: 95                
                 core: 97                
                                         
                                         


*** Conflicting assertions (433)  at assertion-tests/nested-items-conflict.toc: 10
String from:                    Integer from:               
nested-items-conflict.toc: 5    nested-items-conflict.toc: 2
nested-items-conflict.toc: 6    nested-items-conflict.toc: 3
core: 336                       core: 1208                  
core: 339                       core: 1210                  
core: 22                        core: 95                    
                                core: 97                    
                                                            
                                                            


***  site 1151 assertion-tests/nested-destruct.toc: 9 
 (f (vector (vector "2" 3) 4 6)) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity822")
(c/seq-c [(c/multi [(c/seq-c [(c/seq-c [c/int-constraint
c/top-type]
c/top-type)
c/top-type
c/top-type]
(c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity822") 0)])]
c/no-tail)
;; returns
c/nothing-constraint)}) 

 arg-cs [(c/vect-c [(c/vect-c [(c/StrBuffConstraint 2empty-list c/no-symbol "")
(c/IntConstraint 3 2147483647 -2147483648)]
c/no-tail)
(c/IntConstraint 4 2147483647 -2147483648)
(c/IntConstraint 6 2147483647 -2147483648)]
c/no-tail)] 

 result-type (c/NoValues [c/int-constraint
(c/StrBuffConstraint 2empty-list c/no-symbol "")]) 

 Conflicting assertions (1157)  at assertion-tests/nested-destruct.toc: 9
Integer from:             String 2from:
nested-destruct.toc: 3                 
nested-destruct.toc: 5                 
nested-destruct.toc: 4                 
core: 1208                             
core: 1210                             
core: 95                               
core: 97                               
                                       
                                       


*** Loaded assertion-tests/multi-constraint-violated.toc

***  site 1151 assertion-tests/field-constraint.toc: 10 
 (subs x 1) 

 target-c (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity44")
(c/seq-c [(c/multi [(c/sum-c [c/strbuff-constraint
c/substr-constraint])
(c/param (c/tag "fn-arity44") 0)])
(c/multi [(c/IntConstraint c/no-int 2147483647 0)
(c/param (c/tag "fn-arity44") 1)])]
c/no-tail)
;; returns
c/substr-constraint), 3 (c/fn-arity
(c/tag "fn-arity43")
(c/seq-c [(c/multi [(c/sum-c [c/strbuff-constraint
c/substr-constraint])
(c/param (c/tag "fn-arity43") 0)])
(c/multi [(c/IntConstraint c/no-int 2147483647 0)
(c/param (c/tag "fn-arity43") 1)])
(c/multi [(c/IntConstraint c/no-int 2147483647 0)
(c/param (c/tag "fn-arity43") 2)])]
c/no-tail)
;; returns
c/substr-constraint)}) 

 arg-cs [(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity826") 0)
[(c/Field (c/tag ".x"))]
)
c/int-constraint]), (c/IntConstraint 1 2147483647 -2147483648)] 

 result-type (c/NoValues [c/strbuff-constraint
c/int-constraint]) 

 Conflicting assertions (1157)  at assertion-tests/field-constraint.toc: 10
String from:    Integer from:          
core: 339       field-constraint.toc: 6
core: 22                               
                                       
                                       


***  site 1151 assertion-tests/param-in-and-1.toc: 8 
 (f 1) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity827")
(c/seq-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity827") 0)])]
c/no-tail)
;; returns
c/nothing-constraint)}) 

 arg-cs [(c/IntConstraint 1 2147483647 -2147483648)] 

 result-type (c/NoValues [c/maybe-constraint
(c/IntConstraint 1 2147483647 -2147483648)]) 

 Conflicting assertions (1157)  at assertion-tests/param-in-and-1.toc: 8
Maybe from:              Integer 1from:
param-in-and-1.toc: 3                  
                                       
                                       


*** Could not find implementation of 'update-constraint' at assertion-tests/or-prop.toc: 9 for: 
 do-ast (do-ast [(print-err 'y (inc y))
(instance? Integer x)]) 

 c/maybe-constraint

***  site 1151 assertion-tests/param-in-and-2.toc: 8 
 (f 1) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity829")
(c/seq-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity829") 0)])]
c/no-tail)
;; returns
(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity829") 0)]))}) 

 arg-cs [(c/IntConstraint 1 2147483647 -2147483648)] 

 result-type (c/NoValues [c/maybe-constraint
(c/IntConstraint 1 2147483647 -2147483648)]) 

 Conflicting assertions (1157)  at assertion-tests/param-in-and-2.toc: 8
Maybe from:              Integer 1from:
param-in-and-2.toc: 3                  
                                       
                                       


***  site 1151 assertion-tests/param-in-and-4.toc: 9 
 (f 1) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity830")
(c/seq-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity830") 0)])]
c/no-tail)
;; returns
c/int-constraint)}) 

 arg-cs [(c/IntConstraint 1 2147483647 -2147483648)] 

 result-type (c/NoValues [c/maybe-constraint
(c/IntConstraint 1 2147483647 -2147483648)]) 

 Conflicting assertions (1157)  at assertion-tests/param-in-and-4.toc: 9
Maybe from:              Integer 1from:
param-in-and-4.toc: 3                  
                                       
                                       


***  site 1151 assertion-tests/param-in-either-1.toc: 8 
 (f 1) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity831")
(c/seq-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity831") 0)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity831") 0) c/no-args
)
c/nothing-constraint]))}) 

 arg-cs [(c/IntConstraint 1 2147483647 -2147483648)] 

 result-type (c/NoValues [c/maybe-constraint
(c/IntConstraint 1 2147483647 -2147483648)]) 

 Conflicting assertions (1157)  at assertion-tests/param-in-either-1.toc: 8
Maybe from:                 Integer 1from:
param-in-either-1.toc: 3                  
                                          
                                          


***  site 1151 assertion-tests/param-in-and-3.toc: 9 
 (f 1) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity832")
(c/seq-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity832") 0)])]
c/no-tail)
;; returns
c/int-constraint)}) 

 arg-cs [(c/IntConstraint 1 2147483647 -2147483648)] 

 result-type (c/NoValues [c/maybe-constraint
(c/IntConstraint 1 2147483647 -2147483648)]) 

 Conflicting assertions (1157)  at assertion-tests/param-in-and-3.toc: 9
Maybe from:              Integer 1from:
param-in-and-3.toc: 3                  
                                       
                                       


***  site 1151 assertion-tests/param-in-either-2.toc: 9 
 (f 1) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity833")
(c/seq-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity833") 0)])]
c/no-tail)
;; returns
(c/SymConstraint wut))}) 

 arg-cs [(c/IntConstraint 1 2147483647 -2147483648)] 

 result-type (c/NoValues [c/maybe-constraint
(c/IntConstraint 1 2147483647 -2147483648)]) 

 Conflicting assertions (1157)  at assertion-tests/param-in-either-2.toc: 9
Maybe from:                 Integer 1from:
param-in-either-2.toc: 3                  
                                          
                                          


***  site 1151 assertion-tests/param-in-or-1.toc: 8 
 (f 1) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity834")
(c/seq-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity834") 0)])]
c/no-tail)
;; returns
(c/sum-c [c/nothing-constraint
(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity834") 0)])]))}) 

 arg-cs [(c/IntConstraint 1 2147483647 -2147483648)] 

 result-type (c/NoValues [c/maybe-constraint
(c/IntConstraint 1 2147483647 -2147483648)]) 

 Conflicting assertions (1157)  at assertion-tests/param-in-or-1.toc: 8
Maybe from:             Integer 1from:
param-in-or-1.toc: 3                  
                                      
                                      


***  site 1151 assertion-tests/param-in-or-2.toc: 8 
 (f 1) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity835")
(c/seq-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity835") 0)])]
c/no-tail)
;; returns
(c/sum-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity835") 0)])
c/nothing-constraint]))}) 

 arg-cs [(c/IntConstraint 1 2147483647 -2147483648)] 

 result-type (c/NoValues [c/maybe-constraint
(c/IntConstraint 1 2147483647 -2147483648)]) 

 Conflicting assertions (1157)  at assertion-tests/param-in-or-2.toc: 8
Maybe from:             Integer 1from:
param-in-or-2.toc: 3                  
                                      
                                      


***  site 1151 assertion-tests/dynamic-field-type-18.toc: 28 
 (inc (.x (.z (f 'wur (Second 's (Third 9)) (Second 's (Third 9)) 'bogus)))) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity120")
(c/seq-c [(c/multi [c/int-constraint
(c/param (c/tag "fn-arity120") 0)])]
c/no-tail)
;; returns
c/int-constraint)}) 

 arg-cs [(c/SymConstraint bogus)] 

 result-type (c/NoValues [c/int-constraint
(c/SymConstraint bogus)]) 

 Conflicting assertions (1157)  at assertion-tests/dynamic-field-type-18.toc: 28
Integer from:    Symbol bogusfrom:            
core: 1210       dynamic-field-type-18.toc: 26
core: 95         dynamic-field-type-18.toc: 23
core: 97         dynamic-field-type-18.toc: 25
                                              
                                              


***  site 1151 assertion-tests/param-in-or-4.toc: 9 
 (f 1) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity837")
(c/seq-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity837") 0)])]
c/no-tail)
;; returns
c/int-constraint)}) 

 arg-cs [(c/IntConstraint 1 2147483647 -2147483648)] 

 result-type (c/NoValues [c/maybe-constraint
(c/IntConstraint 1 2147483647 -2147483648)]) 

 Conflicting assertions (1157)  at assertion-tests/param-in-or-4.toc: 9
Maybe from:             Integer 1from:
param-in-or-4.toc: 3                  
                                      
                                      


***  site 1151 assertion-tests/param-in-or-3.toc: 9 
 (f 1) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity838")
(c/seq-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity838") 0)])]
c/no-tail)
;; returns
c/int-constraint)}) 

 arg-cs [(c/IntConstraint 1 2147483647 -2147483648)] 

 result-type (c/NoValues [c/maybe-constraint
(c/IntConstraint 1 2147483647 -2147483648)]) 

 Conflicting assertions (1157)  at assertion-tests/param-in-or-3.toc: 9
Maybe from:             Integer 1from:
param-in-or-3.toc: 3                  
                                      
                                      


*** Conflicting assertions (785)  at assertion-tests/preserve-static-info-1.toc: 3
Integer 2from:    Sequence from:
                                
                                


***  site 1151 assertion-tests/param-in-tail-cond-3.toc: 9 
 (f 1) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity839")
(c/seq-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity839") 0)])]
c/no-tail)
;; returns
(c/sum-c [(c/MaybeConstraint (c/sum-c [(c/IntConstraint 0 2147483647 -2147483648)
(c/IntConstraint 1 2147483647 -2147483648)]) empty-list c/no-symbol "")
c/nothing-constraint]))}) 

 arg-cs [(c/IntConstraint 1 2147483647 -2147483648)] 

 result-type (c/NoValues [c/maybe-constraint
(c/IntConstraint 1 2147483647 -2147483648)]) 

 Conflicting assertions (1157)  at assertion-tests/param-in-tail-cond-3.toc: 9
Maybe from:                    Integer 1from:
param-in-tail-cond-3.toc: 3                  
                                             
                                             


***  site 1151 assertion-tests/propogate-inner-3.toc: 7 
 (f 'a) 

 target-c (c/fn-c []
{c/variadic (c/fn-arity
(c/tag "fn-arity841")
(c/seq-c [(c/param (c/tag "fn-arity841") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity841") 1)]))
;; returns
(c/list-c [(c/multi [c/int-constraint
(c/param (c/tag "fn-arity841") 0)])]
(c/multi [(c/list-c [] (c/coll-of-c c/int-constraint))
(c/param (c/tag "fn-arity841") 1)])))}) 

 arg-cs [(c/SymConstraint a)] 

 result-type (c/NoValues [c/int-constraint
(c/SymConstraint a)]) 

 Conflicting assertions (1157)  at assertion-tests/propogate-inner-3.toc: 7
Integer from:               Symbol afrom:
propogate-inner-3.toc: 3                 
                                         
                                         


*** Conflicting assertions (785)  at assertion-tests/preserve-static-info-2.toc: 3
No Tail for sequence    Can not contain other valuesfrom:


***  site 1151 assertion-tests/propogate-inner-4.toc: 7 
 (f 'a 4) 

 target-c (c/fn-c []
{c/variadic (c/fn-arity
(c/tag "fn-arity843")
(c/seq-c [(c/param (c/tag "fn-arity843") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity843") 1)]))
;; returns
(c/list-c [(c/multi [c/int-constraint
(c/param (c/tag "fn-arity843") 0)])]
(c/multi [(c/list-c [] (c/coll-of-c c/int-constraint))
(c/param (c/tag "fn-arity843") 1)])))}) 

 arg-cs [(c/SymConstraint a), (c/IntConstraint 4 2147483647 -2147483648)] 

 result-type (c/NoValues [c/int-constraint
(c/SymConstraint a)]) 

 Conflicting assertions (1157)  at assertion-tests/propogate-inner-4.toc: 7
Integer from:               Symbol afrom:
propogate-inner-4.toc: 3                 
                                         
                                         


***  site 1151 assertion-tests/propogate-through-let.toc: 7 
 (f "bogus") 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity844")
(c/seq-c [(c/multi [c/int-constraint
(c/param (c/tag "fn-arity844") 0)])]
c/no-tail)
;; returns
c/int-constraint)}) 

 arg-cs [(c/StrBuffConstraint bogusempty-list c/no-symbol "")] 

 result-type (c/NoValues [c/int-constraint
(c/StrBuffConstraint bogusempty-list c/no-symbol "")]) 

 Conflicting assertions (1157)  at assertion-tests/propogate-through-let.toc: 7
Integer from:                   String bogusfrom:
propogate-through-let.toc: 3                     
propogate-through-let.toc: 4                     
core: 1208                                       
core: 1210                                       
core: 95                                         
core: 97                                         
                                                 
                                                 


***  site 1151 assertion-tests/flat-map-param.toc: 8 
 (flat-map clauses string-list) 

 target-c (c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/HashSetType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity629")
(c/list-c [(c/multi [(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity629") 0)
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity629") 1)
0
))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity629") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
c/contents c/top-type
}
(c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity643")
(c/seq-c [(c/multi [(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity643") 0)])
(c/param (c/tag "fn-arity643") 1)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "get")
(c/fn-c []
{2 (c/fn-arity
(c/tag "get")
(c/list-c [(c/param (c/tag "get") 0)
(c/param (c/tag "get") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "get") 0) c/no-args
) empty-list c/no-symbol ""))})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity134")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity134") 0)])
(c/param (c/tag "fn-arity134") 1)]
c/no-tail)
;; returns
(c/multi [(c/param (c/tag "fn-arity134") 0)
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity134") 0) c/no-args
) empty-list c/no-symbol "")]))})
c/BitmapIndexedType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity483")
(c/list-c [(c/multi [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity483") 0)])
(c/param (c/tag "fn-arity483") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity483") 0) c/no-args
) empty-list c/no-symbol ""))})
53 (c/fn-c []
{2 (c/fn-arity
(c/tag "Sorting_get")
(c/list-c [(c/multi [(c/ReifiedConstraint 53 (c/tag "Sorting")
{(c/Field (c/tag ".v")) c/top-type
(c/Field (c/tag ".k")) c/top-type
}
{(c/Field (c/tag ".v")) c/top-type
c/contents c/top-type
(c/Field (c/tag ".k")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "Sorting_get") 0)])
(c/param (c/tag "Sorting_get") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/get-from-op
(c/param (c/tag "Sorting_get") 0)
[(c/param (c/tag "Sorting_get") 1)]
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "Sorting_get") 0) c/no-args
)]) empty-list c/no-symbol ""))})
55 (c/fn-c []
{2 (c/fn-arity
(c/tag "RecurseWith_get")
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "RecurseWith_get") 0)])
(c/param (c/tag "RecurseWith_get") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/get-from-op
(c/param (c/tag "RecurseWith_get") 0)
[(c/param (c/tag "RecurseWith_get") 1)]
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "RecurseWith_get") 0) c/no-args
)]) empty-list c/no-symbol ""))})
c/HashCollisionNodeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity481")
(c/list-c [(c/multi [(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity481") 0)])
(c/param (c/tag "fn-arity481") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity481") 0) c/no-args
) empty-list c/no-symbol ""))})
56 (c/fn-c []
{2 (c/fn-arity
(c/tag "RecurseFinal_get")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "RecurseFinal_get") 0)])
(c/param (c/tag "RecurseFinal_get") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/get-from-op
(c/param (c/tag "RecurseFinal_get") 0)
[(c/param (c/tag "RecurseFinal_get") 1)]
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "RecurseFinal_get") 0) c/no-args
)]) empty-list c/no-symbol ""))})
c/ArrayNodeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity482")
(c/list-c [(c/multi [(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity482") 0)])
(c/param (c/tag "fn-arity482") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity482") 0) c/no-args
) empty-list c/no-symbol ""))})
c/VectorType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity86")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity86") 0)])
(c/multi [c/int-constraint
(c/IntConstraint c/no-int 2147483647 0)
(c/param (c/tag "fn-arity86") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity86") 0) c/no-args
) empty-list c/no-symbol ""))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity269")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity269") 0)])
(c/multi [c/int-constraint
(c/param (c/tag "fn-arity269") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity269") 0) c/no-args
) empty-list c/no-symbol ""))})})
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity643") 0)
[(c/Field (c/tag ".set-map"))]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])])
(c/param (c/tag "fn-arity643") 1)]
))})
 empty-list c/no-symbol ""))})
c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})
c/FutureType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity367")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity367") 0)
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity367") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
c/PromiseType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity346")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity346") 0)
c/promise-constraint])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity346") 1)])]
c/no-tail)
;; returns
c/promise-constraint)})
c/VectorType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity302")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity302") 0)
(c/vect-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity302") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/intersect c/fn-constraint
(c/coll-of-c (c/vect-c [] (c/coll-of-c c/top-type))))
(c/param (c/tag "fn-arity302") 1)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/type-op c/inner-type-of-op
(c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/intersect c/fn-constraint
(c/coll-of-c (c/vect-c [] (c/coll-of-c c/top-type))))
(c/param (c/tag "fn-arity302") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/vect-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity302") 1)
0
)))
(c/param (c/tag "fn-arity302") 0)]) c/no-args
)]
) c/no-args
))))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity162")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity162") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity162") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/intersect c/fn-constraint
(c/coll-of-c (c/list-c [] (c/coll-of-c c/top-type))))
(c/param (c/tag "fn-arity162") 1)])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/concat-op
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity162") 1)
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity162") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity162") 1)
0
)])]
)
(c/list-c [] (c/coll-of-c c/top-type))]))) c/no-args
)
(c/list-c [] (c/coll-of-c (c/type-op c/inner-type-of-op
(c/type-op c/call-value-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/intersect c/fn-constraint
(c/coll-of-c (c/list-c [] (c/coll-of-c c/top-type))))
(c/param (c/tag "fn-arity162") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity162") 1)
0
)))
(c/param (c/tag "fn-arity162") 0)]) c/no-args
)]
) c/no-args
)))]))})}) 

 arg-cs [(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity836") 0)
[(c/Field (c/tag ".clauses"))]
)
(c/vect-c [] (c/coll-of-c c/top-type))]), (c/ProtoImpls
(c/tag "string-list")
(c/fn-c []
{1 (c/fn-arity
(c/tag "string-list")
(c/list-c [(c/param (c/tag "string-list") 0)]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/sum-c [c/strbuff-constraint
c/substr-constraint]))))})

{c/HashSetType (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity642")
(c/list-c [(c/multi [(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity642") 0)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/sum-c [c/strbuff-constraint
c/substr-constraint]))))})
64 (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity668")
(c/list-c [(c/multi [(c/ReifiedConstraint 64 (c/tag "LazyList")
{(c/Field (c/tag ".lazy")) (c/list-c [] (c/coll-of-c c/top-type))
(c/Field (c/tag ".tail")) c/top-type
(c/Field (c/tag ".container")) c/top-type
}
{(c/Field (c/tag ".lazy")) (c/list-c [] (c/coll-of-c c/top-type))
(c/Field (c/tag ".tail")) c/top-type
c/contents c/top-type
(c/Field (c/tag ".container")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity668") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/StrBuffConstraint <LazyList>empty-list c/no-symbol "")]
c/no-tail))})
c/MaybeType (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity140")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity140") 0)])]
c/no-tail)
;; returns
(c/sum-c [(c/list-c [] (c/coll-of-c (c/sum-c [c/strbuff-constraint
c/substr-constraint])))
(c/list-c [(c/StrBuffConstraint <nothing>empty-list c/no-symbol "")]
c/no-tail)]))})
c/BitmapIndexedType (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity504")
(c/list-c [(c/multi [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity504") 0)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/sum-c [c/strbuff-constraint
c/substr-constraint]))))})
c/SymbolType (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity195")
(c/list-c [(c/multi [c/sym-constraint
(c/param (c/tag "fn-arity195") 0)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/sum-c [c/strbuff-constraint
c/substr-constraint]))))})
c/IntegerType (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity119")
(c/list-c [(c/multi [c/int-constraint
(c/param (c/tag "fn-arity119") 0)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/sum-c [c/strbuff-constraint
c/substr-constraint]))))})
55 (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity553")
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity553") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/StrBuffConstraint (RecurseWith empty-list c/no-symbol "")
c/strbuff-constraint
(c/StrBuffConstraint )empty-list c/no-symbol "")]
c/no-tail))})
c/OpaqueType (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity344")
(c/list-c [(c/multi [(c/ReifiedConstraint 18 (c/tag "Opaque")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity344") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/StrBuffConstraint <Opaque Pointer>empty-list c/no-symbol "")]
c/no-tail))})
c/FutureType (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity374")
(c/list-c [(c/multi [(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity374") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/StrBuffConstraint <Future empty-list c/no-symbol "")
c/strbuff-constraint
(c/StrBuffConstraint >empty-list c/no-symbol "")]
c/no-tail))})
c/PromiseType (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity352")
(c/list-c [(c/multi [c/promise-constraint
(c/param (c/tag "fn-arity352") 0)])]
c/no-tail)
;; returns
(c/sum-c [(c/list-c [(c/StrBuffConstraint <Promise empty-list c/no-symbol "")
c/strbuff-constraint
(c/StrBuffConstraint  empty-list c/no-symbol "")
c/strbuff-constraint
(c/StrBuffConstraint >empty-list c/no-symbol "")]
c/no-tail)
(c/list-c [(c/StrBuffConstraint <Promise empty-list c/no-symbol "")
c/strbuff-constraint
(c/StrBuffConstraint >empty-list c/no-symbol "")]
c/no-tail)]))})
c/HashCollisionNodeType (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity502")
(c/list-c [(c/multi [(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity502") 0)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/sum-c [c/strbuff-constraint
c/substr-constraint]))))})
56 (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity550")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity550") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/StrBuffConstraint (RecurseFinal empty-list c/no-symbol "")
c/strbuff-constraint
(c/StrBuffConstraint )empty-list c/no-symbol "")]
c/no-tail))})
c/ArrayNodeType (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity503")
(c/list-c [(c/multi [(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity503") 0)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/sum-c [c/strbuff-constraint
c/substr-constraint]))))})
c/AgentType (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity392")
(c/list-c [(c/multi [c/agent-constraint
(c/param (c/tag "fn-arity392") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/StrBuffConstraint <Agent>empty-list c/no-symbol "")]
c/no-tail))})
c/VectorType (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity322")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity322") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/StrBuffConstraint [empty-list c/no-symbol "")
c/strbuff-constraint
(c/StrBuffConstraint ]empty-list c/no-symbol "")]
c/no-tail))})
c/ListType (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity276")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity276") 0)
(c/list-c [] (c/coll-of-c c/top-type))])]
c/no-tail)
;; returns
(c/list-c [(c/StrBuffConstraint (empty-list c/no-symbol "")
(c/sum-c [(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "to-str")
(c/fn-c []
{1 (c/fn-arity
(c/tag "to-str")
(c/list-c [(c/param (c/tag "to-str") 0)]
c/no-tail)
;; returns
c/strbuff-constraint)})

{c/ListType (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity177")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity177") 0)])]
c/no-tail)
;; returns
c/strbuff-constraint)})
c/SubStringType (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity257")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity257") 0)
c/substr-constraint])]
c/no-tail)
;; returns
c/strbuff-constraint)})
c/StringBufferType (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity256")
(c/list-c [(c/multi [c/strbuff-constraint
(c/param (c/tag "fn-arity256") 0)])]
c/no-tail)
;; returns
(c/multi [c/strbuff-constraint
(c/param (c/tag "fn-arity256") 0)]))})})
[(c/multi [(c/type-op c/concat-op
(c/list-c [] (c/coll-of-c (c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "string-list")
(c/fn-c []
{1 (c/fn-arity
(c/tag "string-list")
(c/list-c [(c/param (c/tag "string-list") 0)]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/sum-c [c/strbuff-constraint
c/substr-constraint]))))})

{c/MaybeType (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity140")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity140") 0)])]
c/no-tail)
;; returns
(c/sum-c [(c/list-c [] (c/coll-of-c (c/sum-c [c/strbuff-constraint
c/substr-constraint])))
(c/list-c [(c/StrBuffConstraint <nothing>empty-list c/no-symbol "")]
c/no-tail)]))})
c/SymbolType (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity195")
(c/list-c [(c/multi [c/sym-constraint
(c/param (c/tag "fn-arity195") 0)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/sum-c [c/strbuff-constraint
c/substr-constraint]))))})
c/IntegerType (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity119")
(c/list-c [(c/multi [c/int-constraint
(c/param (c/tag "fn-arity119") 0)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/sum-c [c/strbuff-constraint
c/substr-constraint]))))})
c/SubStringType (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity248")
(c/list-c [(c/multi [c/substr-constraint
(c/param (c/tag "fn-arity248") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/multi [(c/param (c/tag "fn-arity248") 0)
c/substr-constraint])]
c/no-tail))})
c/StringBufferType (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity249")
(c/list-c [(c/multi [c/strbuff-constraint
(c/param (c/tag "fn-arity249") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/multi [(c/param (c/tag "fn-arity249") 0)
c/strbuff-constraint])]
c/no-tail))})})
[(c/sum-c [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity276") 0) c/no-args
)
(c/StrBuffConstraint , empty-list c/no-symbol "")])]
))) c/no-args
)
(c/coll-of-c c/top-type)])]
)
c/strbuff-constraint])
(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "to-str")
(c/fn-c []
{1 (c/fn-arity
(c/tag "to-str")
(c/list-c [(c/param (c/tag "to-str") 0)]
c/no-tail)
;; returns
c/strbuff-constraint)})

{c/ListType (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity177")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity177") 0)])]
c/no-tail)
;; returns
c/strbuff-constraint)})
c/SubStringType (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity257")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity257") 0)
c/substr-constraint])]
c/no-tail)
;; returns
c/strbuff-constraint)})
c/StringBufferType (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity256")
(c/list-c [(c/multi [c/strbuff-constraint
(c/param (c/tag "fn-arity256") 0)])]
c/no-tail)
;; returns
(c/multi [c/strbuff-constraint
(c/param (c/tag "fn-arity256") 0)]))})})
[(c/multi [(c/type-op c/concat-op
(c/list-c [] (c/coll-of-c (c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "string-list")
(c/fn-c []
{1 (c/fn-arity
(c/tag "string-list")
(c/list-c [(c/param (c/tag "string-list") 0)]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/sum-c [c/strbuff-constraint
c/substr-constraint]))))})

{c/MaybeType (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity140")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity140") 0)])]
c/no-tail)
;; returns
(c/sum-c [(c/list-c [] (c/coll-of-c (c/sum-c [c/strbuff-constraint
c/substr-constraint])))
(c/list-c [(c/StrBuffConstraint <nothing>empty-list c/no-symbol "")]
c/no-tail)]))})
c/SymbolType (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity195")
(c/list-c [(c/multi [c/sym-constraint
(c/param (c/tag "fn-arity195") 0)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/sum-c [c/strbuff-constraint
c/substr-constraint]))))})
c/IntegerType (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity119")
(c/list-c [(c/multi [c/int-constraint
(c/param (c/tag "fn-arity119") 0)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/sum-c [c/strbuff-constraint
c/substr-constraint]))))})
c/SubStringType (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity248")
(c/list-c [(c/multi [c/substr-constraint
(c/param (c/tag "fn-arity248") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/multi [(c/param (c/tag "fn-arity248") 0)
c/substr-constraint])]
c/no-tail))})
c/StringBufferType (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity249")
(c/list-c [(c/multi [c/strbuff-constraint
(c/param (c/tag "fn-arity249") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/multi [(c/param (c/tag "fn-arity249") 0)
c/strbuff-constraint])]
c/no-tail))})})
[(c/sum-c [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity276") 0) c/no-args
)
(c/StrBuffConstraint , empty-list c/no-symbol "")])]
))) c/no-args
)
(c/coll-of-c c/top-type)])]
)
c/substr-constraint])])
(c/StrBuffConstraint )empty-list c/no-symbol "")]
c/no-tail))})
c/FunctionType (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity285")
(c/list-c [(c/multi [c/fn-constraint
(c/param (c/tag "fn-arity285") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/StrBuffConstraint <Fn empty-list c/no-symbol "")
c/strbuff-constraint
(c/StrBuffConstraint >empty-list c/no-symbol "")]
c/no-tail))})
c/SubStringType (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity248")
(c/list-c [(c/multi [c/substr-constraint
(c/param (c/tag "fn-arity248") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/multi [(c/param (c/tag "fn-arity248") 0)
c/substr-constraint])]
c/no-tail))})
c/StringBufferType (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity249")
(c/list-c [(c/multi [c/strbuff-constraint
(c/param (c/tag "fn-arity249") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/multi [(c/param (c/tag "fn-arity249") 0)
c/strbuff-constraint])]
c/no-tail))})})] 

 result-type (c/NoValues [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c (c/vect-c [] (c/coll-of-c c/top-type))))
(c/fn-c []
{1 (c/fn-arity
(c/tag "string-list")
(c/list-c [(c/param (c/tag "string-list") 0)]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/sum-c [c/strbuff-constraint
c/substr-constraint]))))})]) 

 Conflicting assertions (1157)  at assertion-tests/flat-map-param.toc: 8
Function from    Function from
core: 1860                    
                              
                              


*** Conflicting assertions (785)  at assertion-tests/preserve-static-info-3.toc: 3
String 2from:    Integer from:                
                 preserve-static-info-3.toc: 7
                 preserve-static-info-3.toc: 6
                 core: 1208                   
                 core: 1210                   
                 core: 95                     
                 core: 97                     
                                              
                                              


***  Conflicting assertions (1335)  at assertion-tests/field-and-seq-conflict.toc: 10
field 'boom' requiredfrom:    Sequence from:                
                              field-and-seq-conflict.toc: 11
                              field-and-seq-conflict.toc: 7 
                                                            
                                                            


***  site 1151 assertion-tests/dynamic-field-type-7.toc: 26 
 (inc (.x (.z (f 'wur (Second 's (Third 9)))))) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity120")
(c/seq-c [(c/multi [c/int-constraint
(c/param (c/tag "fn-arity120") 0)])]
c/no-tail)
;; returns
c/int-constraint)}) 

 arg-cs [(c/SymConstraint w)] 

 result-type (c/NoValues [c/int-constraint
(c/SymConstraint w)]) 

 Conflicting assertions (1157)  at assertion-tests/dynamic-field-type-7.toc: 26
Integer from:    Symbol wfrom:               
core: 1210       dynamic-field-type-7.toc: 24
core: 95         dynamic-field-type-7.toc: 23
core: 97         dynamic-field-type-7.toc: 16
                 dynamic-field-type-7.toc: 20
                                             
                                             


***  site 1151 assertion-tests/propogate-through-seq.toc: 3 
 (map (seq (vector 'a 'b 2)) inc) 

 target-c (c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/HashSetType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity630")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity630") 1)
0
))
(c/param (c/tag "fn-arity630") 0)
(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity630") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
c/contents (c/type-op c/call-value-op
(c/param (c/tag "fn-arity630") 1) c/no-args
)
}
(c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity643")
(c/seq-c [(c/multi [(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity643") 0)])
(c/param (c/tag "fn-arity643") 1)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "get")
(c/fn-c []
{2 (c/fn-arity
(c/tag "get")
(c/list-c [(c/param (c/tag "get") 0)
(c/param (c/tag "get") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "get") 0) c/no-args
) empty-list c/no-symbol ""))})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity134")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity134") 0)])
(c/param (c/tag "fn-arity134") 1)]
c/no-tail)
;; returns
(c/multi [(c/param (c/tag "fn-arity134") 0)
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity134") 0) c/no-args
) empty-list c/no-symbol "")]))})
c/BitmapIndexedType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity483")
(c/list-c [(c/multi [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity483") 0)])
(c/param (c/tag "fn-arity483") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity483") 0) c/no-args
) empty-list c/no-symbol ""))})
53 (c/fn-c []
{2 (c/fn-arity
(c/tag "Sorting_get")
(c/list-c [(c/multi [(c/ReifiedConstraint 53 (c/tag "Sorting")
{(c/Field (c/tag ".v")) c/top-type
(c/Field (c/tag ".k")) c/top-type
}
{(c/Field (c/tag ".v")) c/top-type
c/contents c/top-type
(c/Field (c/tag ".k")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "Sorting_get") 0)])
(c/param (c/tag "Sorting_get") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/get-from-op
(c/param (c/tag "Sorting_get") 0)
[(c/param (c/tag "Sorting_get") 1)]
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "Sorting_get") 0) c/no-args
)]) empty-list c/no-symbol ""))})
55 (c/fn-c []
{2 (c/fn-arity
(c/tag "RecurseWith_get")
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "RecurseWith_get") 0)])
(c/param (c/tag "RecurseWith_get") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/get-from-op
(c/param (c/tag "RecurseWith_get") 0)
[(c/param (c/tag "RecurseWith_get") 1)]
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "RecurseWith_get") 0) c/no-args
)]) empty-list c/no-symbol ""))})
c/HashCollisionNodeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity481")
(c/list-c [(c/multi [(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity481") 0)])
(c/param (c/tag "fn-arity481") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity481") 0) c/no-args
) empty-list c/no-symbol ""))})
56 (c/fn-c []
{2 (c/fn-arity
(c/tag "RecurseFinal_get")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "RecurseFinal_get") 0)])
(c/param (c/tag "RecurseFinal_get") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/get-from-op
(c/param (c/tag "RecurseFinal_get") 0)
[(c/param (c/tag "RecurseFinal_get") 1)]
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "RecurseFinal_get") 0) c/no-args
)]) empty-list c/no-symbol ""))})
c/ArrayNodeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity482")
(c/list-c [(c/multi [(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity482") 0)])
(c/param (c/tag "fn-arity482") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity482") 0) c/no-args
) empty-list c/no-symbol ""))})
c/VectorType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity86")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity86") 0)])
(c/multi [c/int-constraint
(c/IntConstraint c/no-int 2147483647 0)
(c/param (c/tag "fn-arity86") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity86") 0) c/no-args
) empty-list c/no-symbol ""))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity269")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity269") 0)])
(c/multi [c/int-constraint
(c/param (c/tag "fn-arity269") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity269") 0) c/no-args
) empty-list c/no-symbol ""))})})
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity643") 0)
[(c/Field (c/tag ".set-map"))]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])])
(c/param (c/tag "fn-arity643") 1)]
))})
 empty-list c/no-symbol ""))})
c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
55 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity552")
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity552") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity552") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity552") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity553") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity552") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity551")
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity551") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity551") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity551") 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
55 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity552")
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity552") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity552") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity552") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity553") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity552") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol ""))})
c/FutureType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity368")
(c/list-c [(c/multi [(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity368") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity368") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
c/PromiseType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity347")
(c/list-c [(c/multi [c/promise-constraint
(c/param (c/tag "fn-arity347") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity347") 1)])]
c/no-tail)
;; returns
c/promise-constraint)})
56 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity549")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity549") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity549") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity549") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity548")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity548") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity548") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity548") 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/FutureType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity368")
(c/list-c [(c/multi [(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity368") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity368") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
c/PromiseType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity347")
(c/list-c [(c/multi [c/promise-constraint
(c/param (c/tag "fn-arity347") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity347") 1)])]
c/no-tail)
;; returns
c/promise-constraint)})
56 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity549")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity549") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity549") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity549") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol ""))})
c/VectorType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity304")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity304") 1)
0
))
(c/param (c/tag "fn-arity304") 0)
(c/vect-c [] (c/coll-of-c c/top-type))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity304") 1)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/type-op c/call-value-op
(c/param (c/tag "fn-arity304") 1) c/no-args
)))), 3 (c/fn-arity
(c/tag "fn-arity303")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity303") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 2)])]
c/no-tail)
;; returns
c/top-type)})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)])))), 3 (c/fn-arity
(c/tag "fn-arity163")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity163") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)])
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity548") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity548") 0)
[(c/Field (c/tag ".x"))]
)])]
)
(c/ReifiedConstraint 59 (c/tag "* RecurseFinal constructor at core: 2585 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag "* RecurseFinal constructor at core: 2585 *")
(c/seq-c [c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "RecurseFinal")
{}
{(c/Field (c/tag ".x")) (c/param (c/tag "* RecurseFinal constructor at core: 2585 *") 1)
c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")]
))})
c/VectorType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity304")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity304") 1)
0
))
(c/param (c/tag "fn-arity304") 0)
(c/vect-c [] (c/coll-of-c c/top-type))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity304") 1)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/type-op c/call-value-op
(c/param (c/tag "fn-arity304") 1) c/no-args
)))), 3 (c/fn-arity
(c/tag "fn-arity303")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity303") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 2)])]
c/no-tail)
;; returns
c/top-type)})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)])))), 3 (c/fn-arity
(c/tag "fn-arity163")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity163") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)])
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity551") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity553") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity552") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity551") 0)
[(c/Field (c/tag ".x"))]
)])]
)
(c/ReifiedConstraint 60 (c/tag "* RecurseWith constructor at core: 2597 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag "* RecurseWith constructor at core: 2597 *")
(c/seq-c [c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "RecurseWith")
{}
{(c/Field (c/tag ".x")) (c/param (c/tag "* RecurseWith constructor at core: 2597 *") 1)
c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")]
))})
c/FutureType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity368")
(c/list-c [(c/multi [(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity368") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity368") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
c/PromiseType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity347")
(c/list-c [(c/multi [c/promise-constraint
(c/param (c/tag "fn-arity347") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity347") 1)])]
c/no-tail)
;; returns
c/promise-constraint)})
56 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity549")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity549") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity549") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity549") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity548")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity548") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity548") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity548") 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/FutureType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity368")
(c/list-c [(c/multi [(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity368") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity368") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
c/PromiseType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity347")
(c/list-c [(c/multi [c/promise-constraint
(c/param (c/tag "fn-arity347") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity347") 1)])]
c/no-tail)
;; returns
c/promise-constraint)})
56 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity549")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity549") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity549") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity549") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol ""))})
c/VectorType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity304")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity304") 1)
0
))
(c/param (c/tag "fn-arity304") 0)
(c/vect-c [] (c/coll-of-c c/top-type))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity304") 1)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/type-op c/call-value-op
(c/param (c/tag "fn-arity304") 1) c/no-args
)))), 3 (c/fn-arity
(c/tag "fn-arity303")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity303") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 2)])]
c/no-tail)
;; returns
c/top-type)})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)])))), 3 (c/fn-arity
(c/tag "fn-arity163")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity163") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)])
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity548") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity548") 0)
[(c/Field (c/tag ".x"))]
)])]
)
(c/ReifiedConstraint 59 (c/tag "* RecurseFinal constructor at core: 2585 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag "* RecurseFinal constructor at core: 2585 *")
(c/seq-c [c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "RecurseFinal")
{}
{(c/Field (c/tag ".x")) (c/param (c/tag "* RecurseFinal constructor at core: 2585 *") 1)
c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")]
))})
c/VectorType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity304")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity304") 1)
0
))
(c/param (c/tag "fn-arity304") 0)
(c/vect-c [] (c/coll-of-c c/top-type))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity304") 1)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/type-op c/call-value-op
(c/param (c/tag "fn-arity304") 1) c/no-args
)))), 3 (c/fn-arity
(c/tag "fn-arity303")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity303") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 2)])]
c/no-tail)
;; returns
c/top-type)})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)])))), 3 (c/fn-arity
(c/tag "fn-arity163")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity163") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)])
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)]))})}) 

 arg-cs [(c/list-c [(c/SymConstraint a)
(c/SymConstraint b)
(c/IntConstraint 2 2147483647 -2147483648)]
c/no-tail), (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity120")
(c/seq-c [(c/multi [c/int-constraint
(c/param (c/tag "fn-arity120") 0)])]
c/no-tail)
;; returns
c/int-constraint)})] 

 result-type (c/NoValues [c/int-constraint
(c/SymConstraint a)]) 

 Conflicting assertions (1157)  at assertion-tests/propogate-through-seq.toc: 3
Integer from:    Symbol afrom:
core: 1210                    
core: 95                      
core: 97                      
                              
                              


***  site 1151 assertion-tests/proto-fn-param.toc: 3 
 (nth (vector 1 2 3) "2") 

 target-c (c/ProtoImpls
(c/tag "nth")
(c/fn-c []
{2 (c/fn-arity
(c/tag "nth")
(c/list-c [(c/param (c/tag "nth") 0)
(c/multi [c/int-constraint
(c/param (c/tag "nth") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "nth") 0) c/no-args
) empty-list c/no-symbol ""))})

{c/VectorType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity307")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity307") 0)])
(c/multi [(c/param (c/tag "fn-arity307") 1)
(c/IntConstraint c/no-int 2147483647 0)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity307") 0) c/no-args
) empty-list c/no-symbol ""))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity167")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity167") 0)])
(c/multi [c/int-constraint
(c/param (c/tag "fn-arity167") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity167") 0) c/no-args
) empty-list c/no-symbol ""))})
c/SubStringType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity212")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity212") 0)
c/substr-constraint])
(c/multi [(c/param (c/tag "fn-arity212") 1)
(c/IntConstraint c/no-int 2147483647 0)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity212") 0) c/no-args
)
c/substr-constraint]) empty-list c/no-symbol ""))})
c/StringBufferType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity213")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity213") 0)
c/strbuff-constraint])
(c/multi [(c/param (c/tag "fn-arity213") 1)
(c/IntConstraint c/no-int 2147483647 0)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity213") 0) c/no-args
)
c/substr-constraint]) empty-list c/no-symbol ""))})}) 

 arg-cs [(c/vect-c [(c/IntConstraint 1 2147483647 -2147483648)
(c/IntConstraint 2 2147483647 -2147483648)
(c/IntConstraint 3 2147483647 -2147483648)]
c/no-tail), (c/StrBuffConstraint 2empty-list c/no-symbol "")] 

 result-type (c/NoValues [(c/StrBuffConstraint 2empty-list c/no-symbol "")
(c/IntConstraint c/no-int 2147483647 0)]) 

 Conflicting assertions (1157)  at assertion-tests/proto-fn-param.toc: 3
String 2from:    Integer from:
                 core: 1030   
                              
                              


*** Conflicting assertions (785)  at assertion-tests/rest-of-vect.toc: 3
Symbol afrom:    Integer from:
                 core: 1208   
                 core: 1210   
                 core: 95     
                 core: 97     
                              
                              


*** Conflicting assertions (785)  at assertion-tests/rest-of-list.toc: 3
Symbol afrom:    Integer from:
                 core: 1208   
                 core: 1210   
                 core: 95     
                 core: 97     
                              
                              


***  site 1151 assertion-tests/propogate-through-vec.toc: 3 
 (map (vec (list 'a 'b 2)) inc) 

 target-c (c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/HashSetType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity630")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity630") 1)
0
))
(c/param (c/tag "fn-arity630") 0)
(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity630") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
c/contents (c/type-op c/call-value-op
(c/param (c/tag "fn-arity630") 1) c/no-args
)
}
(c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity643")
(c/seq-c [(c/multi [(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity643") 0)])
(c/param (c/tag "fn-arity643") 1)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "get")
(c/fn-c []
{2 (c/fn-arity
(c/tag "get")
(c/list-c [(c/param (c/tag "get") 0)
(c/param (c/tag "get") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "get") 0) c/no-args
) empty-list c/no-symbol ""))})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity134")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity134") 0)])
(c/param (c/tag "fn-arity134") 1)]
c/no-tail)
;; returns
(c/multi [(c/param (c/tag "fn-arity134") 0)
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity134") 0) c/no-args
) empty-list c/no-symbol "")]))})
c/BitmapIndexedType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity483")
(c/list-c [(c/multi [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity483") 0)])
(c/param (c/tag "fn-arity483") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity483") 0) c/no-args
) empty-list c/no-symbol ""))})
53 (c/fn-c []
{2 (c/fn-arity
(c/tag "Sorting_get")
(c/list-c [(c/multi [(c/ReifiedConstraint 53 (c/tag "Sorting")
{(c/Field (c/tag ".v")) c/top-type
(c/Field (c/tag ".k")) c/top-type
}
{(c/Field (c/tag ".v")) c/top-type
c/contents c/top-type
(c/Field (c/tag ".k")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "Sorting_get") 0)])
(c/param (c/tag "Sorting_get") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/get-from-op
(c/param (c/tag "Sorting_get") 0)
[(c/param (c/tag "Sorting_get") 1)]
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "Sorting_get") 0) c/no-args
)]) empty-list c/no-symbol ""))})
55 (c/fn-c []
{2 (c/fn-arity
(c/tag "RecurseWith_get")
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "RecurseWith_get") 0)])
(c/param (c/tag "RecurseWith_get") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/get-from-op
(c/param (c/tag "RecurseWith_get") 0)
[(c/param (c/tag "RecurseWith_get") 1)]
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "RecurseWith_get") 0) c/no-args
)]) empty-list c/no-symbol ""))})
c/HashCollisionNodeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity481")
(c/list-c [(c/multi [(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity481") 0)])
(c/param (c/tag "fn-arity481") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity481") 0) c/no-args
) empty-list c/no-symbol ""))})
56 (c/fn-c []
{2 (c/fn-arity
(c/tag "RecurseFinal_get")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "RecurseFinal_get") 0)])
(c/param (c/tag "RecurseFinal_get") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/get-from-op
(c/param (c/tag "RecurseFinal_get") 0)
[(c/param (c/tag "RecurseFinal_get") 1)]
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "RecurseFinal_get") 0) c/no-args
)]) empty-list c/no-symbol ""))})
c/ArrayNodeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity482")
(c/list-c [(c/multi [(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity482") 0)])
(c/param (c/tag "fn-arity482") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity482") 0) c/no-args
) empty-list c/no-symbol ""))})
c/VectorType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity86")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity86") 0)])
(c/multi [c/int-constraint
(c/IntConstraint c/no-int 2147483647 0)
(c/param (c/tag "fn-arity86") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity86") 0) c/no-args
) empty-list c/no-symbol ""))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity269")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity269") 0)])
(c/multi [c/int-constraint
(c/param (c/tag "fn-arity269") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity269") 0) c/no-args
) empty-list c/no-symbol ""))})})
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity643") 0)
[(c/Field (c/tag ".set-map"))]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])])
(c/param (c/tag "fn-arity643") 1)]
))})
 empty-list c/no-symbol ""))})
c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
55 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity552")
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity552") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity552") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity552") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity553") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity552") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity551")
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity551") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity551") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity551") 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
55 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity552")
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity552") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity552") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity552") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity553") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity552") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol ""))})
c/FutureType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity368")
(c/list-c [(c/multi [(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity368") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity368") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
c/PromiseType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity347")
(c/list-c [(c/multi [c/promise-constraint
(c/param (c/tag "fn-arity347") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity347") 1)])]
c/no-tail)
;; returns
c/promise-constraint)})
56 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity549")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity549") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity549") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity549") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity548")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity548") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity548") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity548") 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/FutureType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity368")
(c/list-c [(c/multi [(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity368") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity368") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
c/PromiseType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity347")
(c/list-c [(c/multi [c/promise-constraint
(c/param (c/tag "fn-arity347") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity347") 1)])]
c/no-tail)
;; returns
c/promise-constraint)})
56 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity549")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity549") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity549") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity549") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol ""))})
c/VectorType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity304")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity304") 1)
0
))
(c/param (c/tag "fn-arity304") 0)
(c/vect-c [] (c/coll-of-c c/top-type))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity304") 1)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/type-op c/call-value-op
(c/param (c/tag "fn-arity304") 1) c/no-args
)))), 3 (c/fn-arity
(c/tag "fn-arity303")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity303") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 2)])]
c/no-tail)
;; returns
c/top-type)})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)])))), 3 (c/fn-arity
(c/tag "fn-arity163")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity163") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)])
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity548") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity548") 0)
[(c/Field (c/tag ".x"))]
)])]
)
(c/ReifiedConstraint 59 (c/tag "* RecurseFinal constructor at core: 2585 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag "* RecurseFinal constructor at core: 2585 *")
(c/seq-c [c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "RecurseFinal")
{}
{(c/Field (c/tag ".x")) (c/param (c/tag "* RecurseFinal constructor at core: 2585 *") 1)
c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")]
))})
c/VectorType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity304")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity304") 1)
0
))
(c/param (c/tag "fn-arity304") 0)
(c/vect-c [] (c/coll-of-c c/top-type))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity304") 1)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/type-op c/call-value-op
(c/param (c/tag "fn-arity304") 1) c/no-args
)))), 3 (c/fn-arity
(c/tag "fn-arity303")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity303") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 2)])]
c/no-tail)
;; returns
c/top-type)})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)])))), 3 (c/fn-arity
(c/tag "fn-arity163")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity163") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)])
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity551") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity553") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity552") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity551") 0)
[(c/Field (c/tag ".x"))]
)])]
)
(c/ReifiedConstraint 60 (c/tag "* RecurseWith constructor at core: 2597 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag "* RecurseWith constructor at core: 2597 *")
(c/seq-c [c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "RecurseWith")
{}
{(c/Field (c/tag ".x")) (c/param (c/tag "* RecurseWith constructor at core: 2597 *") 1)
c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")]
))})
c/FutureType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity368")
(c/list-c [(c/multi [(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity368") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity368") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
c/PromiseType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity347")
(c/list-c [(c/multi [c/promise-constraint
(c/param (c/tag "fn-arity347") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity347") 1)])]
c/no-tail)
;; returns
c/promise-constraint)})
56 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity549")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity549") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity549") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity549") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity548")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity548") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity548") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity548") 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/FutureType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity368")
(c/list-c [(c/multi [(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity368") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity368") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
c/PromiseType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity347")
(c/list-c [(c/multi [c/promise-constraint
(c/param (c/tag "fn-arity347") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity347") 1)])]
c/no-tail)
;; returns
c/promise-constraint)})
56 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity549")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity549") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity549") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity549") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol ""))})
c/VectorType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity304")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity304") 1)
0
))
(c/param (c/tag "fn-arity304") 0)
(c/vect-c [] (c/coll-of-c c/top-type))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity304") 1)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/type-op c/call-value-op
(c/param (c/tag "fn-arity304") 1) c/no-args
)))), 3 (c/fn-arity
(c/tag "fn-arity303")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity303") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 2)])]
c/no-tail)
;; returns
c/top-type)})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)])))), 3 (c/fn-arity
(c/tag "fn-arity163")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity163") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)])
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity548") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity548") 0)
[(c/Field (c/tag ".x"))]
)])]
)
(c/ReifiedConstraint 59 (c/tag "* RecurseFinal constructor at core: 2585 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag "* RecurseFinal constructor at core: 2585 *")
(c/seq-c [c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "RecurseFinal")
{}
{(c/Field (c/tag ".x")) (c/param (c/tag "* RecurseFinal constructor at core: 2585 *") 1)
c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")]
))})
c/VectorType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity304")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity304") 1)
0
))
(c/param (c/tag "fn-arity304") 0)
(c/vect-c [] (c/coll-of-c c/top-type))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity304") 1)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/type-op c/call-value-op
(c/param (c/tag "fn-arity304") 1) c/no-args
)))), 3 (c/fn-arity
(c/tag "fn-arity303")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity303") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 2)])]
c/no-tail)
;; returns
c/top-type)})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)])))), 3 (c/fn-arity
(c/tag "fn-arity163")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity163") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)])
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)]))})}) 

 arg-cs [(c/vect-c [(c/SymConstraint a)
(c/SymConstraint b)
(c/IntConstraint 2 2147483647 -2147483648)]
c/no-tail), (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity120")
(c/seq-c [(c/multi [c/int-constraint
(c/param (c/tag "fn-arity120") 0)])]
c/no-tail)
;; returns
c/int-constraint)})] 

 result-type (c/NoValues [c/int-constraint
(c/SymConstraint a)]) 

 Conflicting assertions (1157)  at assertion-tests/propogate-through-vec.toc: 3
Integer from:    Symbol afrom:
core: 1210                    
core: 95                      
core: 97                      
                              
                              


***  site 1151 assertion-tests/dynamic-field-type-8.toc: 28 
 (inc (.x (.z (f 'wur (Second 's (Third 9)) 'q)))) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity120")
(c/seq-c [(c/multi [c/int-constraint
(c/param (c/tag "fn-arity120") 0)])]
c/no-tail)
;; returns
c/int-constraint)}) 

 arg-cs [(c/SymConstraint q)] 

 result-type (c/NoValues [c/int-constraint
(c/SymConstraint q)]) 

 Conflicting assertions (1157)  at assertion-tests/dynamic-field-type-8.toc: 28
Integer from:    Symbol qfrom:               
core: 1210       dynamic-field-type-8.toc: 26
core: 95         dynamic-field-type-8.toc: 25
core: 97                                     
                                             
                                             


***  site 1151 assertion-tests/get-field.toc: 8 
 (map (get (Bogus 8) .x) symbol) 

 target-c (c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/HashSetType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity630")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity630") 1)
0
))
(c/param (c/tag "fn-arity630") 0)
(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity630") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
c/contents (c/type-op c/call-value-op
(c/param (c/tag "fn-arity630") 1) c/no-args
)
}
(c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity643")
(c/seq-c [(c/multi [(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity643") 0)])
(c/param (c/tag "fn-arity643") 1)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "get")
(c/fn-c []
{2 (c/fn-arity
(c/tag "get")
(c/list-c [(c/param (c/tag "get") 0)
(c/param (c/tag "get") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "get") 0) c/no-args
) empty-list c/no-symbol ""))})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity134")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity134") 0)])
(c/param (c/tag "fn-arity134") 1)]
c/no-tail)
;; returns
(c/multi [(c/param (c/tag "fn-arity134") 0)
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity134") 0) c/no-args
) empty-list c/no-symbol "")]))})
c/BitmapIndexedType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity483")
(c/list-c [(c/multi [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity483") 0)])
(c/param (c/tag "fn-arity483") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity483") 0) c/no-args
) empty-list c/no-symbol ""))})
53 (c/fn-c []
{2 (c/fn-arity
(c/tag "Sorting_get")
(c/list-c [(c/multi [(c/ReifiedConstraint 53 (c/tag "Sorting")
{(c/Field (c/tag ".v")) c/top-type
(c/Field (c/tag ".k")) c/top-type
}
{(c/Field (c/tag ".v")) c/top-type
c/contents c/top-type
(c/Field (c/tag ".k")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "Sorting_get") 0)])
(c/param (c/tag "Sorting_get") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/get-from-op
(c/param (c/tag "Sorting_get") 0)
[(c/param (c/tag "Sorting_get") 1)]
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "Sorting_get") 0) c/no-args
)]) empty-list c/no-symbol ""))})
55 (c/fn-c []
{2 (c/fn-arity
(c/tag "RecurseWith_get")
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "RecurseWith_get") 0)])
(c/param (c/tag "RecurseWith_get") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/get-from-op
(c/param (c/tag "RecurseWith_get") 0)
[(c/param (c/tag "RecurseWith_get") 1)]
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "RecurseWith_get") 0) c/no-args
)]) empty-list c/no-symbol ""))})
c/HashCollisionNodeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity481")
(c/list-c [(c/multi [(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity481") 0)])
(c/param (c/tag "fn-arity481") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity481") 0) c/no-args
) empty-list c/no-symbol ""))})
56 (c/fn-c []
{2 (c/fn-arity
(c/tag "RecurseFinal_get")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "RecurseFinal_get") 0)])
(c/param (c/tag "RecurseFinal_get") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/get-from-op
(c/param (c/tag "RecurseFinal_get") 0)
[(c/param (c/tag "RecurseFinal_get") 1)]
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "RecurseFinal_get") 0) c/no-args
)]) empty-list c/no-symbol ""))})
c/ArrayNodeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity482")
(c/list-c [(c/multi [(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity482") 0)])
(c/param (c/tag "fn-arity482") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity482") 0) c/no-args
) empty-list c/no-symbol ""))})
c/VectorType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity86")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity86") 0)])
(c/multi [c/int-constraint
(c/IntConstraint c/no-int 2147483647 0)
(c/param (c/tag "fn-arity86") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity86") 0) c/no-args
) empty-list c/no-symbol ""))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity269")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity269") 0)])
(c/multi [c/int-constraint
(c/param (c/tag "fn-arity269") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity269") 0) c/no-args
) empty-list c/no-symbol ""))})})
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity643") 0)
[(c/Field (c/tag ".set-map"))]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])])
(c/param (c/tag "fn-arity643") 1)]
))})
 empty-list c/no-symbol ""))})
c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
55 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity552")
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity552") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity552") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity552") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity553") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity552") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity551")
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity551") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity551") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity551") 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
55 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity552")
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity552") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity552") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity552") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity553") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity552") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol ""))})
c/FutureType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity368")
(c/list-c [(c/multi [(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity368") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity368") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
c/PromiseType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity347")
(c/list-c [(c/multi [c/promise-constraint
(c/param (c/tag "fn-arity347") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity347") 1)])]
c/no-tail)
;; returns
c/promise-constraint)})
56 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity549")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity549") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity549") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity549") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity548")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity548") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity548") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity548") 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/FutureType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity368")
(c/list-c [(c/multi [(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity368") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity368") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
c/PromiseType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity347")
(c/list-c [(c/multi [c/promise-constraint
(c/param (c/tag "fn-arity347") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity347") 1)])]
c/no-tail)
;; returns
c/promise-constraint)})
56 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity549")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity549") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity549") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity549") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol ""))})
c/VectorType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity304")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity304") 1)
0
))
(c/param (c/tag "fn-arity304") 0)
(c/vect-c [] (c/coll-of-c c/top-type))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity304") 1)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/type-op c/call-value-op
(c/param (c/tag "fn-arity304") 1) c/no-args
)))), 3 (c/fn-arity
(c/tag "fn-arity303")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity303") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 2)])]
c/no-tail)
;; returns
c/top-type)})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)])))), 3 (c/fn-arity
(c/tag "fn-arity163")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity163") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)])
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity548") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity548") 0)
[(c/Field (c/tag ".x"))]
)])]
)
(c/ReifiedConstraint 59 (c/tag "* RecurseFinal constructor at core: 2585 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag "* RecurseFinal constructor at core: 2585 *")
(c/seq-c [c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "RecurseFinal")
{}
{(c/Field (c/tag ".x")) (c/param (c/tag "* RecurseFinal constructor at core: 2585 *") 1)
c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")]
))})
c/VectorType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity304")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity304") 1)
0
))
(c/param (c/tag "fn-arity304") 0)
(c/vect-c [] (c/coll-of-c c/top-type))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity304") 1)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/type-op c/call-value-op
(c/param (c/tag "fn-arity304") 1) c/no-args
)))), 3 (c/fn-arity
(c/tag "fn-arity303")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity303") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 2)])]
c/no-tail)
;; returns
c/top-type)})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)])))), 3 (c/fn-arity
(c/tag "fn-arity163")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity163") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)])
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity551") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity553") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity552") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity551") 0)
[(c/Field (c/tag ".x"))]
)])]
)
(c/ReifiedConstraint 60 (c/tag "* RecurseWith constructor at core: 2597 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag "* RecurseWith constructor at core: 2597 *")
(c/seq-c [c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "RecurseWith")
{}
{(c/Field (c/tag ".x")) (c/param (c/tag "* RecurseWith constructor at core: 2597 *") 1)
c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")]
))})
c/FutureType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity368")
(c/list-c [(c/multi [(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity368") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity368") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
c/PromiseType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity347")
(c/list-c [(c/multi [c/promise-constraint
(c/param (c/tag "fn-arity347") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity347") 1)])]
c/no-tail)
;; returns
c/promise-constraint)})
56 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity549")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity549") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity549") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity549") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity548")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity548") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity548") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity548") 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/FutureType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity368")
(c/list-c [(c/multi [(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity368") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity368") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
c/PromiseType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity347")
(c/list-c [(c/multi [c/promise-constraint
(c/param (c/tag "fn-arity347") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity347") 1)])]
c/no-tail)
;; returns
c/promise-constraint)})
56 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity549")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity549") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity549") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity549") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol ""))})
c/VectorType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity304")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity304") 1)
0
))
(c/param (c/tag "fn-arity304") 0)
(c/vect-c [] (c/coll-of-c c/top-type))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity304") 1)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/type-op c/call-value-op
(c/param (c/tag "fn-arity304") 1) c/no-args
)))), 3 (c/fn-arity
(c/tag "fn-arity303")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity303") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 2)])]
c/no-tail)
;; returns
c/top-type)})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)])))), 3 (c/fn-arity
(c/tag "fn-arity163")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity163") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)])
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity548") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity548") 0)
[(c/Field (c/tag ".x"))]
)])]
)
(c/ReifiedConstraint 59 (c/tag "* RecurseFinal constructor at core: 2585 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag "* RecurseFinal constructor at core: 2585 *")
(c/seq-c [c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "RecurseFinal")
{}
{(c/Field (c/tag ".x")) (c/param (c/tag "* RecurseFinal constructor at core: 2585 *") 1)
c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")]
))})
c/VectorType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity304")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity304") 1)
0
))
(c/param (c/tag "fn-arity304") 0)
(c/vect-c [] (c/coll-of-c c/top-type))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity304") 1)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/type-op c/call-value-op
(c/param (c/tag "fn-arity304") 1) c/no-args
)))), 3 (c/fn-arity
(c/tag "fn-arity303")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity303") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 2)])]
c/no-tail)
;; returns
c/top-type)})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)])))), 3 (c/fn-arity
(c/tag "fn-arity163")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity163") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)])
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)]))})}) 

 arg-cs [(c/MaybeConstraint (c/IntConstraint 8 2147483647 -2147483648) empty-list c/no-symbol ""), (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity45")
(c/seq-c [(c/multi [(c/sum-c [c/strbuff-constraint
c/substr-constraint])
(c/param (c/tag "fn-arity45") 0)])]
c/no-tail)
;; returns
c/sym-constraint)})] 

 result-type (c/NoValues [c/strbuff-constraint
(c/IntConstraint 8 2147483647 -2147483648)]) 

 Conflicting assertions (1157)  at assertion-tests/get-field.toc: 8
String from:    Integer 8from:  
core: 350       get-field.toc: 3
core: 22                        
                                
                                


***  site 1151 assertion-tests/return-generic-1.toc: 8 
 (bloop "9") 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity856")
(c/seq-c [(c/param (c/tag "fn-arity856") 0)]
c/no-tail)
;; returns
(c/vect-c [(c/multi [c/int-constraint
(c/param (c/tag "fn-arity856") 0)])]
c/no-tail))}) 

 arg-cs [(c/StrBuffConstraint 9empty-list c/no-symbol "")] 

 result-type (c/NoValues [c/int-constraint
(c/StrBuffConstraint 9empty-list c/no-symbol "")]) 

 Conflicting assertions (1157)  at assertion-tests/return-generic-1.toc: 8
Integer from:              String 9from:
return-generic-1.toc: 3                 
                                        
                                        


***  site 1151 assertion-tests/proto-fn-constraint-prop.toc: 14 
 (g (SomeType 'nop) "62") 

 target-c (c/ProtoImpls
(c/tag "g")
(c/fn-c []
{2 (c/fn-arity
(c/tag "g")
(c/list-c [c/top-type
(c/param (c/tag "g") 1)]
c/no-tail)
;; returns
c/top-type)})

{182 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity853")
(c/list-c [(c/multi [(c/ReifiedConstraint 182 (c/tag "SomeType")
{(c/Field (c/tag ".y")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".y")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity853") 0)])
(c/multi [c/int-constraint
(c/param (c/tag "fn-arity853") 1)])]
c/no-tail)
;; returns
c/int-constraint)})}) 

 arg-cs [(c/ReifiedConstraint 182 (c/tag "SomeType")
{(c/Field (c/tag ".y")) c/top-type
}
{c/contents c/top-type
(c/Field (c/tag ".y")) (c/SymConstraint nop)
}
c/fn-constraint
 empty-list c/no-symbol ""), (c/StrBuffConstraint 62empty-list c/no-symbol "")] 

 result-type (c/NoValues [c/int-constraint
(c/StrBuffConstraint 62empty-list c/no-symbol "")]) 

 Conflicting assertions (1157)  at assertion-tests/proto-fn-constraint-prop.toc: 14
Integer from:                      String 62from:
proto-fn-constraint-prop.toc: 2                  
proto-fn-constraint-prop.toc: 3                  
core: 1208                                       
core: 1210                                       
core: 95                                         
core: 97                                         
                                                 
                                                 


*** An implementation for 'assoc' already exists
 Redefinition attempted at assertion-tests/preserve-asserts.toc: 2

***  Conflicting assertions (1335)  at assertion-tests/return-sum-type.toc: 2
String from:    ArrayNodefrom:
                              
                              


***  site 1151 assertion-tests/simple-conflict.toc: 9 
 (bad "one") 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity860")
(c/seq-c [(c/multi [c/int-constraint
(c/param (c/tag "fn-arity860") 0)])]
c/no-tail)
;; returns
(c/vect-c [c/int-constraint]
c/no-tail))}) 

 arg-cs [(c/StrBuffConstraint oneempty-list c/no-symbol "")] 

 result-type (c/NoValues [c/int-constraint
(c/StrBuffConstraint oneempty-list c/no-symbol "")]) 

 Conflicting assertions (1157)  at assertion-tests/simple-conflict.toc: 9
Integer from:             String onefrom:
simple-conflict.toc: 4                   
simple-conflict.toc: 3                   
                                         
                                         


***  site 1151 assertion-tests/static-fixed-dynamic-result-type-2.toc: 9 
 (inc (g 'nope 'bogus)) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity120")
(c/seq-c [(c/multi [c/int-constraint
(c/param (c/tag "fn-arity120") 0)])]
c/no-tail)
;; returns
c/int-constraint)}) 

 arg-cs [(c/SymConstraint bogus)] 

 result-type (c/NoValues [c/int-constraint
(c/SymConstraint bogus)]) 

 Conflicting assertions (1157)  at assertion-tests/static-fixed-dynamic-result-type-2.toc: 9
Integer from:    Symbol bogusfrom:
core: 1210                        
core: 95                          
core: 97                          
                                  
                                  


***  site 1151 assertion-tests/static-fixed-dynamic-result-type-1.toc: 6 
 (map (f 'bogus) inc) 

 target-c (c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/HashSetType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity630")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity630") 1)
0
))
(c/param (c/tag "fn-arity630") 0)
(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity630") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
c/contents (c/type-op c/call-value-op
(c/param (c/tag "fn-arity630") 1) c/no-args
)
}
(c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity643")
(c/seq-c [(c/multi [(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity643") 0)])
(c/param (c/tag "fn-arity643") 1)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "get")
(c/fn-c []
{2 (c/fn-arity
(c/tag "get")
(c/list-c [(c/param (c/tag "get") 0)
(c/param (c/tag "get") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "get") 0) c/no-args
) empty-list c/no-symbol ""))})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity134")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity134") 0)])
(c/param (c/tag "fn-arity134") 1)]
c/no-tail)
;; returns
(c/multi [(c/param (c/tag "fn-arity134") 0)
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity134") 0) c/no-args
) empty-list c/no-symbol "")]))})
c/BitmapIndexedType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity483")
(c/list-c [(c/multi [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity483") 0)])
(c/param (c/tag "fn-arity483") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity483") 0) c/no-args
) empty-list c/no-symbol ""))})
53 (c/fn-c []
{2 (c/fn-arity
(c/tag "Sorting_get")
(c/list-c [(c/multi [(c/ReifiedConstraint 53 (c/tag "Sorting")
{(c/Field (c/tag ".v")) c/top-type
(c/Field (c/tag ".k")) c/top-type
}
{(c/Field (c/tag ".v")) c/top-type
c/contents c/top-type
(c/Field (c/tag ".k")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "Sorting_get") 0)])
(c/param (c/tag "Sorting_get") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/get-from-op
(c/param (c/tag "Sorting_get") 0)
[(c/param (c/tag "Sorting_get") 1)]
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "Sorting_get") 0) c/no-args
)]) empty-list c/no-symbol ""))})
55 (c/fn-c []
{2 (c/fn-arity
(c/tag "RecurseWith_get")
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "RecurseWith_get") 0)])
(c/param (c/tag "RecurseWith_get") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/get-from-op
(c/param (c/tag "RecurseWith_get") 0)
[(c/param (c/tag "RecurseWith_get") 1)]
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "RecurseWith_get") 0) c/no-args
)]) empty-list c/no-symbol ""))})
c/HashCollisionNodeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity481")
(c/list-c [(c/multi [(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity481") 0)])
(c/param (c/tag "fn-arity481") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity481") 0) c/no-args
) empty-list c/no-symbol ""))})
56 (c/fn-c []
{2 (c/fn-arity
(c/tag "RecurseFinal_get")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "RecurseFinal_get") 0)])
(c/param (c/tag "RecurseFinal_get") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/get-from-op
(c/param (c/tag "RecurseFinal_get") 0)
[(c/param (c/tag "RecurseFinal_get") 1)]
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "RecurseFinal_get") 0) c/no-args
)]) empty-list c/no-symbol ""))})
c/ArrayNodeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity482")
(c/list-c [(c/multi [(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity482") 0)])
(c/param (c/tag "fn-arity482") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity482") 0) c/no-args
) empty-list c/no-symbol ""))})
c/VectorType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity86")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity86") 0)])
(c/multi [c/int-constraint
(c/IntConstraint c/no-int 2147483647 0)
(c/param (c/tag "fn-arity86") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity86") 0) c/no-args
) empty-list c/no-symbol ""))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity269")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity269") 0)])
(c/multi [c/int-constraint
(c/param (c/tag "fn-arity269") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity269") 0) c/no-args
) empty-list c/no-symbol ""))})})
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity643") 0)
[(c/Field (c/tag ".set-map"))]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])])
(c/param (c/tag "fn-arity643") 1)]
))})
 empty-list c/no-symbol ""))})
c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
55 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity552")
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity552") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity552") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity552") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity553") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity552") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity551")
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity551") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity551") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity551") 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
55 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity552")
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity552") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity552") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity552") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity553") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity552") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol ""))})
c/FutureType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity368")
(c/list-c [(c/multi [(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity368") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity368") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
c/PromiseType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity347")
(c/list-c [(c/multi [c/promise-constraint
(c/param (c/tag "fn-arity347") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity347") 1)])]
c/no-tail)
;; returns
c/promise-constraint)})
56 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity549")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity549") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity549") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity549") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity548")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity548") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity548") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity548") 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/FutureType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity368")
(c/list-c [(c/multi [(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity368") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity368") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
c/PromiseType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity347")
(c/list-c [(c/multi [c/promise-constraint
(c/param (c/tag "fn-arity347") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity347") 1)])]
c/no-tail)
;; returns
c/promise-constraint)})
56 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity549")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity549") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity549") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity549") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol ""))})
c/VectorType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity304")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity304") 1)
0
))
(c/param (c/tag "fn-arity304") 0)
(c/vect-c [] (c/coll-of-c c/top-type))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity304") 1)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/type-op c/call-value-op
(c/param (c/tag "fn-arity304") 1) c/no-args
)))), 3 (c/fn-arity
(c/tag "fn-arity303")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity303") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 2)])]
c/no-tail)
;; returns
c/top-type)})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)])))), 3 (c/fn-arity
(c/tag "fn-arity163")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity163") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)])
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity548") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity548") 0)
[(c/Field (c/tag ".x"))]
)])]
)
(c/ReifiedConstraint 59 (c/tag "* RecurseFinal constructor at core: 2585 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag "* RecurseFinal constructor at core: 2585 *")
(c/seq-c [c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "RecurseFinal")
{}
{(c/Field (c/tag ".x")) (c/param (c/tag "* RecurseFinal constructor at core: 2585 *") 1)
c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")]
))})
c/VectorType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity304")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity304") 1)
0
))
(c/param (c/tag "fn-arity304") 0)
(c/vect-c [] (c/coll-of-c c/top-type))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity304") 1)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/type-op c/call-value-op
(c/param (c/tag "fn-arity304") 1) c/no-args
)))), 3 (c/fn-arity
(c/tag "fn-arity303")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity303") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 2)])]
c/no-tail)
;; returns
c/top-type)})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)])))), 3 (c/fn-arity
(c/tag "fn-arity163")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity163") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)])
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity551") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity553") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity552") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity551") 0)
[(c/Field (c/tag ".x"))]
)])]
)
(c/ReifiedConstraint 60 (c/tag "* RecurseWith constructor at core: 2597 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag "* RecurseWith constructor at core: 2597 *")
(c/seq-c [c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "RecurseWith")
{}
{(c/Field (c/tag ".x")) (c/param (c/tag "* RecurseWith constructor at core: 2597 *") 1)
c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")]
))})
c/FutureType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity368")
(c/list-c [(c/multi [(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity368") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity368") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
c/PromiseType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity347")
(c/list-c [(c/multi [c/promise-constraint
(c/param (c/tag "fn-arity347") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity347") 1)])]
c/no-tail)
;; returns
c/promise-constraint)})
56 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity549")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity549") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity549") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity549") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity548")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity548") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity548") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity548") 2)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/FutureType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity368")
(c/list-c [(c/multi [(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity368") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity368") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 16 (c/tag "Future")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
c/PromiseType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity347")
(c/list-c [(c/multi [c/promise-constraint
(c/param (c/tag "fn-arity347") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity347") 1)])]
c/no-tail)
;; returns
c/promise-constraint)})
56 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity549")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity549") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity549") 1)])]
c/no-tail)
;; returns
(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/type-op c/call-value-op
(c/param (c/tag "fn-arity549") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)])]
)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol ""))})
c/VectorType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity304")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity304") 1)
0
))
(c/param (c/tag "fn-arity304") 0)
(c/vect-c [] (c/coll-of-c c/top-type))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity304") 1)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/type-op c/call-value-op
(c/param (c/tag "fn-arity304") 1) c/no-args
)))), 3 (c/fn-arity
(c/tag "fn-arity303")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity303") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 2)])]
c/no-tail)
;; returns
c/top-type)})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)])))), 3 (c/fn-arity
(c/tag "fn-arity163")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity163") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)])
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity548") 1)
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity550") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity549") 0)
[(c/Field (c/tag ".x"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity548") 0)
[(c/Field (c/tag ".x"))]
)])]
)
(c/ReifiedConstraint 59 (c/tag "* RecurseFinal constructor at core: 2585 *")
{}
{}
(c/fn-c []
{2 (c/fn-arity
(c/tag "* RecurseFinal constructor at core: 2585 *")
(c/seq-c [c/top-type
c/top-type]
c/no-tail)
;; returns
(c/ReifiedConstraint 0 (c/tag "RecurseFinal")
{}
{(c/Field (c/tag ".x")) (c/param (c/tag "* RecurseFinal constructor at core: 2585 *") 1)
c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol ""))})
 empty-list c/no-symbol "")]
))})
c/VectorType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity304")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity304") 1)
0
))
(c/param (c/tag "fn-arity304") 0)
(c/vect-c [] (c/coll-of-c c/top-type))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity304") 1)])]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/type-op c/call-value-op
(c/param (c/tag "fn-arity304") 1) c/no-args
)))), 3 (c/fn-arity
(c/tag "fn-arity303")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity303") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity303") 2)])]
c/no-tail)
;; returns
c/top-type)})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)])))), 3 (c/fn-arity
(c/tag "fn-arity163")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity163") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity163") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)])
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity163") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [(c/param (c/tag "fn-arity183") 0)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[(c/sum-c [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity163") 2)
[(c/list-c [] c/no-tail)]
)
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "flat-map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "flat-map")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])
0
))
(c/param (c/tag "flat-map") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "flat-map") 1)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity145")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity145") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
))])
(c/multi [(c/param (c/tag "fn-arity145") 1)
(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/multi [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity145") 0) c/no-args
)
(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
)])]
)
c/maybe-constraint
(c/type-op c/call-value-op
(c/multi [(c/intersect (.required-arities c/fn-constraint [1])
(c/coll-of-c c/maybe-constraint))
(c/param (c/tag "fn-arity145") 1)])
[(c/type-op c/inner-type-of-op
(c/multi [(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity145") 1)
0
) empty-list c/no-symbol "")
(c/param (c/tag "fn-arity145") 0)]) c/no-args
)]
)]))})})
[(c/type-op c/call-value-op
c/top-type
[c/top-type]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity183")
(c/seq-c [c/top-type]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol "")), 3 (c/fn-arity
(c/tag "fn-arity128")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity128") 0)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity128") 2)])]
c/no-tail)
;; returns
(c/sum-c [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "map")
(c/fn-c []
{2 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])]
c/no-tail)
;; returns
c/top-type), 3 (c/fn-arity
(c/tag "map")
(c/list-c [(c/param (c/tag "map") 0)
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 1)])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "map") 2)])]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity129")
(c/list-c [(c/multi [(c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
))
(c/param (c/tag "fn-arity129") 0)
(c/MaybeConstraint (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
) empty-list c/no-symbol "")])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity129") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity129") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity129") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity129") 0) c/no-args
)])]
)]) empty-list c/no-symbol ""))})})
[(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 1)
[(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity128") 0) c/no-args
)]
)
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity3")
(c/seq-c [(c/param (c/tag "fn-arity3") 0)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity3") 0) empty-list c/no-symbol ""))})]
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity128") 2)
[c/maybe-constraint]
)]))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity164")
(c/list-c [(c/multi [(c/param (c/tag "fn-arity164") 0)
(c/list-c [] (c/coll-of-c (c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)))])
(c/multi [(.required-arities c/fn-constraint [1])
(c/param (c/tag "fn-arity164") 1)])]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c (c/multi [(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1) c/no-args
)
(c/type-op c/call-value-op
(c/param (c/tag "fn-arity164") 1)
[(c/multi [(c/type-op c/arg-of-op
(c/param (c/tag "fn-arity164") 1)
0
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity164") 0) c/no-args
)])]
)]))))})})
[c/top-type
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/list-c [] (c/coll-of-c c/top-type))]
c/no-tail)
;; returns
(c/list-c []
(c/coll-of-c c/top-type)))})]
))})]
)])
(c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity184")
(c/seq-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity183") 0)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity184") 0)])))})]
))})]
)]))})}) 

 arg-cs [(c/vect-c [(c/SymConstraint bogus)]
c/no-tail), (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity120")
(c/seq-c [(c/multi [c/int-constraint
(c/param (c/tag "fn-arity120") 0)])]
c/no-tail)
;; returns
c/int-constraint)})] 

 result-type (c/NoValues [c/int-constraint
(c/SymConstraint bogus)]) 

 Conflicting assertions (1157)  at assertion-tests/static-fixed-dynamic-result-type-1.toc: 6
Integer from:    Symbol bogusfrom:
core: 1210                        
core: 95                          
core: 97                          
                                  
                                  


***  site 1151 assertion-tests/tail-either-2.toc: 9 
 (f 1) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity865")
(c/seq-c [(c/param (c/tag "fn-arity865") 0)]
c/no-tail)
;; returns
(c/sum-c [(c/multi [c/strbuff-constraint
(c/param (c/tag "fn-arity865") 0)])
(c/multi [c/substr-constraint
(c/param (c/tag "fn-arity865") 0)])]))}) 

 arg-cs [(c/IntConstraint 1 2147483647 -2147483648)] 

 result-type (c/NoValues [c/strbuff-constraint
(c/IntConstraint 1 2147483647 -2147483648)]) 

 Conflicting assertions (1157)  at assertion-tests/tail-either-2.toc: 9
String from:            Integer 1from:
tail-either-2.toc: 3                  
core: 22                              
                                      
                                      


***  site 1151 assertion-tests/variadic-constraints.toc: 6 
 (f 1 2 3) 

 target-c (c/fn-c []
{c/variadic (c/fn-arity
(c/tag "fn-arity866")
(c/seq-c [(c/param (c/tag "fn-arity866") 0)
(c/multi [(c/sum-c [c/strbuff-constraint
c/substr-constraint])
(c/param (c/tag "fn-arity866") 1)])]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity866") 2)]))
;; returns
c/substr-constraint)}) 

 arg-cs [(c/IntConstraint 1 2147483647 -2147483648), (c/IntConstraint 2 2147483647 -2147483648), (c/IntConstraint 3 2147483647 -2147483648)] 

 result-type (c/NoValues [c/strbuff-constraint
(c/IntConstraint 2 2147483647 -2147483648)]) 

 Conflicting assertions (1157)  at assertion-tests/variadic-constraints.toc: 6
String from:                   Integer 2from:
variadic-constraints.toc: 3                  
core: 336                                    
core: 339                                    
core: 22                                     
                                             
                                             


***  site 1151 assertion-tests/variadic-count-1.toc: 6 
 (f 1) 

 target-c (c/fn-c []
{c/variadic (c/fn-arity
(c/tag "fn-arity867")
(c/seq-c [(c/param (c/tag "fn-arity867") 0)
(c/param (c/tag "fn-arity867") 1)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity867") 2)]))
;; returns
c/int-constraint)}) 

 arg-cs [(c/IntConstraint 1 2147483647 -2147483648)] 

 result-type (c/NoValues [(c/fn-c []
{c/variadic (c/fn-arity
(c/tag "fn-arity867")
(c/seq-c [(c/param (c/tag "fn-arity867") 0)
(c/param (c/tag "fn-arity867") 1)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity867") 2)]))
;; returns
c/int-constraint)})
(c/ReifiedConstraint 0 (c/tag "No arity found")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")]) 

 Conflicting assertions (1157)  at assertion-tests/variadic-count-1.toc: 6
Function from    No arity foundfrom:
                                    
                                    


*** Conflicting assertions (1969)  at assertion-tests/unkown-field.toc: 2
Integer from:    Field 'string' doesn't existfrom:
                                                  
                                                  


*** Conflicting assertions (785)  at assertion-tests/vector-butlast.toc: 3
No Tail for sequence    Can not contain other valuesfrom:


***  site 1151 assertion-tests/vect-len.toc: 9 
 (f (vector 'a)) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity868")
(c/seq-c [(c/multi [(c/seq-c [c/top-type
c/top-type
c/top-type]
(c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity868") 0)])]
c/no-tail)
;; returns
c/int-constraint)}) 

 arg-cs [(c/vect-c [(c/SymConstraint a)]
c/no-tail)] 

 result-type (c/NoValues [c/no-tail
(c/ReifiedConstraint 0 (c/tag "Can not contain other values")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")]) 

 Conflicting assertions (1157)  at assertion-tests/vect-len.toc: 9
No Tail for sequence    Can not contain other valuesfrom:


*** Conflicting assertions (528)  at assertion-tests/return-bad-type.toc: 8
String from:    List from:            
core: 22        return-bad-type.toc: 4
                                      
                                      


***  site 1151 assertion-tests/proto-fn-min-count.toc: 14 
 (bogus (Bogus 1) (vector 3)) 

 target-c (c/ProtoImpls
(c/tag "bogus")
(c/fn-c []
{2 (c/fn-arity
(c/tag "bogus")
(c/list-c [(c/param (c/tag "bogus") 0)
(c/multi [(c/seq-c [c/top-type
c/top-type]
(c/coll-of-c c/top-type))
(c/param (c/tag "bogus") 1)])]
c/no-tail)
;; returns
c/top-type)})

{186 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity857")
(c/list-c [(c/multi [(c/ReifiedConstraint 186 (c/tag "Bogus")
{(c/Field (c/tag ".s")) c/top-type
}
{(c/Field (c/tag ".s")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity857") 0)])
(c/multi [(c/seq-c [c/top-type
c/top-type]
(c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity857") 1)])]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "conj")
(c/fn-c []
{2 (c/fn-arity
(c/tag "conj")
(c/list-c [(c/param (c/tag "conj") 0)
(c/param (c/tag "conj") 1)]
c/no-tail)
;; returns
c/top-type)})

{c/HashSetType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity636")
(c/list-c [(c/multi [(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity636") 0)])
(c/param (c/tag "fn-arity636") 1)]
c/no-tail)
;; returns
(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "assoc")
(c/fn-c []
{3 (c/fn-arity
(c/tag "assoc")
(c/list-c [(c/param (c/tag "assoc") 0)
(c/param (c/tag "assoc") 1)
(c/param (c/tag "assoc") 2)]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{3 (c/fn-arity
(c/tag "fn-arity135")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity135") 0)])
(c/param (c/tag "fn-arity135") 1)
(c/param (c/tag "fn-arity135") 2)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity135") 2) empty-list c/no-symbol ""))})
c/BitmapIndexedType (c/fn-c []
{3 (c/fn-arity
(c/tag "fn-arity486")
(c/list-c [(c/multi [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity486") 0)])
(c/param (c/tag "fn-arity486") 1)
(c/param (c/tag "fn-arity486") 2)]
c/no-tail)
;; returns
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")]))})
53 (c/fn-c []
{3 (c/fn-arity
(c/tag "Sorting_get")
(c/list-c [(c/multi [(c/ReifiedConstraint 53 (c/tag "Sorting")
{(c/Field (c/tag ".v")) c/top-type
(c/Field (c/tag ".k")) c/top-type
}
{(c/Field (c/tag ".v")) c/top-type
c/contents c/top-type
(c/Field (c/tag ".k")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "Sorting_get") 0)])
(c/param (c/tag "Sorting_get") 1)
(c/param (c/tag "Sorting_get") 2)]
c/no-tail)
;; returns
(c/type-op c/set-to-op
(c/param (c/tag "Sorting_get") 0)
[[(c/param (c/tag "Sorting_get") 1)]
(c/param (c/tag "Sorting_get") 2)]
))})
55 (c/fn-c []
{3 (c/fn-arity
(c/tag "RecurseWith_get")
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "RecurseWith_get") 0)])
(c/param (c/tag "RecurseWith_get") 1)
(c/param (c/tag "RecurseWith_get") 2)]
c/no-tail)
;; returns
(c/type-op c/set-to-op
(c/param (c/tag "RecurseWith_get") 0)
[[(c/param (c/tag "RecurseWith_get") 1)]
(c/param (c/tag "RecurseWith_get") 2)]
))})
c/HashCollisionNodeType (c/fn-c []
{3 (c/fn-arity
(c/tag "fn-arity484")
(c/list-c [(c/multi [(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity484") 0)])
(c/param (c/tag "fn-arity484") 1)
(c/param (c/tag "fn-arity484") 2)]
c/no-tail)
;; returns
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")]))})
56 (c/fn-c []
{3 (c/fn-arity
(c/tag "RecurseFinal_get")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "RecurseFinal_get") 0)])
(c/param (c/tag "RecurseFinal_get") 1)
(c/param (c/tag "RecurseFinal_get") 2)]
c/no-tail)
;; returns
(c/type-op c/set-to-op
(c/param (c/tag "RecurseFinal_get") 0)
[[(c/param (c/tag "RecurseFinal_get") 1)]
(c/param (c/tag "RecurseFinal_get") 2)]
))})
c/ArrayNodeType (c/fn-c []
{3 (c/fn-arity
(c/tag "fn-arity485")
(c/list-c [(c/multi [(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity485") 0)])
(c/param (c/tag "fn-arity485") 1)
(c/param (c/tag "fn-arity485") 2)]
c/no-tail)
;; returns
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")]))})})
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity643") 0)
[(c/Field (c/tag ".set-map"))]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity642") 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity641") 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity640") 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity639") 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity638") 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity637") 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity636") 0)
[(c/Field (c/tag ".set-map"))]
)])
(c/param (c/tag "fn-arity636") 1)
(c/param (c/tag "fn-arity636") 1)]
)
(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "assoc")
(c/fn-c []
{3 (c/fn-arity
(c/tag "assoc")
(c/list-c [(c/param (c/tag "assoc") 0)
(c/param (c/tag "assoc") 1)
(c/param (c/tag "assoc") 2)]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{3 (c/fn-arity
(c/tag "fn-arity135")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity135") 0)])
(c/param (c/tag "fn-arity135") 1)
(c/param (c/tag "fn-arity135") 2)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity135") 2) empty-list c/no-symbol ""))})
c/BitmapIndexedType (c/fn-c []
{3 (c/fn-arity
(c/tag "fn-arity486")
(c/list-c [(c/multi [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity486") 0)])
(c/param (c/tag "fn-arity486") 1)
(c/param (c/tag "fn-arity486") 2)]
c/no-tail)
;; returns
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")]))})
53 (c/fn-c []
{3 (c/fn-arity
(c/tag "Sorting_get")
(c/list-c [(c/multi [(c/ReifiedConstraint 53 (c/tag "Sorting")
{(c/Field (c/tag ".v")) c/top-type
(c/Field (c/tag ".k")) c/top-type
}
{(c/Field (c/tag ".v")) c/top-type
c/contents c/top-type
(c/Field (c/tag ".k")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "Sorting_get") 0)])
(c/param (c/tag "Sorting_get") 1)
(c/param (c/tag "Sorting_get") 2)]
c/no-tail)
;; returns
(c/type-op c/set-to-op
(c/param (c/tag "Sorting_get") 0)
[[(c/param (c/tag "Sorting_get") 1)]
(c/param (c/tag "Sorting_get") 2)]
))})
55 (c/fn-c []
{3 (c/fn-arity
(c/tag "RecurseWith_get")
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "RecurseWith_get") 0)])
(c/param (c/tag "RecurseWith_get") 1)
(c/param (c/tag "RecurseWith_get") 2)]
c/no-tail)
;; returns
(c/type-op c/set-to-op
(c/param (c/tag "RecurseWith_get") 0)
[[(c/param (c/tag "RecurseWith_get") 1)]
(c/param (c/tag "RecurseWith_get") 2)]
))})
c/HashCollisionNodeType (c/fn-c []
{3 (c/fn-arity
(c/tag "fn-arity484")
(c/list-c [(c/multi [(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity484") 0)])
(c/param (c/tag "fn-arity484") 1)
(c/param (c/tag "fn-arity484") 2)]
c/no-tail)
;; returns
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")]))})
56 (c/fn-c []
{3 (c/fn-arity
(c/tag "RecurseFinal_get")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "RecurseFinal_get") 0)])
(c/param (c/tag "RecurseFinal_get") 1)
(c/param (c/tag "RecurseFinal_get") 2)]
c/no-tail)
;; returns
(c/type-op c/set-to-op
(c/param (c/tag "RecurseFinal_get") 0)
[[(c/param (c/tag "RecurseFinal_get") 1)]
(c/param (c/tag "RecurseFinal_get") 2)]
))})
c/ArrayNodeType (c/fn-c []
{3 (c/fn-arity
(c/tag "fn-arity485")
(c/list-c [(c/multi [(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity485") 0)])
(c/param (c/tag "fn-arity485") 1)
(c/param (c/tag "fn-arity485") 2)]
c/no-tail)
;; returns
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")]))})})
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity643") 0)
[(c/Field (c/tag ".set-map"))]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity642") 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity641") 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity640") 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity639") 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity638") 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity637") 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity636") 0)
[(c/Field (c/tag ".set-map"))]
)])
(c/param (c/tag "fn-arity636") 1)
(c/param (c/tag "fn-arity636") 1)]
)
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
(c/multi [(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "assoc")
(c/fn-c []
{3 (c/fn-arity
(c/tag "assoc")
(c/list-c [(c/param (c/tag "assoc") 0)
(c/param (c/tag "assoc") 1)
(c/param (c/tag "assoc") 2)]
c/no-tail)
;; returns
c/top-type)})

{c/MaybeType (c/fn-c []
{3 (c/fn-arity
(c/tag "fn-arity135")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity135") 0)])
(c/param (c/tag "fn-arity135") 1)
(c/param (c/tag "fn-arity135") 2)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/param (c/tag "fn-arity135") 2) empty-list c/no-symbol ""))})
c/BitmapIndexedType (c/fn-c []
{3 (c/fn-arity
(c/tag "fn-arity486")
(c/list-c [(c/multi [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity486") 0)])
(c/param (c/tag "fn-arity486") 1)
(c/param (c/tag "fn-arity486") 2)]
c/no-tail)
;; returns
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")]))})
53 (c/fn-c []
{3 (c/fn-arity
(c/tag "Sorting_get")
(c/list-c [(c/multi [(c/ReifiedConstraint 53 (c/tag "Sorting")
{(c/Field (c/tag ".v")) c/top-type
(c/Field (c/tag ".k")) c/top-type
}
{(c/Field (c/tag ".v")) c/top-type
c/contents c/top-type
(c/Field (c/tag ".k")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "Sorting_get") 0)])
(c/param (c/tag "Sorting_get") 1)
(c/param (c/tag "Sorting_get") 2)]
c/no-tail)
;; returns
(c/type-op c/set-to-op
(c/param (c/tag "Sorting_get") 0)
[[(c/param (c/tag "Sorting_get") 1)]
(c/param (c/tag "Sorting_get") 2)]
))})
55 (c/fn-c []
{3 (c/fn-arity
(c/tag "RecurseWith_get")
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "RecurseWith_get") 0)])
(c/param (c/tag "RecurseWith_get") 1)
(c/param (c/tag "RecurseWith_get") 2)]
c/no-tail)
;; returns
(c/type-op c/set-to-op
(c/param (c/tag "RecurseWith_get") 0)
[[(c/param (c/tag "RecurseWith_get") 1)]
(c/param (c/tag "RecurseWith_get") 2)]
))})
c/HashCollisionNodeType (c/fn-c []
{3 (c/fn-arity
(c/tag "fn-arity484")
(c/list-c [(c/multi [(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity484") 0)])
(c/param (c/tag "fn-arity484") 1)
(c/param (c/tag "fn-arity484") 2)]
c/no-tail)
;; returns
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")]))})
56 (c/fn-c []
{3 (c/fn-arity
(c/tag "RecurseFinal_get")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "RecurseFinal_get") 0)])
(c/param (c/tag "RecurseFinal_get") 1)
(c/param (c/tag "RecurseFinal_get") 2)]
c/no-tail)
;; returns
(c/type-op c/set-to-op
(c/param (c/tag "RecurseFinal_get") 0)
[[(c/param (c/tag "RecurseFinal_get") 1)]
(c/param (c/tag "RecurseFinal_get") 2)]
))})
c/ArrayNodeType (c/fn-c []
{3 (c/fn-arity
(c/tag "fn-arity485")
(c/list-c [(c/multi [(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity485") 0)])
(c/param (c/tag "fn-arity485") 1)
(c/param (c/tag "fn-arity485") 2)]
c/no-tail)
;; returns
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")]))})})
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity643") 0)
[(c/Field (c/tag ".set-map"))]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity642") 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity641") 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity640") 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity639") 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity638") 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity637") 0)
[(c/Field (c/tag ".set-map"))]
)
(c/type-op c/get-from-op
(c/param (c/tag "fn-arity636") 0)
[(c/Field (c/tag ".set-map"))]
)])
(c/param (c/tag "fn-arity636") 1)
(c/param (c/tag "fn-arity636") 1)]
)
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])])
c/contents c/top-type
}
(c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity643")
(c/seq-c [(c/multi [(c/ReifiedConstraint 35 (c/tag "HashSet")
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
}
{(c/Field (c/tag ".set-map")) (c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity643") 0)])
(c/param (c/tag "fn-arity643") 1)]
c/no-tail)
;; returns
(c/type-op c/call-value-op
(c/ProtoImpls
(c/tag "get")
(c/fn-c []
{2 (c/fn-arity
(c/tag "get")
(c/list-c [(c/param (c/tag "get") 0)
(c/param (c/tag "get") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "get") 0) c/no-args
) empty-list c/no-symbol ""))})

{c/MaybeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity134")
(c/list-c [(c/multi [c/maybe-constraint
(c/param (c/tag "fn-arity134") 0)])
(c/param (c/tag "fn-arity134") 1)]
c/no-tail)
;; returns
(c/multi [(c/param (c/tag "fn-arity134") 0)
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity134") 0) c/no-args
) empty-list c/no-symbol "")]))})
c/BitmapIndexedType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity483")
(c/list-c [(c/multi [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity483") 0)])
(c/param (c/tag "fn-arity483") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity483") 0) c/no-args
) empty-list c/no-symbol ""))})
53 (c/fn-c []
{2 (c/fn-arity
(c/tag "Sorting_get")
(c/list-c [(c/multi [(c/ReifiedConstraint 53 (c/tag "Sorting")
{(c/Field (c/tag ".v")) c/top-type
(c/Field (c/tag ".k")) c/top-type
}
{(c/Field (c/tag ".v")) c/top-type
c/contents c/top-type
(c/Field (c/tag ".k")) c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "Sorting_get") 0)])
(c/param (c/tag "Sorting_get") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/get-from-op
(c/param (c/tag "Sorting_get") 0)
[(c/param (c/tag "Sorting_get") 1)]
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "Sorting_get") 0) c/no-args
)]) empty-list c/no-symbol ""))})
55 (c/fn-c []
{2 (c/fn-arity
(c/tag "RecurseWith_get")
(c/list-c [(c/multi [(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "RecurseWith_get") 0)])
(c/param (c/tag "RecurseWith_get") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/get-from-op
(c/param (c/tag "RecurseWith_get") 0)
[(c/param (c/tag "RecurseWith_get") 1)]
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "RecurseWith_get") 0) c/no-args
)]) empty-list c/no-symbol ""))})
c/HashCollisionNodeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity481")
(c/list-c [(c/multi [(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity481") 0)])
(c/param (c/tag "fn-arity481") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity481") 0) c/no-args
) empty-list c/no-symbol ""))})
56 (c/fn-c []
{2 (c/fn-arity
(c/tag "RecurseFinal_get")
(c/list-c [(c/multi [(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "RecurseFinal_get") 0)])
(c/param (c/tag "RecurseFinal_get") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/multi [(c/type-op c/get-from-op
(c/param (c/tag "RecurseFinal_get") 0)
[(c/param (c/tag "RecurseFinal_get") 1)]
)
(c/type-op c/inner-type-of-op
(c/param (c/tag "RecurseFinal_get") 0) c/no-args
)]) empty-list c/no-symbol ""))})
c/ArrayNodeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity482")
(c/list-c [(c/multi [(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity482") 0)])
(c/param (c/tag "fn-arity482") 1)]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity482") 0) c/no-args
) empty-list c/no-symbol ""))})
c/VectorType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity86")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity86") 0)])
(c/multi [c/int-constraint
(c/IntConstraint c/no-int 2147483647 0)
(c/param (c/tag "fn-arity86") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity86") 0) c/no-args
) empty-list c/no-symbol ""))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity269")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity269") 0)])
(c/multi [c/int-constraint
(c/param (c/tag "fn-arity269") 1)])]
c/no-tail)
;; returns
(c/MaybeConstraint (c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity269") 0) c/no-args
) empty-list c/no-symbol ""))})})
[(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "fn-arity643") 0)
[(c/Field (c/tag ".set-map"))]
)
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])])
(c/param (c/tag "fn-arity643") 1)]
))})
 empty-list c/no-symbol ""))})
c/BitmapIndexedType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity468")
(c/list-c [(c/multi [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity468") 0)])
(c/multi [(c/seq-c [c/top-type
c/top-type]
c/no-tail)
(c/param (c/tag "fn-arity468") 1)])]
c/no-tail)
;; returns
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")]))})
c/HashCollisionNodeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity466")
(c/list-c [(c/multi [(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity466") 0)])
(c/multi [(c/seq-c [c/top-type
c/top-type]
c/no-tail)
(c/param (c/tag "fn-arity466") 1)])]
c/no-tail)
;; returns
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")]))})
c/ArrayNodeType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity467")
(c/list-c [(c/multi [(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity467") 0)])
(c/multi [(c/seq-c [c/top-type
c/top-type]
c/no-tail)
(c/param (c/tag "fn-arity467") 1)])]
c/no-tail)
;; returns
(c/sum-c [(c/ReifiedConstraint 11 (c/tag "BitmapIndexedNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 12 (c/tag "ArrayNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")
(c/ReifiedConstraint 13 (c/tag "HashCollisionNode")
{}
{c/contents c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")]))})
c/VectorType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity84")
(c/list-c [(c/multi [(c/vect-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity84") 0)])
(c/param (c/tag "fn-arity84") 1)]
c/no-tail)
;; returns
(c/vect-c [] (c/coll-of-c (c/sum-c [(c/type-op c/inner-type-of-op
(c/param (c/tag "fn-arity84") 0) c/no-args
)
(c/param (c/tag "fn-arity84") 1)]))))})
c/ListType (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity158")
(c/list-c [(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity158") 0)])
(c/param (c/tag "fn-arity158") 1)]
c/no-tail)
;; returns
(c/list-c [(c/param (c/tag "fn-arity158") 1)]
(c/multi [(c/list-c [] (c/coll-of-c c/top-type))
(c/param (c/tag "fn-arity158") 0)])))})})
[(c/param (c/tag "fn-arity857") 1)
(c/SymConstraint a)]
))})}) 

 arg-cs [(c/ReifiedConstraint 186 (c/tag "Bogus")
{(c/Field (c/tag ".s")) c/top-type
}
{(c/Field (c/tag ".s")) (c/IntConstraint 1 2147483647 -2147483648)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol ""), (c/vect-c [(c/IntConstraint 3 2147483647 -2147483648)]
c/no-tail)] 

 result-type (c/NoValues [c/no-tail
(c/ReifiedConstraint 0 (c/tag "Can not contain other values")
{}
{}
(c/fn-c []
{})
 empty-list c/no-symbol "")]) 

 Conflicting assertions (1157)  at assertion-tests/proto-fn-min-count.toc: 14
No Tail for sequence    Can not contain other valuesfrom:


***  site 1151 assertion-tests/return-list-of-1.toc: 12 
 (bloop (Bogus "9") 'bogus) 

 target-c (c/ProtoImpls
(c/tag "bloop")
(c/fn-c []
{2 (c/fn-arity
(c/tag "bloop")
(c/list-c [c/top-type
(c/param (c/tag "bloop") 1)]
c/no-tail)
;; returns
(c/list-c [] (c/coll-of-c c/int-constraint)))})

{198 (c/fn-c []
{2 (c/fn-arity
(c/tag "fn-arity872")
(c/list-c [(c/multi [(c/ReifiedConstraint 198 (c/tag "Bogus")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity872") 0)])
(c/param (c/tag "fn-arity872") 1)]
c/no-tail)
;; returns
(c/list-c [(c/multi [c/int-constraint
(c/param (c/tag "fn-arity872") 1)])
(c/IntConstraint 88 2147483647 -2147483648)]
c/no-tail))})}) 

 arg-cs [(c/ReifiedConstraint 198 (c/tag "Bogus")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) (c/StrBuffConstraint 9empty-list c/no-symbol "")
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol ""), (c/SymConstraint bogus)] 

 result-type (c/NoValues [c/int-constraint
(c/SymConstraint bogus)]) 

 Conflicting assertions (1157)  at assertion-tests/return-list-of-1.toc: 12
Integer from:              Symbol bogusfrom:
return-list-of-1.toc: 4                     
                                            
                                            


***  site 1151 assertion-tests/nested-field-1.toc: 20 
 (inc (.x (.x (First (Second 's 'q))))) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity120")
(c/seq-c [(c/multi [c/int-constraint
(c/param (c/tag "fn-arity120") 0)])]
c/no-tail)
;; returns
c/int-constraint)}) 

 arg-cs [(c/SymConstraint q)] 

 result-type (c/NoValues [c/int-constraint
(c/SymConstraint q)]) 

 Conflicting assertions (1157)  at assertion-tests/nested-field-1.toc: 20
Integer from:    Symbol qfrom:         
core: 1210       nested-field-1.toc: 18
core: 95         nested-field-1.toc: 9 
core: 97         nested-field-1.toc: 10
                 nested-field-1.toc: 2 
                 nested-field-1.toc: 3 
                                       
                                       


***  site 1151 assertion-tests/update-field-1.toc: 11 
 (.x (SomeType "string" 7) 3) 

 target-c (c/ProtoImpls
(c/tag ".x")
(c/fn-c []
{2 (c/fn-arity
(c/tag ".x_setter")
(c/seq-c [(c/multi [(c/param (c/tag ".x_setter") 0)
(c/ReifiedConstraint 0 (c/tag "field 'x' required")
{}
{(c/Field (c/tag ".x")) c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])
(c/param (c/tag ".x_setter") 1)]
c/no-tail)
;; returns
(c/type-op c/set-to-op
(c/param (c/tag ".x_setter") 0)
[[(c/Field (c/tag ".x"))]
(c/param (c/tag ".x_setter") 1)]
)), 1 (c/fn-arity
(c/tag ".x_getter")
(c/seq-c [(c/multi [(c/param (c/tag ".x_getter") 0)
(c/ReifiedConstraint 0 (c/tag "field 'x' required")
{}
{(c/Field (c/tag ".x")) c/top-type
}
(c/fn-c []
{})
 empty-list c/no-symbol "")])]
c/no-tail)
;; returns
(c/type-op c/get-from-op
(c/param (c/tag ".x_getter") 0)
[(c/Field (c/tag ".x"))]
))})

{205 (c/fn-c []
{2 (c/fn-arity
(c/tag "SomeType-.x-setter")
(c/seq-c [(c/multi [(c/param (c/tag "SomeType-.x-setter") 0)
(c/ReifiedConstraint 205 (c/tag "SomeType")
{(c/Field (c/tag ".x")) (c/sum-c [c/strbuff-constraint
c/substr-constraint])
(c/Field (c/tag ".y")) c/int-constraint
}
{(c/Field (c/tag ".x")) (c/sum-c [c/strbuff-constraint
c/substr-constraint])
c/contents c/top-type
(c/Field (c/tag ".y")) c/int-constraint
}
c/fn-constraint
 empty-list c/no-symbol "")])
(c/multi [(c/param (c/tag "SomeType-.x-setter") 1)
(c/sum-c [c/strbuff-constraint
c/substr-constraint])])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/set-to-op
(c/param (c/tag "SomeType-.x-setter") 0)
[[(c/Field (c/tag ".x"))]
(c/param (c/tag "SomeType-.x-setter") 1)]
)])), 1 (c/fn-arity
(c/tag "SomeType-.x-getter")
(c/seq-c [(c/multi [(c/param (c/tag "SomeType-.x-getter") 0)
(c/ReifiedConstraint 205 (c/tag "SomeType")
{(c/Field (c/tag ".x")) (c/sum-c [c/strbuff-constraint
c/substr-constraint])
(c/Field (c/tag ".y")) c/int-constraint
}
{(c/Field (c/tag ".x")) (c/sum-c [c/strbuff-constraint
c/substr-constraint])
c/contents c/top-type
(c/Field (c/tag ".y")) c/int-constraint
}
c/fn-constraint
 empty-list c/no-symbol "")])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "SomeType-.x-getter") 0)
[(c/Field (c/tag ".x"))]
)
(c/sum-c [c/strbuff-constraint
c/substr-constraint])]))})
55 (c/fn-c []
{2 (c/fn-arity
(c/tag "RecurseWith-.x-setter")
(c/seq-c [(c/multi [(c/param (c/tag "RecurseWith-.x-setter") 0)
(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")])
(c/multi [(c/param (c/tag "RecurseWith-.x-setter") 1)
c/top-type])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/set-to-op
(c/param (c/tag "RecurseWith-.x-setter") 0)
[[(c/Field (c/tag ".x"))]
(c/param (c/tag "RecurseWith-.x-setter") 1)]
)])), 1 (c/fn-arity
(c/tag "RecurseWith-.x-getter")
(c/seq-c [(c/multi [(c/param (c/tag "RecurseWith-.x-getter") 0)
(c/ReifiedConstraint 55 (c/tag "RecurseWith")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "RecurseWith-.x-getter") 0)
[(c/Field (c/tag ".x"))]
)]))})
56 (c/fn-c []
{2 (c/fn-arity
(c/tag "RecurseFinal-.x-setter")
(c/seq-c [(c/multi [(c/param (c/tag "RecurseFinal-.x-setter") 0)
(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")])
(c/multi [(c/param (c/tag "RecurseFinal-.x-setter") 1)
c/top-type])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/set-to-op
(c/param (c/tag "RecurseFinal-.x-setter") 0)
[[(c/Field (c/tag ".x"))]
(c/param (c/tag "RecurseFinal-.x-setter") 1)]
)])), 1 (c/fn-arity
(c/tag "RecurseFinal-.x-getter")
(c/seq-c [(c/multi [(c/param (c/tag "RecurseFinal-.x-getter") 0)
(c/ReifiedConstraint 56 (c/tag "RecurseFinal")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")])]
c/no-tail)
;; returns
(c/multi [(c/type-op c/get-from-op
(c/param (c/tag "RecurseFinal-.x-getter") 0)
[(c/Field (c/tag ".x"))]
)]))})}) 

 arg-cs [(c/ReifiedConstraint 205 (c/tag "SomeType")
{(c/Field (c/tag ".x")) (c/sum-c [c/strbuff-constraint
c/substr-constraint])
(c/Field (c/tag ".y")) c/int-constraint
}
{(c/Field (c/tag ".x")) (c/StrBuffConstraint stringempty-list c/no-symbol "")
c/contents c/top-type
(c/Field (c/tag ".y")) (c/IntConstraint 7 2147483647 -2147483648)
}
c/fn-constraint
 empty-list c/no-symbol ""), (c/IntConstraint 3 2147483647 -2147483648)] 

 result-type (c/NoValues [c/strbuff-constraint
(c/IntConstraint 3 2147483647 -2147483648)]) 

 Conflicting assertions (1157)  at assertion-tests/update-field-1.toc: 11
String from:    Integer 3from:
core: 22                      
                              
                              


***  site 1151 assertion-tests/restrict-conflict.toc: 27 
 (only-another xtreme) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity880")
(c/seq-c [(c/multi [(c/ReifiedConstraint 207 (c/tag "AnotherType")
{(c/Field (c/tag ".x")) c/top-type
(c/Field (c/tag ".z")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
(c/Field (c/tag ".z")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity880") 0)])]
c/no-tail)
;; returns
(c/multi [(c/ReifiedConstraint 207 (c/tag "AnotherType")
{(c/Field (c/tag ".x")) c/top-type
(c/Field (c/tag ".z")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
(c/Field (c/tag ".z")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity880") 0)]))}) 

 arg-cs [(c/multi [(c/param (c/tag "fn-arity881") 0)
(c/ReifiedConstraint 188 (c/tag "OneType")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")])] 

 result-type (c/NoValues [(c/ReifiedConstraint 188 (c/tag "OneType")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/ReifiedConstraint 207 (c/tag "AnotherType")
{(c/Field (c/tag ".x")) c/top-type
(c/Field (c/tag ".z")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
(c/Field (c/tag ".z")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")]) 

 Conflicting assertions (1157)  at assertion-tests/restrict-conflict.toc: 27
OneTypefrom:                 AnotherTypefrom:         
restrict-conflict.toc: 24    restrict-conflict.toc: 19
restrict-conflict.toc: 10    restrict-conflict.toc: 6 
restrict-conflict.toc: 2                              
                                                      
                                                      


*** Conflicting assertions (433)  at assertion-tests/restrict-nested-item.toc: 27
OneTypefrom:                    AnotherTypefrom:            
restrict-nested-item.toc: 13    restrict-nested-item.toc: 18
restrict-nested-item.toc: 14    restrict-nested-item.toc: 19
restrict-nested-item.toc: 2     restrict-nested-item.toc: 6 
                                                            
                                                            


***  site 1151 assertion-tests/restrict-param.toc: 24 
 (bad (AnotherType 'x 'z)) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity887")
(c/seq-c [(c/multi [(c/ReifiedConstraint 196 (c/tag "OneType")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity887") 0)])]
c/no-tail)
;; returns
(c/multi [(c/ReifiedConstraint 196 (c/tag "OneType")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/param (c/tag "fn-arity887") 0)]))}) 

 arg-cs [(c/ReifiedConstraint 211 (c/tag "AnotherType")
{(c/Field (c/tag ".x")) c/top-type
(c/Field (c/tag ".z")) c/top-type
}
{(c/Field (c/tag ".x")) (c/SymConstraint x)
(c/Field (c/tag ".z")) (c/SymConstraint z)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")] 

 result-type (c/NoValues [(c/ReifiedConstraint 196 (c/tag "OneType")
{(c/Field (c/tag ".x")) c/top-type
}
{(c/Field (c/tag ".x")) c/top-type
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")
(c/ReifiedConstraint 211 (c/tag "AnotherType")
{(c/Field (c/tag ".x")) c/top-type
(c/Field (c/tag ".z")) c/top-type
}
{(c/Field (c/tag ".x")) (c/SymConstraint x)
(c/Field (c/tag ".z")) (c/SymConstraint z)
c/contents c/top-type
}
c/fn-constraint
 empty-list c/no-symbol "")]) 

 Conflicting assertions (1157)  at assertion-tests/restrict-param.toc: 24
OneTypefrom:              AnotherTypefrom:
restrict-param.toc: 21                    
restrict-param.toc: 19                    
restrict-param.toc: 10                    
restrict-param.toc: 2                     
                                          
                                          


***  site 1151 assertion-tests/nested-field-2.toc: 26 
 (inc (.x (.x (.x (First (Second 's (Third 'q))))))) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity120")
(c/seq-c [(c/multi [c/int-constraint
(c/param (c/tag "fn-arity120") 0)])]
c/no-tail)
;; returns
c/int-constraint)}) 

 arg-cs [(c/SymConstraint q)] 

 result-type (c/NoValues [c/int-constraint
(c/SymConstraint q)]) 

 Conflicting assertions (1157)  at assertion-tests/nested-field-2.toc: 26
Integer from:    Symbol qfrom:         
core: 1210       nested-field-2.toc: 24
core: 95         nested-field-2.toc: 23
core: 97         nested-field-2.toc: 22
                                       
                                       


***  site 1151 assertion-tests/dynamic-field-type-9.toc: 47 
 (inc (.x (.p (.z (.t (f 'wur (First (Second 's (Third (Fourth 9)))) 'q)))))) 

 target-c (c/fn-c []
{1 (c/fn-arity
(c/tag "fn-arity120")
(c/seq-c [(c/multi [c/int-constraint
(c/param (c/tag "fn-arity120") 0)])]
c/no-tail)
;; returns
c/int-constraint)}) 

 arg-cs [(c/SymConstraint q)] 

 result-type (c/NoValues [c/int-constraint
(c/SymConstraint q)]) 

 Conflicting assertions (1157)  at assertion-tests/dynamic-field-type-9.toc: 47
Integer from:    Symbol qfrom:               
core: 1210       dynamic-field-type-9.toc: 45
core: 95         dynamic-field-type-9.toc: 44
core: 97         dynamic-field-type-9.toc: 43
                 dynamic-field-type-9.toc: 42
                                             
                                             

malloc count: 2156187  free count: 2156187  diff: 0
