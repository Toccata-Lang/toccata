
(defn id [x]
  x)

(defn pair [l r]
  (fn [z]
    (z l r)))

(defn fst [ff fs]
  ff)

(defn snd [ff fs]
  fs)

(defn add [m n]
  (fn [x]
    (fn [y]
      ((m x) ((n x) y)))))

;; slower version
(defn nextfib [p]
  (let [n1 (p fst)]
    (let [n2 (p snd)]
      (pair (add n1 n2) n1))))

;; fast version
;; (defn nextfib [p]
;;   (let [n1 (p fst)]
;;     (pair (add n1 (p snd)) n1)))

(defn fib [n]
  (((n nextfib) (pair (church 0) (church 1))) fst))

;; (fib (church 3))
((pair 0 1) fst)
