
(defprotocol StateErrorProto
  (next-step [x f]))

(deftype StateErrorMap [base fns]
  Function
  (invoke [self s]
    (next-step (base s) (fn [[x new-s]]
                          [(reduce fns x (fn [y f]
                                           (f y)))
                           new-s])))

  Container
  (map [self map-f]
    (StateErrorMap (.base self) (conj (.fns self) map-f))))

(deftype new-se [invoke-fn]
  Function
  (invoke [ev s]
    (invoke-fn s))

 ;; (map [self map-f]
 ;;   (new-se (fn [s]
 ;;             (next-step ((.invoke-fn self) s)
 ;;                        (fn [[y new-s]]
 ;;                          [(map-f y) new-s])))))

 Container
 (map [self map-f]
   (StateErrorMap self [map-f]))

 (flat-map [ev f]
   (new-se (fn [s]
             (next-step ((.invoke-fn ev) s)
                        (fn [[v new-s]]
                          ((f v) new-s)))))))

(deftype state-error [v]
  Function
  (invoke [x s]
    [v s])

  Container
  (map [self f]
    (state-error (f (.v self))))

  (flat-map [self f]
    (f (.v self))))

(extend-type StateErrorMap
  Container
  (flat-map [self map-f]
    (new-se (fn [s]
              (next-step (self s)
                         (fn [[y new-s]]
                           ((map-f y) new-s)))))))

(def se-nop (new-se (fn [s]
                         ['_ s])))

(main [_]
  ((flat-map (map [1] (fn [i]
                        se-nop)
                  state-error)
             (fn [_]
               (map se-nop
                    (fn [_]
                      'wut))))
   {})
  (abort))
