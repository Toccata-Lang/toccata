
(defn f [q]
  (q))

(main [_]
  (f (fn boom1 []
       (let [max (maybe 0)]
         (and (and max
                   (maybe 9))
              max))))
  (pr* "boom1")
  (f (fn boom2 []
       (let [max (maybe 0)]
         (and (or max
                  (maybe 9))
              max))))
  (pr* "boom2")
  (f (fn boom3 []
       (let [max (maybe 0)]
         (or (and max
                  (maybe 9))
             max))))
  (pr* "boom3")
  (f (fn boom4 []
       (let [max (maybe 0)]
         (or (or max
                 (maybe 9))
             max))))
  (pr* "boom4"))
