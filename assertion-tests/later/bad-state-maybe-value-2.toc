

;; TODO: this should not throw an exception

(deftype new-sm [invoke-fn]
  Stringable
  (string-list [x]
    (comp (list "<new-sm ")
          (string-list (.invoke-fn x))
          (list ">")))

  Function
  (invoke [ev s]
    (invoke-fn s))

  Container
  (wrap [_ x]
    (new-sm (fn [s]
              (maybe [x s]))))

  (map [mv f]
    (new-sm (fn [s]
              (map (invoke-fn s)
                   (fn [[v new-s]]
                     [(f v) new-s]))))))

(def state-maybe
  (reify
    Composition
    (zero [_] (new-sm (fn [_] nothing)))))

(def zero-sm
  (zero state-maybe))

(main [_]
  (map (wrap zero-sm 'a)
       (fn [x]
         (inc x)))

  (print-err 'done))
