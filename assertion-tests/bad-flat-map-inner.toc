
(defn f [s]
  (flat-map (maybe (inc s))
            (fn [x]
              (map (maybe (symbol x))
                   (fn [y]
                     (str y)))))
  ;; (for [x (maybe (inc s))
  ;;       y (maybe (symbol x))]
  ;;   (str y))
  )

(main [_]
  (print-err (for [x (f 8)]
               (subs x 1))))
