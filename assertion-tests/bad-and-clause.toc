(defn add-commas [x-str]
  (assert (instance? String x-str))
  (assert-result l (instance? List l))

  (let [prefix-len (mod (count x-str) 3)
        prefix (subs x-str 0 (mod (count x-str) 3))]
    (either (or (and (empty? x-str)
                     (maybe empty-list))
                (and (= prefix-len 0)
                     (list* "," (subs x-str 0 3)
                            (add-commas (subs x-str 3)))))
            (list* "," (subs x-str 0 prefix-len)
                   (add-commas (subs x-str prefix-len))))))

(main [_]
  (print-err (add-commas "140"))
  (print-err 'done))
