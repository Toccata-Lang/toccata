
(defn f [xs]
  (let [[x y & more] xs]
    (map more inc)
    (inc x)
    (subs y 1)))

(defn g [xs]
  (let [[x y & more] xs]
    (map more (fn [m]
                (subs m 1)))
    (inc x)
    (subs y 1)))

(defn h [ys]
  (f ys)
  (g ys))

(main [_]
  (let [xs [1 "33" 8]]
    (print-err 'h (h xs))))
