
(deftype OneType [x]
  Stringable
  (string-list [_] (list "<OneType " (str x) ">")))

(deftype AnotherType [x z]
  Stringable
  (string-list [_] (list "<AnotherType " (str z) ">")))

(def BothTypes (any-of OneType
                       AnotherType))

(defn only-one [xtreme]
  (assert (instance? OneType xtreme))
  xtreme)

(defn only-another [xtreme]
  (assert (instance? AnotherType xtreme))
  xtreme)

(defn bad [xtreme]
  (assert (instance? BothTypes xtreme))
  [(only-one xtreme)
   (only-another xtreme)])

(main [_]
      (println 'FAIL))
