
(deftype OneType [x]
  Stringable
  (string-list [_] (list "<OneType " (str x) ">")))

(deftype AnotherType [x z]
  Stringable
  (string-list [_] (list "<AnotherType " (str z) ">")))

(deftype BothTypes (any-of OneType
                           AnotherType))

(defn only-one [[a b [c x]]]
  ! x OneType

  x)

(defn only-another [[a b [c x]]]
  ! x AnotherType

  x)

;; TODO: error message needs tons of help

(defn bad [x]
  [(only-one x)
   (only-another x)])

(main [_]
  (print-err 'FAIL))
