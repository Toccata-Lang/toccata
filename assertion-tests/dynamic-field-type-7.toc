
(deftype Third [x]
  ;; Stringable
  ;; (string-list [_]
  ;;   (list "(Third " (str x) ")"))
  )

(deftype Second [y z]
  (assert (instance? Third z))

  ;; Stringable
  ;; (string-list [_]
  ;;   (list "(Second " (str x) ")"))
  )

(defn f [_ v]
  (.z v
      (.x
       (.z v)
       'w)))

(main [_]
  (-> (f 'wur (Second 's (Third 9)))
      .z
      .x
      inc))
