
(defn id [x]
  x)

(def zero (church 0))
(def one (church 1))

(def succ (fn [n]
            (fn [add-1]
              (fn [base]
                (add-1 ((n add-1) base))))))

(def mult (fn [n]
            (fn [m]
              (fn [a]
                (n (m a))))))

(def pair (fn [l]
            (fn [r]
              (fn [z]
                ((z l) r)))))

(def fst (fn [ff]
           (fn [fs]
             ff)))

(def snd (fn [ff]
           (fn [fs]
             fs)))

(def nextfact (fn [pr]
                ((pair ((mult (pr fst)) (succ (pr snd))))
                 (succ (pr snd)))))

(def fact (fn [nf]
            (((nf nextfact) ((pair one) zero)) fst)))

(fact (church 3))
